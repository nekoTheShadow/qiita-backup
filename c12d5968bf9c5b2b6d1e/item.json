{"rendered_body":"\n<h1>\n<span id=\"この記事の目的\" class=\"fragment\"></span><a href=\"#%E3%81%93%E3%81%AE%E8%A8%98%E4%BA%8B%E3%81%AE%E7%9B%AE%E7%9A%84\"><i class=\"fa fa-link\"></i></a>この記事の目的</h1>\n\n<p>「DBMSで何かしら確認したり作業したいが、サーバは構築するのは面倒」ということがよくあって、そういう場合によく使うDB起動ワンライナーをまとめたものです。</p>\n\n<p>なおセキュリティなどの考慮はしていないので、本番環境などでは絶対に利用してはいけません。ローカル環境で使い捨てる程度の利用にとどめてください。</p>\n\n<h1>\n<span id=\"私的ワンライナー集\" class=\"fragment\"></span><a href=\"#%E7%A7%81%E7%9A%84%E3%83%AF%E3%83%B3%E3%83%A9%E3%82%A4%E3%83%8A%E3%83%BC%E9%9B%86\"><i class=\"fa fa-link\"></i></a>私的ワンライナー集</h1>\n\n<h2>\n<span id=\"postgresql-db-testdb-user-testdb-password-passw0rd\" class=\"fragment\"></span><a href=\"#postgresql-db-testdb-user-testdb-password-passw0rd\"><i class=\"fa fa-link\"></i></a>PostgreSQL (db: testdb, user: testdb, password: passw0rd)</h2>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>docker run --rm -d \\\n  -p 5432:5432 \\\n  -e POSTGRES_USER=testuser \\\n  -e POSTGRES_PASSWORD=passw0rd \\\n  -e POSTGRES_DB=testdb \\\n  postgres:13\n</code></pre></div></div>\n\n<h2>\n<span id=\"mysql-db-testdb-user-testdb-password-passw0rd\" class=\"fragment\"></span><a href=\"#mysql-db-testdb-user-testdb-password-passw0rd\"><i class=\"fa fa-link\"></i></a>MySQL (db: testdb, user: testdb, password: passw0rd)</h2>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>docker run --rm -d \\\n  -p 3306:3306 \\\n  -e MYSQL_ROOT_PASSWORD=passw0rd \\\n  -e MYSQL_USER=testuser \\\n  -e MYSQL_PASSWORD=passw0rd  \\\n  -e MYSQL_DATABASE=testdb \\\n  mysql:8 --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci \n</code></pre></div></div>\n\n<h2>\n<span id=\"sqlserver-db-testdb-user-sa-password-1234hoge\" class=\"fragment\"></span><a href=\"#sqlserver-db-testdb-user-sa-password-1234hoge\"><i class=\"fa fa-link\"></i></a>SQLServer (db: testdb, user: sa, password: 1234@Hoge)</h2>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>docker run --rm -d \\\n  -p 1433:1433 \\\n  -e ACCEPT_EULA=Y \\\n  -e SA_PASSWORD=1234@Hoge \\\n  mcr.microsoft.com/mssql/server:2019-latest\n</code></pre></div></div>\n\n<h2>\n<span id=\"oracle-database-db-testdb-user-system-passowrd-passw0rd\" class=\"fragment\"></span><a href=\"#oracle-database-db-testdb-user-system-passowrd-passw0rd\"><i class=\"fa fa-link\"></i></a>Oracle Database (db: testdb, user: system, passowrd: passw0rd)</h2>\n\n<ul>\n<li>前提: 以下の手順に従って、環境を構築していること\n\n<ul>\n<li><a href=\"https://github.com/oracle/docker-images/blob/main/OracleDatabase/SingleInstance/README.md\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">https://github.com/oracle/docker-images/blob/main/OracleDatabase/SingleInstance/README.md</a></li>\n</ul>\n</li>\n<li>OracleのDockerイメージは起動が重たいので、作成したコンテナを使いまわす</li>\n</ul>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>docker run -d \\\n  -p 1521:1521 \\\n  -p 5500:5500 \\\n  -e ORACLE_PWD=passw0rd \\\n  -e ORACLE_PDB=testdb \\\n  oracle/database:19.3.0-se2\n</code></pre></div></div>\n\n<h2>\n<span id=\"db2-db-testdb-user-db2inst1-password-passw0rd\" class=\"fragment\"></span><a href=\"#db2-db-testdb-user-db2inst1-password-passw0rd\"><i class=\"fa fa-link\"></i></a>Db2 (db: testdb, user: db2inst1, password: passw0rd)</h2>\n\n<ul>\n<li>Db2のDockerイメージは起動が重たいので、作成したコンテナを使いまわす</li>\n<li>自分が利用しているGUIツールがDb2に対応していないので、以下のコマンドを実行して、CLIで接続する\n\n<ol>\n<li><code>docker exec -it &lt;containerid&gt; su - db2inst1 -c db2</code></li>\n<li><code>connect to testdb user db2inst1 using passw0rd</code></li>\n</ol>\n</li>\n</ul>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>docker run -d \\\n  --privileged=true \\\n  -p 50000:50000 \\\n  -e LICENSE=accept \\\n  -e DB2INST1_PASSWORD=passw0rd \\\n  -e DBNAME=testdb \\\n  ibmcom/db2:11.5.5.1\n</code></pre></div></div>\n","body":"# この記事の目的\n\n「DBMSで何かしら確認したり作業したいが、サーバは構築するのは面倒」ということがよくあって、そういう場合によく使うDB起動ワンライナーをまとめたものです。\n\nなおセキュリティなどの考慮はしていないので、本番環境などでは絶対に利用してはいけません。ローカル環境で使い捨てる程度の利用にとどめてください。\n\n# 私的ワンライナー集\n\n## PostgreSQL (db: testdb, user: testdb, password: passw0rd)\n\n```\ndocker run --rm -d \\\n  -p 5432:5432 \\\n  -e POSTGRES_USER=testuser \\\n  -e POSTGRES_PASSWORD=passw0rd \\\n  -e POSTGRES_DB=testdb \\\n  postgres:13\n```\n\n## MySQL (db: testdb, user: testdb, password: passw0rd)\n\n```\ndocker run --rm -d \\\n  -p 3306:3306 \\\n  -e MYSQL_ROOT_PASSWORD=passw0rd \\\n  -e MYSQL_USER=testuser \\\n  -e MYSQL_PASSWORD=passw0rd  \\\n  -e MYSQL_DATABASE=testdb \\\n  mysql:8 --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci \n```\n\n## SQLServer (db: testdb, user: sa, password: 1234@Hoge)\n\n```\ndocker run --rm -d \\\n  -p 1433:1433 \\\n  -e ACCEPT_EULA=Y \\\n  -e SA_PASSWORD=1234@Hoge \\\n  mcr.microsoft.com/mssql/server:2019-latest\n```\n\n## Oracle Database (db: testdb, user: system, passowrd: passw0rd)\n\n- 前提: 以下の手順に従って、環境を構築していること\n    - https://github.com/oracle/docker-images/blob/main/OracleDatabase/SingleInstance/README.md\n- OracleのDockerイメージは起動が重たいので、作成したコンテナを使いまわす\n\n```\ndocker run -d \\\n  -p 1521:1521 \\\n  -p 5500:5500 \\\n  -e ORACLE_PWD=passw0rd \\\n  -e ORACLE_PDB=testdb \\\n  oracle/database:19.3.0-se2\n```\n\n## Db2 (db: testdb, user: db2inst1, password: passw0rd)\n\n- Db2のDockerイメージは起動が重たいので、作成したコンテナを使いまわす\n- 自分が利用しているGUIツールがDb2に対応していないので、以下のコマンドを実行して、CLIで接続する\n    1. `docker exec -it <containerid> su - db2inst1 -c db2`\n    2. `connect to testdb user db2inst1 using passw0rd`\n\n```\ndocker run -d \\\n  --privileged=true \\\n  -p 50000:50000 \\\n  -e LICENSE=accept \\\n  -e DB2INST1_PASSWORD=passw0rd \\\n  -e DBNAME=testdb \\\n  ibmcom/db2:11.5.5.1\n```\n","coediting":false,"comments_count":0,"created_at":"2021-03-31T22:12:37+09:00","group":null,"id":"c12d5968bf9c5b2b6d1e","likes_count":2,"private":false,"reactions_count":0,"tags":[{"name":"Docker","versions":[]}],"title":"いろんなDBをDockerで雑に起動する私的ワンライナー集","updated_at":"2021-03-31T22:12:37+09:00","url":"https://qiita.com/neko_the_shadow/items/c12d5968bf9c5b2b6d1e","user":{"description":"IT業界の片隅でひっそり生きるシステムエンジニアです(´・ω・｀)","facebook_id":"","followees_count":0,"followers_count":36,"github_login_name":null,"id":"neko_the_shadow","items_count":194,"linkedin_id":"","location":"神奈川県川崎市","name":"","organization":"","permanent_id":105859,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/105859/profile-images/1473709753","team_only":false,"twitter_screen_name":"neko_the_shadow","website_url":"https://nekotheshadow.github.io/"},"page_views_count":null,"team_membership":null}