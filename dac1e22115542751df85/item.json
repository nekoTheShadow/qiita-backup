{"rendered_body":"<p>掲題の通り「JavaでファイルのMD5チェックサムを求めて、その結果を16進数表記の文字列として取得したい」という機会があり、四苦八苦して実装したので、そのメモになります。基本的には何かしらの外部ライブラリを利用することをお勧めします(´・ω・｀)</p>\n\n<p>まず、md5チェックサムを求める対象のファイルを以下のようなワンライナーを使って生成します。</p>\n\n<div class=\"code-frame\" data-lang=\"bash\"><div class=\"highlight\"><pre><code><span class=\"nb\">seq </span>5 | <span class=\"k\">while </span><span class=\"nb\">read </span>x<span class=\"p\">;</span> <span class=\"k\">do </span><span class=\"nb\">cat</span> /dev/urandom | <span class=\"nb\">tr</span> <span class=\"nt\">-cd</span> <span class=\"s1\">'a-zA-Z0-9'</span> | <span class=\"nb\">fold</span> <span class=\"nt\">-s5</span> | xargs <span class=\"nt\">-n5</span> | <span class=\"nb\">head</span> <span class=\"nt\">-n5</span> <span class=\"o\">&gt;</span> <span class=\"s2\">\"sample</span><span class=\"k\">${</span><span class=\"nv\">x</span><span class=\"k\">}</span><span class=\"s2\">.txt\"</span><span class=\"p\">;</span> <span class=\"k\">done</span> \n</code></pre></div></div>\n\n<p>これは英数字をランダムに並べたファイルを5つ作成するもので、その内容は以下のようになりました。</p>\n\n<div class=\"code-frame\" data-lang=\"bash\"><div class=\"highlight\"><pre><code><span class=\"nv\">$ </span>find sample<span class=\"k\">*</span>.txt | <span class=\"k\">while </span><span class=\"nb\">read </span>path<span class=\"p\">;</span> <span class=\"k\">do </span><span class=\"nb\">echo</span> <span class=\"s2\">\"===&gt; </span><span class=\"k\">${</span><span class=\"nv\">path</span><span class=\"k\">}</span><span class=\"s2\"> &lt;===\"</span><span class=\"p\">;</span> <span class=\"nb\">cat</span> <span class=\"k\">${</span><span class=\"nv\">path</span><span class=\"k\">}</span><span class=\"p\">;</span> <span class=\"k\">done</span>\n<span class=\"o\">===&gt;</span> sample1.txt &lt;<span class=\"o\">===</span>\nU959b Xxs05 jZ0XH 7Wrew MRmZB\ncJlj3 dCEZm qnjbH yy9QM ntuEy\nVXKle Se9uc i5UxP mppHQ LnOL2\nSNAXl oPGWk JYK7S ovkov JXnJ6\nGBlSy frjGp 1wSZ4 Zoiqx ynuaM\n<span class=\"o\">===&gt;</span> sample2.txt &lt;<span class=\"o\">===</span>\naSl1p ZNcQt EecBl ie3ox wihqz\nsvMsD 88Lar BzxXw IfdQT 0QNHI\nW3SD4 NQM76 5bZh5 BFhQs G7lmt\nLkNq4 cCfMR yOMqX c4AxQ LL7KG\nOuOPK GMbH4 IjiGf OFfUK McT3b\n<span class=\"o\">===&gt;</span> sample3.txt &lt;<span class=\"o\">===</span>\nEqmhh ioKSo AEMb8 Kdgo8 deFxc\nASilF deSpC 0TIzI ZGM17 OA932\nhSGXL LCy8q DDYAC 9hTiF nsDqH\nLQRZb k53VV 03NCY RhKjF tVggB\nJHmOx wilgw QZov5 StZ2g 9PGjn\n<span class=\"o\">===&gt;</span> sample4.txt &lt;<span class=\"o\">===</span>\n0Dx9Z 0Md5q w2cUT hp8gq rHIYB\nWD6X5 yjyiX DNNyY ZN9Yu IEEkc\nP6LnO Zlxwq wSopY Ke4KH oBAWh\n3REUX sMPCU 50VYL X14A4 UWuMy\n6bttJ 7DuHi i1zxV WlbAS LFANI\n<span class=\"o\">===&gt;</span> sample5.txt &lt;<span class=\"o\">===</span>\n8wOUf 80uxv zAHmA k9Yml knvKl\no61Cs CREZm APeOv 0wL1w mNIVs\ngWELy HtwT4 MWdgT 8VRqs drYhR\n6UJvA koZSX qNL9w elNTS CKKne\nr2Jop WlMWG 1Qwep 5yvBS 2dtCx\n</code></pre></div></div>\n\n<p>そして生成した5つのファイルについて、<code>md5sum</code>コマンドを利用し、MD5チェックサムを求めると、以下のようになるはずです。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>$ md5sum sample*.txt\n6777566a705dd85f1f0c2968bfcab2c8  sample1.txt\nbe520478d070207d07a3335d0ee2e2a4  sample2.txt\n4c47ca20b16046a13dbe50869bba368e  sample3.txt\n48ca253e12841800cf898ab090a04a0e  sample4.txt\nb378511f4b8878c338d602e5376f8426  sample5.txt\n</code></pre></div></div>\n\n<p>前置きが長くなりましたが、本題のmd5チェックサムを求めるJavaコードは以下の通りです。</p>\n\n<div class=\"code-frame\" data-lang=\"java\"><div class=\"highlight\"><pre><code><span class=\"kn\">import</span> <span class=\"nn\">java.io.IOException</span><span class=\"o\">;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">java.nio.file.Files</span><span class=\"o\">;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">java.nio.file.Path</span><span class=\"o\">;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">java.nio.file.Paths</span><span class=\"o\">;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">java.security.DigestInputStream</span><span class=\"o\">;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">java.security.MessageDigest</span><span class=\"o\">;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">java.security.NoSuchAlgorithmException</span><span class=\"o\">;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">java.util.List</span><span class=\"o\">;</span>\n\n\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">Main</span> <span class=\"o\">{</span>\n    <span class=\"kd\">public</span> <span class=\"kd\">static</span> <span class=\"kt\">void</span> <span class=\"nf\">main</span><span class=\"o\">(</span><span class=\"nc\">String</span><span class=\"o\">[]</span> <span class=\"n\">args</span><span class=\"o\">)</span> <span class=\"kd\">throws</span> <span class=\"nc\">NoSuchAlgorithmException</span><span class=\"o\">,</span> <span class=\"nc\">IOException</span> <span class=\"o\">{</span>\n        <span class=\"kt\">var</span> <span class=\"n\">filenames</span> <span class=\"o\">=</span> <span class=\"nc\">List</span><span class=\"o\">.</span><span class=\"na\">of</span><span class=\"o\">(</span>\n            <span class=\"s\">\"sample1.txt\"</span><span class=\"o\">,</span>\n            <span class=\"s\">\"sample2.txt\"</span><span class=\"o\">,</span>\n            <span class=\"s\">\"sample3.txt\"</span><span class=\"o\">,</span>\n            <span class=\"s\">\"sample4.txt\"</span><span class=\"o\">,</span>\n            <span class=\"s\">\"sample5.txt\"</span>\n        <span class=\"o\">);</span>\n\n        <span class=\"k\">for</span> <span class=\"o\">(</span><span class=\"kt\">var</span> <span class=\"n\">filename</span> <span class=\"o\">:</span> <span class=\"n\">filenames</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n            <span class=\"kt\">var</span> <span class=\"n\">md5</span> <span class=\"o\">=</span> <span class=\"n\">md5sum</span><span class=\"o\">(</span><span class=\"nc\">Paths</span><span class=\"o\">.</span><span class=\"na\">get</span><span class=\"o\">(</span><span class=\"n\">filename</span><span class=\"o\">));</span>\n            <span class=\"nc\">System</span><span class=\"o\">.</span><span class=\"na\">out</span><span class=\"o\">.</span><span class=\"na\">printf</span><span class=\"o\">(</span><span class=\"s\">\"%s  %s%n\"</span><span class=\"o\">,</span> <span class=\"n\">md5</span><span class=\"o\">,</span> <span class=\"n\">filename</span><span class=\"o\">);</span>\n        <span class=\"o\">}</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"kd\">public</span> <span class=\"kd\">static</span> <span class=\"nc\">String</span> <span class=\"nf\">md5sum</span><span class=\"o\">(</span><span class=\"nc\">Path</span> <span class=\"n\">path</span><span class=\"o\">)</span> <span class=\"kd\">throws</span> <span class=\"nc\">NoSuchAlgorithmException</span><span class=\"o\">,</span> <span class=\"nc\">IOException</span> <span class=\"o\">{</span>\n        <span class=\"kt\">var</span> <span class=\"n\">digest</span> <span class=\"o\">=</span> <span class=\"nc\">MessageDigest</span><span class=\"o\">.</span><span class=\"na\">getInstance</span><span class=\"o\">(</span><span class=\"s\">\"MD5\"</span><span class=\"o\">);</span>\n        <span class=\"k\">try</span> <span class=\"o\">(</span><span class=\"kt\">var</span> <span class=\"n\">input</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nc\">DigestInputStream</span><span class=\"o\">(</span><span class=\"nc\">Files</span><span class=\"o\">.</span><span class=\"na\">newInputStream</span><span class=\"o\">(</span><span class=\"n\">path</span><span class=\"o\">),</span> <span class=\"n\">digest</span><span class=\"o\">))</span> <span class=\"o\">{</span>\n            <span class=\"k\">while</span> <span class=\"o\">(</span><span class=\"n\">input</span><span class=\"o\">.</span><span class=\"na\">read</span><span class=\"o\">()</span> <span class=\"o\">!=</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n                <span class=\"c1\">// PASS;</span>\n            <span class=\"o\">}</span>\n\n            <span class=\"kt\">var</span> <span class=\"n\">hash</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nc\">StringBuilder</span><span class=\"o\">();</span>\n            <span class=\"k\">for</span> <span class=\"o\">(</span><span class=\"kt\">byte</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">digest</span><span class=\"o\">.</span><span class=\"na\">digest</span><span class=\"o\">())</span> <span class=\"o\">{</span>\n                <span class=\"n\">hash</span><span class=\"o\">.</span><span class=\"na\">append</span><span class=\"o\">(</span><span class=\"nc\">String</span><span class=\"o\">.</span><span class=\"na\">format</span><span class=\"o\">(</span><span class=\"s\">\"%02x\"</span><span class=\"o\">,</span> <span class=\"n\">b</span><span class=\"o\">));</span>\n            <span class=\"o\">}</span>\n            <span class=\"k\">return</span> <span class=\"n\">hash</span><span class=\"o\">.</span><span class=\"na\">toString</span><span class=\"o\">();</span>\n        <span class=\"o\">}</span> \n    <span class=\"o\">}</span>\n<span class=\"o\">}</span>\n</code></pre></div></div>\n\n<p>これを実行すると、以下のような出力が得られます。<code>md5sum</code>コマンドの結果と一致しているので、正しく求めることができたといえそうです(´・ω・｀)</p>\n\n<div class=\"code-frame\" data-lang=\"bash\"><div class=\"highlight\"><pre><code>6777566a705dd85f1f0c2968bfcab2c8  sample1.txt\nbe520478d070207d07a3335d0ee2e2a4  sample2.txt\n4c47ca20b16046a13dbe50869bba368e  sample3.txt\n48ca253e12841800cf898ab090a04a0e  sample4.txt\nb378511f4b8878c338d602e5376f8426  sample5.txt\n</code></pre></div></div>\n\n<p>また未確認ですが、上記Javaコードの<code>var digest = MessageDigest.getInstance(\"MD5\");</code>という部分を<code>var digest = MessageDigest.getInstance(\"SHA-1\");</code>や<code>var digest = MessageDigest.getInstance(\"SHA-256\");</code>に変更すれば、SHA-1やSHA-2チェックサムも求めることができると思います。</p>\n","body":"掲題の通り「JavaでファイルのMD5チェックサムを求めて、その結果を16進数表記の文字列として取得したい」という機会があり、四苦八苦して実装したので、そのメモになります。基本的には何かしらの外部ライブラリを利用することをお勧めします(´・ω・｀)\n\nまず、md5チェックサムを求める対象のファイルを以下のようなワンライナーを使って生成します。\n\n```bash\nseq 5 | while read x; do cat /dev/urandom | tr -cd 'a-zA-Z0-9' | fold -s5 | xargs -n5 | head -n5 > \"sample${x}.txt\"; done \n```\n\nこれは英数字をランダムに並べたファイルを5つ作成するもので、その内容は以下のようになりました。\n\n```bash\n$ find sample*.txt | while read path; do echo \"===> ${path} <===\"; cat ${path}; done\n===> sample1.txt <===\nU959b Xxs05 jZ0XH 7Wrew MRmZB\ncJlj3 dCEZm qnjbH yy9QM ntuEy\nVXKle Se9uc i5UxP mppHQ LnOL2\nSNAXl oPGWk JYK7S ovkov JXnJ6\nGBlSy frjGp 1wSZ4 Zoiqx ynuaM\n===> sample2.txt <===\naSl1p ZNcQt EecBl ie3ox wihqz\nsvMsD 88Lar BzxXw IfdQT 0QNHI\nW3SD4 NQM76 5bZh5 BFhQs G7lmt\nLkNq4 cCfMR yOMqX c4AxQ LL7KG\nOuOPK GMbH4 IjiGf OFfUK McT3b\n===> sample3.txt <===\nEqmhh ioKSo AEMb8 Kdgo8 deFxc\nASilF deSpC 0TIzI ZGM17 OA932\nhSGXL LCy8q DDYAC 9hTiF nsDqH\nLQRZb k53VV 03NCY RhKjF tVggB\nJHmOx wilgw QZov5 StZ2g 9PGjn\n===> sample4.txt <===\n0Dx9Z 0Md5q w2cUT hp8gq rHIYB\nWD6X5 yjyiX DNNyY ZN9Yu IEEkc\nP6LnO Zlxwq wSopY Ke4KH oBAWh\n3REUX sMPCU 50VYL X14A4 UWuMy\n6bttJ 7DuHi i1zxV WlbAS LFANI\n===> sample5.txt <===\n8wOUf 80uxv zAHmA k9Yml knvKl\no61Cs CREZm APeOv 0wL1w mNIVs\ngWELy HtwT4 MWdgT 8VRqs drYhR\n6UJvA koZSX qNL9w elNTS CKKne\nr2Jop WlMWG 1Qwep 5yvBS 2dtCx\n```\n\n\nそして生成した5つのファイルについて、`md5sum`コマンドを利用し、MD5チェックサムを求めると、以下のようになるはずです。\n\n```\n$ md5sum sample*.txt\n6777566a705dd85f1f0c2968bfcab2c8  sample1.txt\nbe520478d070207d07a3335d0ee2e2a4  sample2.txt\n4c47ca20b16046a13dbe50869bba368e  sample3.txt\n48ca253e12841800cf898ab090a04a0e  sample4.txt\nb378511f4b8878c338d602e5376f8426  sample5.txt\n```\n\n前置きが長くなりましたが、本題のmd5チェックサムを求めるJavaコードは以下の通りです。\n\n```java\nimport java.io.IOException;\nimport java.nio.file.Files;\nimport java.nio.file.Path;\nimport java.nio.file.Paths;\nimport java.security.DigestInputStream;\nimport java.security.MessageDigest;\nimport java.security.NoSuchAlgorithmException;\nimport java.util.List;\n\n\npublic class Main {\n\tpublic static void main(String[] args) throws NoSuchAlgorithmException, IOException {\n\t\tvar filenames = List.of(\n\t\t\t\"sample1.txt\",\n\t\t\t\"sample2.txt\",\n\t\t\t\"sample3.txt\",\n\t\t\t\"sample4.txt\",\n\t\t\t\"sample5.txt\"\n\t\t);\n\t\t\n\t\tfor (var filename : filenames) {\n\t\t\tvar md5 = md5sum(Paths.get(filename));\n\t\t\tSystem.out.printf(\"%s  %s%n\", md5, filename);\n\t\t}\n\t}\n\t\n\tpublic static String md5sum(Path path) throws NoSuchAlgorithmException, IOException {\n\t\tvar digest = MessageDigest.getInstance(\"MD5\");\n\t\ttry (var input = new DigestInputStream(Files.newInputStream(path), digest)) {\n\t\t\twhile (input.read() != -1) {\n\t\t\t\t// PASS;\n\t\t\t}\n\t\t\t\n\t\t\tvar hash = new StringBuilder();\n\t\t\tfor (byte b : digest.digest()) {\n\t\t\t\thash.append(String.format(\"%02x\", b));\n\t\t\t}\n\t\t\treturn hash.toString();\n\t\t} \n\t}\n}\n```\n\nこれを実行すると、以下のような出力が得られます。`md5sum`コマンドの結果と一致しているので、正しく求めることができたといえそうです(´・ω・｀)\n\n```bash\n6777566a705dd85f1f0c2968bfcab2c8  sample1.txt\nbe520478d070207d07a3335d0ee2e2a4  sample2.txt\n4c47ca20b16046a13dbe50869bba368e  sample3.txt\n48ca253e12841800cf898ab090a04a0e  sample4.txt\nb378511f4b8878c338d602e5376f8426  sample5.txt\n```\n\nまた未確認ですが、上記Javaコードの`var digest = MessageDigest.getInstance(\"MD5\");`という部分を`var digest = MessageDigest.getInstance(\"SHA-1\");`や`var digest = MessageDigest.getInstance(\"SHA-256\");`に変更すれば、SHA-1やSHA-2チェックサムも求めることができると思います。\n","coediting":false,"comments_count":0,"created_at":"2018-08-01T21:47:03+09:00","group":null,"id":"dac1e22115542751df85","likes_count":0,"private":false,"reactions_count":0,"tags":[{"name":"Java","versions":[]}],"title":"JavaでファイルのMD5チェックサムを求めて、その結果を16進数表記の文字列として取得したい。","updated_at":"2018-08-01T21:47:03+09:00","url":"https://qiita.com/neko_the_shadow/items/dac1e22115542751df85","user":{"description":"IT業界の片隅でひっそり生きるシステムエンジニアです(´・ω・｀)","facebook_id":"","followees_count":0,"followers_count":36,"github_login_name":null,"id":"neko_the_shadow","items_count":199,"linkedin_id":"","location":"神奈川県川崎市","name":"","organization":"","permanent_id":105859,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/105859/profile-images/1473709753","team_only":false,"twitter_screen_name":"neko_the_shadow","website_url":"https://nekotheshadow.github.io/"},"page_views_count":null,"team_membership":null}