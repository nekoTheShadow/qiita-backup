{"rendered_body":"\n<h1>\n<span id=\"実行環境\" class=\"fragment\"></span><a href=\"#%E5%AE%9F%E8%A1%8C%E7%92%B0%E5%A2%83\"><i class=\"fa fa-link\"></i></a>実行環境</h1>\n\n<p>本記事を書くにあたって、利用した主なソフトウェアのバージョンは次の通りです。なおOracle Databaseの構築にあたってはDockerおよび<a href=\"https://github.com/oracle/docker-images\" rel=\"nofollow noopener\" target=\"_blank\">Oracle公式のDocker Image</a>を利用しています。</p>\n\n<table>\n<thead>\n<tr>\n<th>software</th>\n<th>version, edition</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Oracle Database 12c</td>\n<td>Oracle Database 12c Standard Edition Release 12.2.0.1.0 - 64bit Production</td>\n</tr>\n<tr>\n<td>ojdbc8.jar (12c JDBC Driver)</td>\n<td>Oracle 12.2.0.1.0 JDBC 4.2 compiled with javac 1.8.0_91 on Tue_Dec_13_06:08:31_PST_2016</td>\n</tr>\n<tr>\n<td>javac</td>\n<td>javac 11.0.4</td>\n</tr>\n<tr>\n<td>java</td>\n<td>openjdk version \"11.0.4\" 2019-07-16</td>\n</tr>\n</tbody>\n</table>\n\n<h1>\n<span id=\"概要\" class=\"fragment\"></span><a href=\"#%E6%A6%82%E8%A6%81\"><i class=\"fa fa-link\"></i></a>概要</h1>\n\n<p>Oracle DatabaseのNLSパラメータはさまざまな設定方法があるため、「どこの設定値がどう影響しているのかわからん!」ということが起きるのですが、Oracle Databaseとの接続にJDBCドライバを利用している場合、クライアントとなるJavaのロケールによりNLSパラメータが変わる場合があります。</p>\n\n<p><a href=\"https://docs.oracle.com/cd/E96517_01/ladbi/setting-language-preferences-for-client-connections.html#GUID-78A71337-2199-4FED-B0F1-D313F769B22C\" rel=\"nofollow noopener\" target=\"_blank\">「Databaseインストレーション・ガイドfor Linux - クライアント接続の言語およびロケール・プリファレンスの設定」</a>より抜粋:</p>\n\n<blockquote>\n<p>Oracle Databaseへの接続にOracle JDBCを使用するJavaアプリケーションでは、NLS_LANGを使用しません。かわりにOracle JDBCでは、アプリケーションを実行しているJava VMのデフォルトのロケールをOracle Databaseのlanguageとterritoryの設定にマップします。</p>\n</blockquote>\n\n<h1>\n<span id=\"実験\" class=\"fragment\"></span><a href=\"#%E5%AE%9F%E9%A8%93\"><i class=\"fa fa-link\"></i></a>実験</h1>\n\n<p>実験してみましょう。以下はJDBCを利用し、NLSパラメータの現在の設定値を格納している<code>V$NLS_PARAMETERS</code>の内容をすべて出力するJavaアプリケーションです。</p>\n\n<div class=\"code-frame\" data-lang=\"java\">\n<div class=\"code-lang\"><span class=\"bold\">Main1.java</span></div>\n<div class=\"highlight\"><pre><span class=\"kn\">import</span> <span class=\"nn\">java.sql.Connection</span><span class=\"o\">;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">java.sql.DriverManager</span><span class=\"o\">;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">java.sql.ResultSet</span><span class=\"o\">;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">java.sql.SQLException</span><span class=\"o\">;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">java.sql.Statement</span><span class=\"o\">;</span>\n\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">Main1</span> <span class=\"o\">{</span>\n    <span class=\"kd\">public</span> <span class=\"kd\">static</span> <span class=\"kt\">void</span> <span class=\"nf\">main</span><span class=\"o\">(</span><span class=\"nc\">String</span><span class=\"o\">[]</span> <span class=\"n\">args</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"nc\">String</span> <span class=\"n\">url</span> <span class=\"o\">=</span> <span class=\"s\">\"jdbc:oracle:thin:@//192.168.99.100:1521/ORCLPDB1\"</span><span class=\"o\">;</span>\n        <span class=\"nc\">String</span> <span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"s\">\"dev1\"</span><span class=\"o\">;</span>\n        <span class=\"nc\">String</span> <span class=\"n\">password</span> <span class=\"o\">=</span> <span class=\"s\">\"password\"</span><span class=\"o\">;</span>\n\n        <span class=\"k\">try</span> <span class=\"o\">(</span><span class=\"nc\">Connection</span> <span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"nc\">DriverManager</span><span class=\"o\">.</span><span class=\"na\">getConnection</span><span class=\"o\">(</span><span class=\"n\">url</span><span class=\"o\">,</span> <span class=\"n\">user</span><span class=\"o\">,</span> <span class=\"n\">password</span><span class=\"o\">))</span> <span class=\"o\">{</span>\n            <span class=\"nc\">Statement</span> <span class=\"n\">stmt</span> <span class=\"o\">=</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"na\">createStatement</span><span class=\"o\">();</span>\n            <span class=\"nc\">ResultSet</span> <span class=\"n\">rs</span> <span class=\"o\">=</span> <span class=\"n\">stmt</span><span class=\"o\">.</span><span class=\"na\">executeQuery</span><span class=\"o\">(</span><span class=\"s\">\"SELECT * FROM V$NLS_PARAMETERS ORDER BY PARAMETER\"</span><span class=\"o\">);</span>\n            <span class=\"k\">while</span> <span class=\"o\">(</span><span class=\"n\">rs</span><span class=\"o\">.</span><span class=\"na\">next</span><span class=\"o\">())</span> <span class=\"o\">{</span>\n                <span class=\"nc\">String</span> <span class=\"n\">parameter</span> <span class=\"o\">=</span> <span class=\"n\">rs</span><span class=\"o\">.</span><span class=\"na\">getString</span><span class=\"o\">(</span><span class=\"s\">\"PARAMETER\"</span><span class=\"o\">);</span>\n                <span class=\"nc\">String</span> <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">rs</span><span class=\"o\">.</span><span class=\"na\">getString</span><span class=\"o\">(</span><span class=\"s\">\"VALUE\"</span><span class=\"o\">);</span>\n                <span class=\"nc\">System</span><span class=\"o\">.</span><span class=\"na\">out</span><span class=\"o\">.</span><span class=\"na\">printf</span><span class=\"o\">(</span><span class=\"s\">\"%s = %s%n\"</span><span class=\"o\">,</span> <span class=\"n\">parameter</span><span class=\"o\">,</span> <span class=\"n\">value</span><span class=\"o\">);</span>\n            <span class=\"o\">}</span>\n        <span class=\"o\">}</span> <span class=\"k\">catch</span> <span class=\"o\">(</span><span class=\"nc\">SQLException</span> <span class=\"n\">e</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n            <span class=\"n\">e</span><span class=\"o\">.</span><span class=\"na\">printStackTrace</span><span class=\"o\">();</span>\n        <span class=\"o\">}</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">}</span>\n</pre></div>\n</div>\n\n<p>これをJavaのロケールを変更して実行してみましょう。まずは日本語。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>$ java -Duser.language=ja -Duser.country=JP -cp .:../lib/ojdbc8.jar Main1\nNLS_CALENDAR = GREGORIAN\nNLS_CHARACTERSET = AL32UTF8\nNLS_COMP = BINARY\nNLS_CURRENCY = ¥\nNLS_DATE_FORMAT = RR-MM-DD\nNLS_DATE_LANGUAGE = JAPANESE\nNLS_DUAL_CURRENCY = \\\nNLS_ISO_CURRENCY = JAPAN\nNLS_LANGUAGE = JAPANESE\nNLS_LENGTH_SEMANTICS = BYTE\nNLS_NCHAR_CHARACTERSET = AL16UTF16\nNLS_NCHAR_CONV_EXCP = FALSE\nNLS_NUMERIC_CHARACTERS = .,\nNLS_SORT = BINARY\nNLS_TERRITORY = JAPAN\nNLS_TIMESTAMP_FORMAT = RR-MM-DD HH24:MI:SSXFF\nNLS_TIMESTAMP_TZ_FORMAT = RR-MM-DD HH24:MI:SSXFF TZR\nNLS_TIME_FORMAT = HH24:MI:SSXFF\nNLS_TIME_TZ_FORMAT = HH24:MI:SSXFF TZR\n</pre></div></div>\n\n<p>次は英語。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>$ java -Duser.language=en -Duser.country=US -cp .:../lib/ojdbc8.jar Main1\nNLS_CALENDAR = GREGORIAN\nNLS_CHARACTERSET = AL32UTF8\nNLS_COMP = BINARY\nNLS_CURRENCY = $\nNLS_DATE_FORMAT = DD-MON-RR\nNLS_DATE_LANGUAGE = AMERICAN\nNLS_DUAL_CURRENCY = $\nNLS_ISO_CURRENCY = AMERICA\nNLS_LANGUAGE = AMERICAN\nNLS_LENGTH_SEMANTICS = BYTE\nNLS_NCHAR_CHARACTERSET = AL16UTF16\nNLS_NCHAR_CONV_EXCP = FALSE\nNLS_NUMERIC_CHARACTERS = .,\nNLS_SORT = BINARY\nNLS_TERRITORY = AMERICA\nNLS_TIMESTAMP_FORMAT = DD-MON-RR HH.MI.SSXFF AM\nNLS_TIMESTAMP_TZ_FORMAT = DD-MON-RR HH.MI.SSXFF AM TZR\nNLS_TIME_FORMAT = HH.MI.SSXFF AM\nNLS_TIME_TZ_FORMAT = HH.MI.SSXFF AM TZR\n</pre></div></div>\n\n<p>Oracle Database側の設定をまったく変更していないにも関わらず、クライアント側のロケールによってNLSパラメータが変わってしまうことがわかりました。</p>\n\n<h1>\n<span id=\"何が恐ろしいのか\" class=\"fragment\"></span><a href=\"#%E4%BD%95%E3%81%8C%E6%81%90%E3%82%8D%E3%81%97%E3%81%84%E3%81%AE%E3%81%8B\"><i class=\"fa fa-link\"></i></a>何が恐ろしいのか</h1>\n\n<p>このふるまいの何が恐ろしいかというと、以下のようなことが起きかねないということにあります。</p>\n\n<ul>\n<li>Windows PCでは正常に稼働したモジュールがLinuxサーバでは正常に稼働しない。</li>\n<li>開発機と本番機でアプリケーションサーバのロケール設定が違うため、NLSパラメータにも違いが生じて、結果として同じJavaモジュールが開発機と本番機で動作に違いが出る</li>\n</ul>\n\n<p>要はJavaアプリケーションが環境によって、違う振る舞いを起こす可能性があるということです。経験値豊かなJavaプログラマであれば、DBMSやロケールに依存しないプログラミングを心掛けるとは思いますが、そうもいかない現実があるわけですね(´・ω・｀)</p>\n\n<h1>\n<span id=\"具体例-文字列型からtimestamp型への暗黙の型変換\" class=\"fragment\"></span><a href=\"#%E5%85%B7%E4%BD%93%E4%BE%8B-%E6%96%87%E5%AD%97%E5%88%97%E5%9E%8B%E3%81%8B%E3%82%89timestamp%E5%9E%8B%E3%81%B8%E3%81%AE%E6%9A%97%E9%BB%99%E3%81%AE%E5%9E%8B%E5%A4%89%E6%8F%9B\"><i class=\"fa fa-link\"></i></a>具体例: 文字列型からTIMESTAMP型への暗黙の型変換</h1>\n\n<p>このふるまいにより、問題が発生するより具体的な例を示して終わりとします。</p>\n\n<p>以下のような<code>users</code>というテーブルがあるとします。このテーブルはユーザの名前<code>name</code>とレコードの更新時間<code>updated_at</code>をそれぞれ有しているとしましょう (よくある構成ですね)</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>CREATE TABLE users (\n  name VARCHAR2(256 CHAR),\n  updated_at TIMESTAMP\n)\n</pre></div></div>\n\n<p>以下の<code>Main2.java</code>はこの<code>users</code>テーブルにデータを挿入するJavaアプリケーションです。</p>\n\n<div class=\"code-frame\" data-lang=\"java\">\n<div class=\"code-lang\"><span class=\"bold\">Main2.java</span></div>\n<div class=\"highlight\"><pre><span class=\"kn\">import</span> <span class=\"nn\">java.sql.Connection</span><span class=\"o\">;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">java.sql.DriverManager</span><span class=\"o\">;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">java.sql.PreparedStatement</span><span class=\"o\">;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">java.sql.SQLException</span><span class=\"o\">;</span>\n\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">Main2</span> <span class=\"o\">{</span>\n    <span class=\"kd\">public</span> <span class=\"kd\">static</span> <span class=\"kt\">void</span> <span class=\"nf\">main</span><span class=\"o\">(</span><span class=\"nc\">String</span><span class=\"o\">[]</span> <span class=\"n\">args</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"nc\">String</span> <span class=\"n\">url</span> <span class=\"o\">=</span> <span class=\"s\">\"jdbc:oracle:thin:@//192.168.99.100:1521/ORCLPDB1\"</span><span class=\"o\">;</span>\n        <span class=\"nc\">String</span> <span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"s\">\"dev1\"</span><span class=\"o\">;</span>\n        <span class=\"nc\">String</span> <span class=\"n\">password</span> <span class=\"o\">=</span> <span class=\"s\">\"password\"</span><span class=\"o\">;</span>\n\n        <span class=\"k\">try</span> <span class=\"o\">(</span><span class=\"nc\">Connection</span> <span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"nc\">DriverManager</span><span class=\"o\">.</span><span class=\"na\">getConnection</span><span class=\"o\">(</span><span class=\"n\">url</span><span class=\"o\">,</span> <span class=\"n\">user</span><span class=\"o\">,</span> <span class=\"n\">password</span><span class=\"o\">))</span> <span class=\"o\">{</span>\n            <span class=\"nc\">PreparedStatement</span> <span class=\"n\">pstmt</span> <span class=\"o\">=</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"na\">prepareStatement</span><span class=\"o\">(</span><span class=\"s\">\"INSERT INTO users (name, updated_at) VALUES (?, ?)\"</span><span class=\"o\">);</span>\n            <span class=\"n\">pstmt</span><span class=\"o\">.</span><span class=\"na\">setString</span><span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"s\">\"nekoTheShadow\"</span><span class=\"o\">);</span>\n            <span class=\"n\">pstmt</span><span class=\"o\">.</span><span class=\"na\">setString</span><span class=\"o\">(</span><span class=\"mi\">2</span><span class=\"o\">,</span> <span class=\"s\">\"20200117\"</span><span class=\"o\">);</span>\n            <span class=\"kt\">int</span> <span class=\"n\">count</span> <span class=\"o\">=</span> <span class=\"n\">pstmt</span><span class=\"o\">.</span><span class=\"na\">executeUpdate</span><span class=\"o\">();</span>\n\n            <span class=\"nc\">System</span><span class=\"o\">.</span><span class=\"na\">out</span><span class=\"o\">.</span><span class=\"na\">printf</span><span class=\"o\">(</span><span class=\"s\">\"PreparedStatement::executeUpdate = %d%n\"</span><span class=\"o\">,</span> <span class=\"n\">count</span><span class=\"o\">);</span>\n        <span class=\"o\">}</span> <span class=\"k\">catch</span> <span class=\"o\">(</span><span class=\"nc\">SQLException</span> <span class=\"n\">e</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n            <span class=\"n\">e</span><span class=\"o\">.</span><span class=\"na\">printStackTrace</span><span class=\"o\">();</span>\n        <span class=\"o\">}</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">}</span>\n</pre></div>\n</div>\n\n<p><strong>ここで着目してほしいのは、<code>TIMESTAMP</code>型のカラムである<code>updated_at</code>に文字列型の値(<code>\"20200117\"</code>)を挿入しようとしていることです。</strong>この場合はOracle Databaseの「暗黙の型変換」機能によって、文字列型から<code>TIMESTAMP</code>型へ返還されます。そして、どのように「暗黙の型変換」されるのかについては、NLSパラメータに強く依存します。</p>\n\n<p>では、この<code>Main2.java</code>をロケールを変えて実行してみましょう。まずは日本語。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>$ java -Duser.language=ja -Duser.country=JP -cp .:../lib/ojdbc8.jar Main2\nPreparedStatement::executeUpdate = 1\n</pre></div></div>\n\n<p>ただしくデータが挿入されたようです。次に英語で実行します。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>$ java -Duser.language=en -Duser.country=US -cp .:../lib/ojdbc8.jar Main2\njava.sql.SQLDataException: ORA-01843: not a valid month\n\n        at oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:494)\n        at oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:446)\n        at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:1054)\n        at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:623)\n        at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:252)\n        at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:612)\n        at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:226)\n        at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:59)\n        at oracle.jdbc.driver.T4CPreparedStatement.executeForRows(T4CPreparedStatement.java:910)\n        at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1119)\n        at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3780)\n        at oracle.jdbc.driver.T4CPreparedStatement.executeInternal(T4CPreparedStatement.java:1343)\n        at oracle.jdbc.driver.OraclePreparedStatement.executeLargeUpdate(OraclePreparedStatement.java:3865)\n        at oracle.jdbc.driver.OraclePreparedStatement.executeUpdate(OraclePreparedStatement.java:3845)\n        at oracle.jdbc.driver.OraclePreparedStatementWrapper.executeUpdate(OraclePreparedStatementWrapper.java:1061)\n        at Main2.main(Main2.java:16)\nCaused by: Error : 1843, Position : 51, Sql = INSERT INTO users (name, updated_at) VALUES (:1 , :2 ), OriginalSql = INSERT INTO users (name, updated_at) VALUES (?, ?), Error Msg = ORA-01843: not a valid month\n\n        at oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:498)\n        ... 15 more\n</pre></div></div>\n\n<p>ロケール=日本の場合は想定通り動作したにもかかわらず、ロケール=英語に変えたとたん、Exceptionを投げる結果になりました。しかも、Exception内容がかなりわかりにくいというか、少なくともロケールに端を発した問題であるとは一目ではわかりません。なお、解決策としては、暗黙の型変換をしないこと、もしくは、Javaの<code>Date</code>型を利用することにつきます。</p>\n","body":"# 実行環境\n\n本記事を書くにあたって、利用した主なソフトウェアのバージョンは次の通りです。なおOracle Databaseの構築にあたってはDockerおよび[Oracle公式のDocker Image](https://github.com/oracle/docker-images)を利用しています。\n\n|software|version, edition|\n|---|---|\n| Oracle Database 12c | Oracle Database 12c Standard Edition Release 12.2.0.1.0 - 64bit Production |\n| ojdbc8.jar (12c JDBC Driver) | Oracle 12.2.0.1.0 JDBC 4.2 compiled with javac 1.8.0_91 on Tue_Dec_13_06:08:31_PST_2016 |\n| javac | javac 11.0.4 |\n| java | openjdk version \"11.0.4\" 2019-07-16 |\n\n# 概要\n\nOracle DatabaseのNLSパラメータはさまざまな設定方法があるため、「どこの設定値がどう影響しているのかわからん!」ということが起きるのですが、Oracle Databaseとの接続にJDBCドライバを利用している場合、クライアントとなるJavaのロケールによりNLSパラメータが変わる場合があります。\n\n[「Databaseインストレーション・ガイドfor Linux - クライアント接続の言語およびロケール・プリファレンスの設定」](https://docs.oracle.com/cd/E96517_01/ladbi/setting-language-preferences-for-client-connections.html#GUID-78A71337-2199-4FED-B0F1-D313F769B22C)より抜粋:\n\n> Oracle Databaseへの接続にOracle JDBCを使用するJavaアプリケーションでは、NLS_LANGを使用しません。かわりにOracle JDBCでは、アプリケーションを実行しているJava VMのデフォルトのロケールをOracle Databaseのlanguageとterritoryの設定にマップします。\n\n# 実験\n\n実験してみましょう。以下はJDBCを利用し、NLSパラメータの現在の設定値を格納している`V$NLS_PARAMETERS`の内容をすべて出力するJavaアプリケーションです。\n\n```java:Main1.java\nimport java.sql.Connection;\nimport java.sql.DriverManager;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.sql.Statement;\n\npublic class Main1 {\n    public static void main(String[] args) {\n        String url = \"jdbc:oracle:thin:@//192.168.99.100:1521/ORCLPDB1\";\n        String user = \"dev1\";\n        String password = \"password\";\n\n        try (Connection c = DriverManager.getConnection(url, user, password)) {\n            Statement stmt = c.createStatement();\n            ResultSet rs = stmt.executeQuery(\"SELECT * FROM V$NLS_PARAMETERS ORDER BY PARAMETER\");\n            while (rs.next()) {\n                String parameter = rs.getString(\"PARAMETER\");\n                String value = rs.getString(\"VALUE\");\n                System.out.printf(\"%s = %s%n\", parameter, value);\n            }\n        } catch (SQLException e) {\n            e.printStackTrace();\n        }\n    }\n}\n```\n\nこれをJavaのロケールを変更して実行してみましょう。まずは日本語。\n\n```\n$ java -Duser.language=ja -Duser.country=JP -cp .:../lib/ojdbc8.jar Main1\nNLS_CALENDAR = GREGORIAN\nNLS_CHARACTERSET = AL32UTF8\nNLS_COMP = BINARY\nNLS_CURRENCY = ¥\nNLS_DATE_FORMAT = RR-MM-DD\nNLS_DATE_LANGUAGE = JAPANESE\nNLS_DUAL_CURRENCY = \\\nNLS_ISO_CURRENCY = JAPAN\nNLS_LANGUAGE = JAPANESE\nNLS_LENGTH_SEMANTICS = BYTE\nNLS_NCHAR_CHARACTERSET = AL16UTF16\nNLS_NCHAR_CONV_EXCP = FALSE\nNLS_NUMERIC_CHARACTERS = .,\nNLS_SORT = BINARY\nNLS_TERRITORY = JAPAN\nNLS_TIMESTAMP_FORMAT = RR-MM-DD HH24:MI:SSXFF\nNLS_TIMESTAMP_TZ_FORMAT = RR-MM-DD HH24:MI:SSXFF TZR\nNLS_TIME_FORMAT = HH24:MI:SSXFF\nNLS_TIME_TZ_FORMAT = HH24:MI:SSXFF TZR\n```\n\n次は英語。\n\n```\n$ java -Duser.language=en -Duser.country=US -cp .:../lib/ojdbc8.jar Main1\nNLS_CALENDAR = GREGORIAN\nNLS_CHARACTERSET = AL32UTF8\nNLS_COMP = BINARY\nNLS_CURRENCY = $\nNLS_DATE_FORMAT = DD-MON-RR\nNLS_DATE_LANGUAGE = AMERICAN\nNLS_DUAL_CURRENCY = $\nNLS_ISO_CURRENCY = AMERICA\nNLS_LANGUAGE = AMERICAN\nNLS_LENGTH_SEMANTICS = BYTE\nNLS_NCHAR_CHARACTERSET = AL16UTF16\nNLS_NCHAR_CONV_EXCP = FALSE\nNLS_NUMERIC_CHARACTERS = .,\nNLS_SORT = BINARY\nNLS_TERRITORY = AMERICA\nNLS_TIMESTAMP_FORMAT = DD-MON-RR HH.MI.SSXFF AM\nNLS_TIMESTAMP_TZ_FORMAT = DD-MON-RR HH.MI.SSXFF AM TZR\nNLS_TIME_FORMAT = HH.MI.SSXFF AM\nNLS_TIME_TZ_FORMAT = HH.MI.SSXFF AM TZR\n```\n\nOracle Database側の設定をまったく変更していないにも関わらず、クライアント側のロケールによってNLSパラメータが変わってしまうことがわかりました。\n\n# 何が恐ろしいのか\n\nこのふるまいの何が恐ろしいかというと、以下のようなことが起きかねないということにあります。\n\n- Windows PCでは正常に稼働したモジュールがLinuxサーバでは正常に稼働しない。\n- 開発機と本番機でアプリケーションサーバのロケール設定が違うため、NLSパラメータにも違いが生じて、結果として同じJavaモジュールが開発機と本番機で動作に違いが出る\n\n要はJavaアプリケーションが環境によって、違う振る舞いを起こす可能性があるということです。経験値豊かなJavaプログラマであれば、DBMSやロケールに依存しないプログラミングを心掛けるとは思いますが、そうもいかない現実があるわけですね(´・ω・｀)\n\n# 具体例: 文字列型からTIMESTAMP型への暗黙の型変換\n\nこのふるまいにより、問題が発生するより具体的な例を示して終わりとします。\n\n以下のような`users`というテーブルがあるとします。このテーブルはユーザの名前`name`とレコードの更新時間`updated_at`をそれぞれ有しているとしましょう (よくある構成ですね)\n\n```\nCREATE TABLE users (\n  name VARCHAR2(256 CHAR),\n  updated_at TIMESTAMP\n)\n```\n\n以下の`Main2.java`はこの`users`テーブルにデータを挿入するJavaアプリケーションです。\n\n```java:Main2.java\nimport java.sql.Connection;\nimport java.sql.DriverManager;\nimport java.sql.PreparedStatement;\nimport java.sql.SQLException;\n\npublic class Main2 {\n    public static void main(String[] args) {\n        String url = \"jdbc:oracle:thin:@//192.168.99.100:1521/ORCLPDB1\";\n        String user = \"dev1\";\n        String password = \"password\";\n\n        try (Connection c = DriverManager.getConnection(url, user, password)) {\n            PreparedStatement pstmt = c.prepareStatement(\"INSERT INTO users (name, updated_at) VALUES (?, ?)\");\n            pstmt.setString(1, \"nekoTheShadow\");\n            pstmt.setString(2, \"20200117\");\n            int count = pstmt.executeUpdate();\n\n            System.out.printf(\"PreparedStatement::executeUpdate = %d%n\", count);\n        } catch (SQLException e) {\n            e.printStackTrace();\n        }\n    }\n}\n```\n\n__ここで着目してほしいのは、`TIMESTAMP`型のカラムである`updated_at`に文字列型の値(`\"20200117\"`)を挿入しようとしていることです。__この場合はOracle Databaseの「暗黙の型変換」機能によって、文字列型から`TIMESTAMP`型へ返還されます。そして、どのように「暗黙の型変換」されるのかについては、NLSパラメータに強く依存します。\n\nでは、この`Main2.java`をロケールを変えて実行してみましょう。まずは日本語。\n\n```\n$ java -Duser.language=ja -Duser.country=JP -cp .:../lib/ojdbc8.jar Main2\nPreparedStatement::executeUpdate = 1\n```\n\nただしくデータが挿入されたようです。次に英語で実行します。\n\n```\n$ java -Duser.language=en -Duser.country=US -cp .:../lib/ojdbc8.jar Main2\njava.sql.SQLDataException: ORA-01843: not a valid month\n\n        at oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:494)\n        at oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:446)\n        at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:1054)\n        at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:623)\n        at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:252)\n        at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:612)\n        at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:226)\n        at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:59)\n        at oracle.jdbc.driver.T4CPreparedStatement.executeForRows(T4CPreparedStatement.java:910)\n        at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1119)\n        at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3780)\n        at oracle.jdbc.driver.T4CPreparedStatement.executeInternal(T4CPreparedStatement.java:1343)\n        at oracle.jdbc.driver.OraclePreparedStatement.executeLargeUpdate(OraclePreparedStatement.java:3865)\n        at oracle.jdbc.driver.OraclePreparedStatement.executeUpdate(OraclePreparedStatement.java:3845)\n        at oracle.jdbc.driver.OraclePreparedStatementWrapper.executeUpdate(OraclePreparedStatementWrapper.java:1061)\n        at Main2.main(Main2.java:16)\nCaused by: Error : 1843, Position : 51, Sql = INSERT INTO users (name, updated_at) VALUES (:1 , :2 ), OriginalSql = INSERT INTO users (name, updated_at) VALUES (?, ?), Error Msg = ORA-01843: not a valid month\n\n        at oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:498)\n        ... 15 more\n```\n\nロケール=日本の場合は想定通り動作したにもかかわらず、ロケール=英語に変えたとたん、Exceptionを投げる結果になりました。しかも、Exception内容がかなりわかりにくいというか、少なくともロケールに端を発した問題であるとは一目ではわかりません。なお、解決策としては、暗黙の型変換をしないこと、もしくは、Javaの`Date`型を利用することにつきます。\n\n\n","coediting":false,"comments_count":0,"created_at":"2020-01-17T01:06:33+09:00","group":null,"id":"baca14a933ddc9d3d562","likes_count":3,"private":false,"reactions_count":0,"tags":[{"name":"Java","versions":[]},{"name":"oracle","versions":[]}],"title":"JDBCを利用する場合、NLSパラメータはJavaのロケールに影響される。","updated_at":"2020-01-17T01:06:33+09:00","url":"https://qiita.com/neko_the_shadow/items/baca14a933ddc9d3d562","user":{"description":"IT業界の片隅でひっそり生きるシステムエンジニアです(´・ω・｀)","facebook_id":"","followees_count":0,"followers_count":33,"github_login_name":null,"id":"neko_the_shadow","items_count":171,"linkedin_id":"","location":"神奈川県川崎市","name":"","organization":"","permanent_id":105859,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/105859/profile-images/1473709753","team_only":false,"twitter_screen_name":"neko_the_shadow","website_url":"https://nekotheshadow.github.io/"},"page_views_count":null}