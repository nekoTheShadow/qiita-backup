{"rendered_body":"<p>注意:本記事は以下の環境により動作確認をしています。</p>\n\n<table>\n<thead>\n<tr>\n<th style=\"text-align: center\"></th>\n<th style=\"text-align: center\"></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align: center\">ゲストOS</td>\n<td style=\"text-align: center\">CentOS Linux release 7.4.1708 (Core)</td>\n</tr>\n<tr>\n<td style=\"text-align: center\">ホストOS</td>\n<td style=\"text-align: center\">Windows 10</td>\n</tr>\n<tr>\n<td style=\"text-align: center\">仮想化ソフト</td>\n<td style=\"text-align: center\">VMware Workstation 14 Player</td>\n</tr>\n</tbody>\n</table>\n\n<hr>\n\n<p>2018年の正月はC#の勉強をするつもりでいたのですが、なぜかDockerを触っていました(´・ω・｀) どうしてこうなった(´・ω・｀)</p>\n\n<p>それはさておきCentOS7.4でDockerをインストールした際のメモを共有します。といっても<a href=\"https://docs.docker.com/engine/installation/linux/docker-ce/centos/#install-docker-ce-1\" rel=\"nofollow noopener\" target=\"_blank\">Docker公式</a>の指示通り、進めていくだけ。それを読むことすら面倒というものぐさな人は以下のコマンドを順番にたたいていくだけで、Docker環境が構築できます(もちろんrootユーザで実行するか、すべてのコマンドにsudoを付与する必要があります)。</p>\n\n<div class=\"code-frame\" data-lang=\"bash\"><div class=\"highlight\"><pre><code>yum remove docker docker-common docker-selinux docker-engine\nyum <span class=\"nb\">install</span> <span class=\"nt\">-y</span> yum-utils device-mapper-persistent-data lvm2\nyum-config-manager <span class=\"nt\">--add-repo</span> https://download.docker.com/linux/centos/docker-ce.repo\nyum <span class=\"nb\">install </span>docker-ce\n</code></pre></div></div>\n\n<p>この時点でDockerが停止している場合は、以下のコマンドによりサービスを活性化させましょう。</p>\n\n<div class=\"code-frame\" data-lang=\"bash\"><div class=\"highlight\"><pre><code>systemctl start docker.service\n</code></pre></div></div>\n\n<p>ちなみにDockerが正常に活性化したかどうかは以下のコマンドで確認することができます。</p>\n\n<div class=\"code-frame\" data-lang=\"bash\"><div class=\"highlight\"><pre><code>systemctl status docker\n</code></pre></div></div>\n\n<hr>\n\n<p>せっかくDocker環境を構築したので、Docker Imageをインストールしてみたいと思います。今回練習に利用するのがDb2 Express-C。IBMが誇るRDBMSの無償版ですね。IBMが公式でDocker Imageを用意してくれているので、これを利用します。といっても<a href=\"https://hub.docker.com/r/ibmcom/db2express-c/\" rel=\"nofollow noopener\" target=\"_blank\">Docker Hubの当該ページのREADME</a>に指示されている通りにコマンドをたたくだけ。それを読むことすら面倒というものぐさな人(2回目)はまず<code>docker pull</code>コマンドによりimageをインストールします。</p>\n\n<div class=\"code-frame\" data-lang=\"bash\"><div class=\"highlight\"><pre><code>docker pull ibmcom/db2express-c\n</code></pre></div></div>\n\n<p>インストール後は<code>docker run</code>コマンドでコンテナを起動します。このとき環境変数<code>DB2INST1_PASSWORD</code>は自分のわかりやすいものを設定してください。その名前の通り<code>db2inst1</code>ユーザのパスワードになります。</p>\n\n<div class=\"code-frame\" data-lang=\"bash\"><div class=\"highlight\"><pre><code>docker run <span class=\"nt\">-it</span> <span class=\"nt\">-p</span> 50000:50000 <span class=\"nt\">-e</span> <span class=\"nv\">DB2INST1_PASSWORD</span><span class=\"o\">=</span>db2inst1passw0rd <span class=\"nt\">-e</span> <span class=\"nv\">LICENSE</span><span class=\"o\">=</span>accept ibmcom/db2express-c:latest bash\n</code></pre></div></div>\n\n<p>この<code>docker run</code>コマンドが正常終了すると「db2がインストールされたOSのターミナルに接続している」ような状態になります。そこで<code>ibmcom/db2express-c</code>が用意しているインスタンスユーザ(db2inst1)でログインした後、インスタンスを活性化。サンプルDBを作成&amp;接続し、作成されたテーブルの中身をのぞいてみましょう。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>su - db2inst1\ndb2start\ndb2sampl\ndb2 connect to sample\ndb2 \"select * from db2inst1.org\"\n</code></pre></div></div>\n\n<p>すると以下のような内容がターミナルに表示されているはずです。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>DEPTNUMB DEPTNAME       MANAGER DIVISION   LOCATION     \n-------- -------------- ------- ---------- -------------\n      10 Head Office        160 Corporate  New York     \n      15 New England         50 Eastern    Boston       \n      20 Mid Atlantic        10 Eastern    Washington   \n      38 South Atlantic      30 Eastern    Atlanta      \n      42 Great Lakes        100 Midwest    Chicago      \n      51 Plains             140 Midwest    Dallas       \n      66 Pacific            270 Western    San Francisco\n      84 Mountain           290 Western    Denver       \n\n  8 record(s) selected.\n</code></pre></div></div>\n\n<hr>\n\n<p>余談:<a href=\"https://hub.docker.com/r/ibmcom/db2express-c/\" rel=\"nofollow noopener\" target=\"_blank\">前述したibmcom/db2express-cのDocker HubのREADME</a>によると、Db2は<code>/opt/ibm/db2/V10.5</code>というディレクトリにインストールされているそうなのですが――どう考えても見当たらない(´・ω・｀)</p>\n\n<div class=\"code-frame\" data-lang=\"bash\"><div class=\"highlight\"><pre><code><span class=\"o\">[</span>db2inst1@a7c227901722 ~]<span class=\"nv\">$ </span><span class=\"nb\">ls</span> <span class=\"nt\">-la</span> /opt/\ntotal 0\ndrwxr-xr-x. 2 root root  6 Jun 10  2014 <span class=\"nb\">.</span>\ndrwxr-xr-x. 1 root root 51 Jan  3 08:36 ..\n</code></pre></div></div>\n\n<p>また2018-01-03現在、Db2の最新版は11.1ですが、今回利用したImageで利用できるのは10.5。ちょっと古い(´・ω・｀) IBM/Db2ちゃんはDockerには塩対応なのかしら(´・ω・｀)</p>\n","body":"注意:本記事は以下の環境により動作確認をしています。\n\n|||\n|:-:|:-:|\n|ゲストOS|CentOS Linux release 7.4.1708 (Core)|\n|ホストOS|Windows 10|\n|仮想化ソフト|VMware Workstation 14 Player|\n\n***\n\n2018年の正月はC#の勉強をするつもりでいたのですが、なぜかDockerを触っていました(´・ω・｀) どうしてこうなった(´・ω・｀)\n\nそれはさておきCentOS7.4でDockerをインストールした際のメモを共有します。といっても[Docker公式](https://docs.docker.com/engine/installation/linux/docker-ce/centos/#install-docker-ce-1)の指示通り、進めていくだけ。それを読むことすら面倒というものぐさな人は以下のコマンドを順番にたたいていくだけで、Docker環境が構築できます(もちろんrootユーザで実行するか、すべてのコマンドにsudoを付与する必要があります)。\n\n```bash\nyum remove docker docker-common docker-selinux docker-engine\nyum install -y yum-utils device-mapper-persistent-data lvm2\nyum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo\nyum install docker-ce\n```\n\nこの時点でDockerが停止している場合は、以下のコマンドによりサービスを活性化させましょう。\n\n```bash\nsystemctl start docker.service\n```\n\nちなみにDockerが正常に活性化したかどうかは以下のコマンドで確認することができます。\n\n```bash\nsystemctl status docker\n```\n\n***\n\nせっかくDocker環境を構築したので、Docker Imageをインストールしてみたいと思います。今回練習に利用するのがDb2 Express-C。IBMが誇るRDBMSの無償版ですね。IBMが公式でDocker Imageを用意してくれているので、これを利用します。といっても[Docker Hubの当該ページのREADME](https://hub.docker.com/r/ibmcom/db2express-c/)に指示されている通りにコマンドをたたくだけ。それを読むことすら面倒というものぐさな人(2回目)はまず`docker pull`コマンドによりimageをインストールします。\n\n```bash\ndocker pull ibmcom/db2express-c\n```\n\nインストール後は`docker run`コマンドでコンテナを起動します。このとき環境変数`DB2INST1_PASSWORD`は自分のわかりやすいものを設定してください。その名前の通り`db2inst1`ユーザのパスワードになります。\n\n```bash\ndocker run -it -p 50000:50000 -e DB2INST1_PASSWORD=db2inst1passw0rd -e LICENSE=accept ibmcom/db2express-c:latest bash\n```\n\nこの`docker run`コマンドが正常終了すると「db2がインストールされたOSのターミナルに接続している」ような状態になります。そこで`ibmcom/db2express-c`が用意しているインスタンスユーザ(db2inst1)でログインした後、インスタンスを活性化。サンプルDBを作成&接続し、作成されたテーブルの中身をのぞいてみましょう。\n\n```\nsu - db2inst1\ndb2start\ndb2sampl\ndb2 connect to sample\ndb2 \"select * from db2inst1.org\"\n```\n\nすると以下のような内容がターミナルに表示されているはずです。\n\n```\nDEPTNUMB DEPTNAME       MANAGER DIVISION   LOCATION     \n-------- -------------- ------- ---------- -------------\n      10 Head Office        160 Corporate  New York     \n      15 New England         50 Eastern    Boston       \n      20 Mid Atlantic        10 Eastern    Washington   \n      38 South Atlantic      30 Eastern    Atlanta      \n      42 Great Lakes        100 Midwest    Chicago      \n      51 Plains             140 Midwest    Dallas       \n      66 Pacific            270 Western    San Francisco\n      84 Mountain           290 Western    Denver       \n\n  8 record(s) selected.\n```\n\n***\n\n余談:[前述したibmcom/db2express-cのDocker HubのREADME](https://hub.docker.com/r/ibmcom/db2express-c/)によると、Db2は`/opt/ibm/db2/V10.5`というディレクトリにインストールされているそうなのですが――どう考えても見当たらない(´・ω・｀)\n\n```bash\n[db2inst1@a7c227901722 ~]$ ls -la /opt/\ntotal 0\ndrwxr-xr-x. 2 root root  6 Jun 10  2014 .\ndrwxr-xr-x. 1 root root 51 Jan  3 08:36 ..\n```\n\nまた2018-01-03現在、Db2の最新版は11.1ですが、今回利用したImageで利用できるのは10.5。ちょっと古い(´・ω・｀) IBM/Db2ちゃんはDockerには塩対応なのかしら(´・ω・｀)\n","coediting":false,"comments_count":0,"created_at":"2018-01-03T18:04:49+09:00","group":null,"id":"24c6fa305e2b56f339ea","likes_count":1,"private":false,"reactions_count":0,"stocks_count":1,"tags":[{"name":"CentOS","versions":[]},{"name":"vmware","versions":[]},{"name":"db2","versions":[]},{"name":"Docker","versions":[]}],"title":"CentOS7.4でDockerをインストール(おまけでDb2 Express-CをDockerで試してみる)","updated_at":"2018-01-03T18:04:49+09:00","url":"https://qiita.com/neko_the_shadow/items/24c6fa305e2b56f339ea","user":{"description":"IT業界の片隅でひっそり生きるシステムエンジニアです(´・ω・｀)","facebook_id":"","followees_count":0,"followers_count":37,"github_login_name":"nekoTheShadow","id":"neko_the_shadow","items_count":218,"linkedin_id":"","location":"神奈川県川崎市","name":"","organization":"","permanent_id":105859,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/105859/profile-images/1473709753","team_only":false,"twitter_screen_name":"neko_the_shadow","website_url":"https://github.com/nekoTheShadow"},"page_views_count":2609,"team_membership":null,"organization_url_name":null,"slide":false}