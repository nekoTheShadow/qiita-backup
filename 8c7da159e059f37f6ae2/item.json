{"rendered_body":"<p>特定の文字列の出現回数を数えたい場合、たとえばPythonだと</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>$ python3\nPython 3.8.5 (default, Jul 28 2020, 12:59:40)\n[GCC 9.3.0] on linux\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n&gt;&gt;&gt; \"AABABAAAB\".count(\"AB\")\n3\n</code></pre></div></div>\n\n<p>というように、非常に簡単に書けるのですが、Javaでは一工夫が必要になります。</p>\n\n<div class=\"code-frame\" data-lang=\"java\"><div class=\"highlight\"><pre><code><span class=\"kd\">public</span> <span class=\"kd\">static</span> <span class=\"kt\">int</span> <span class=\"nf\">count</span><span class=\"o\">(</span><span class=\"nc\">String</span> <span class=\"n\">string</span><span class=\"o\">,</span> <span class=\"nc\">String</span> <span class=\"n\">target</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n    <span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"o\">;</span>\n    <span class=\"kt\">int</span> <span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"o\">;</span>\n    <span class=\"k\">while</span> <span class=\"o\">((</span><span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"n\">string</span><span class=\"o\">.</span><span class=\"na\">indexOf</span><span class=\"o\">(</span><span class=\"n\">target</span><span class=\"o\">,</span> <span class=\"n\">i</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"o\">))!=-</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"n\">c</span><span class=\"o\">++;</span>\n    <span class=\"k\">return</span> <span class=\"n\">c</span><span class=\"o\">;</span>\n<span class=\"o\">}</span>\n</code></pre></div></div>\n\n<p>実際に使ってみると、次のようになります。</p>\n\n<div class=\"code-frame\" data-lang=\"java\"><div class=\"highlight\"><pre><code><span class=\"nc\">System</span><span class=\"o\">.</span><span class=\"na\">out</span><span class=\"o\">.</span><span class=\"na\">println</span><span class=\"o\">(</span><span class=\"n\">count</span><span class=\"o\">(</span><span class=\"s\">\"AABABAAAB\"</span><span class=\"o\">,</span> <span class=\"s\">\"A\"</span><span class=\"o\">));</span>    <span class=\"c1\">//=&gt; 6</span>\n<span class=\"nc\">System</span><span class=\"o\">.</span><span class=\"na\">out</span><span class=\"o\">.</span><span class=\"na\">println</span><span class=\"o\">(</span><span class=\"n\">count</span><span class=\"o\">(</span><span class=\"s\">\"AABABAAAB\"</span><span class=\"o\">,</span> <span class=\"s\">\"AB\"</span><span class=\"o\">));</span>   <span class=\"c1\">//=&gt; 3</span>\n<span class=\"nc\">System</span><span class=\"o\">.</span><span class=\"na\">out</span><span class=\"o\">.</span><span class=\"na\">println</span><span class=\"o\">(</span><span class=\"n\">count</span><span class=\"o\">(</span><span class=\"s\">\"AABABAAAB\"</span><span class=\"o\">,</span> <span class=\"s\">\"ABA\"</span><span class=\"o\">));</span>  <span class=\"c1\">//=&gt; 2</span>\n<span class=\"nc\">System</span><span class=\"o\">.</span><span class=\"na\">out</span><span class=\"o\">.</span><span class=\"na\">println</span><span class=\"o\">(</span><span class=\"n\">count</span><span class=\"o\">(</span><span class=\"s\">\"AABABAAAB\"</span><span class=\"o\">,</span> <span class=\"s\">\"AAAA\"</span><span class=\"o\">));</span> <span class=\"c1\">//=&gt; 0</span>\n</code></pre></div></div>\n\n<p>想定通りに動いていそうですね(´・ω・｀)</p>\n\n<p><strong><em>環境情報</em></strong></p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>D:\\&gt;javac --version\njavac 11.0.10\n\nD:\\&gt;java --version\nopenjdk 11.0.10 2021-01-19\nOpenJDK Runtime Environment AdoptOpenJDK (build 11.0.10+9)\nOpenJDK 64-Bit Server VM AdoptOpenJDK (build 11.0.10+9, mixed mode)\n</code></pre></div></div>\n\n<p><strong>2021/08/01 22:45追記</strong></p>\n\n<p>上記のロジックは「文字列の出現回数を<strong>重複あり</strong>で数える」もので、Python3と同じように「文字列の出現回数を<strong>重複なし</strong>で数える」場合は以下のようにすべきでした。</p>\n\n<div class=\"code-frame\" data-lang=\"java\"><div class=\"highlight\"><pre><code><span class=\"kd\">public</span> <span class=\"kd\">static</span> <span class=\"kt\">int</span> <span class=\"nf\">count</span><span class=\"o\">(</span><span class=\"nc\">String</span> <span class=\"n\">string</span><span class=\"o\">,</span> <span class=\"nc\">String</span> <span class=\"n\">target</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n    <span class=\"kt\">int</span> <span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"o\">;</span>\n    <span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"o\">;</span>\n    <span class=\"kt\">int</span> <span class=\"n\">len</span> <span class=\"o\">=</span> <span class=\"n\">target</span><span class=\"o\">.</span><span class=\"na\">length</span><span class=\"o\">();</span>\n    <span class=\"k\">while</span> <span class=\"o\">((</span><span class=\"n\">i</span><span class=\"o\">=</span><span class=\"n\">string</span><span class=\"o\">.</span><span class=\"na\">indexOf</span><span class=\"o\">(</span><span class=\"n\">target</span><span class=\"o\">,</span> <span class=\"n\">i</span><span class=\"o\">))!=-</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"n\">c</span><span class=\"o\">++;</span>\n        <span class=\"n\">i</span> <span class=\"o\">+=</span> <span class=\"n\">len</span><span class=\"o\">;</span>\n    <span class=\"o\">}</span>\n    <span class=\"k\">return</span> <span class=\"n\">c</span><span class=\"o\">;</span>\n<span class=\"o\">}</span>\n</code></pre></div></div>\n","body":"特定の文字列の出現回数を数えたい場合、たとえばPythonだと\n\n```\n$ python3\nPython 3.8.5 (default, Jul 28 2020, 12:59:40)\n[GCC 9.3.0] on linux\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> \"AABABAAAB\".count(\"AB\")\n3\n```\n\nというように、非常に簡単に書けるのですが、Javaでは一工夫が必要になります。\n\n```java\npublic static int count(String string, String target) {\n    int i = -1;\n    int c = 0;\n    while ((i = string.indexOf(target, i+1))!=-1) c++;\n    return c;\n}\n```\n\n実際に使ってみると、次のようになります。\n\n```java\nSystem.out.println(count(\"AABABAAAB\", \"A\"));    //=> 6\nSystem.out.println(count(\"AABABAAAB\", \"AB\"));   //=> 3\nSystem.out.println(count(\"AABABAAAB\", \"ABA\"));  //=> 2\nSystem.out.println(count(\"AABABAAAB\", \"AAAA\")); //=> 0\n```\n\n想定通りに動いていそうですね(´・ω・｀)\n\n___環境情報___\n\n```\nD:\\>javac --version\njavac 11.0.10\n\nD:\\>java --version\nopenjdk 11.0.10 2021-01-19\nOpenJDK Runtime Environment AdoptOpenJDK (build 11.0.10+9)\nOpenJDK 64-Bit Server VM AdoptOpenJDK (build 11.0.10+9, mixed mode)\n```\n\n__2021/08/01 22:45追記__\n\n上記のロジックは「文字列の出現回数を**重複あり**で数える」もので、Python3と同じように「文字列の出現回数を**重複なし**で数える」場合は以下のようにすべきでした。\n\n```java\npublic static int count(String string, String target) {\n    int c = 0;\n    int i = 0;\n    int len = target.length();\n    while ((i=string.indexOf(target, i))!=-1) {\n        c++;\n        i += len;\n    }\n    return c;\n}\n```\n\n","coediting":false,"comments_count":2,"created_at":"2021-08-01T21:45:36+09:00","group":null,"id":"8c7da159e059f37f6ae2","likes_count":1,"private":false,"reactions_count":0,"stocks_count":0,"tags":[{"name":"Java","versions":[]}],"title":"文字列の出現回数を数えたい","updated_at":"2021-08-01T22:48:31+09:00","url":"https://qiita.com/neko_the_shadow/items/8c7da159e059f37f6ae2","user":{"description":"IT業界の片隅でひっそり生きるシステムエンジニアです(´・ω・｀)","facebook_id":"","followees_count":0,"followers_count":36,"github_login_name":null,"id":"neko_the_shadow","items_count":204,"linkedin_id":"","location":"神奈川県川崎市","name":"","organization":"","permanent_id":105859,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/105859/profile-images/1473709753","team_only":false,"twitter_screen_name":"neko_the_shadow","website_url":"https://nekotheshadow.github.io/"},"page_views_count":5378,"team_membership":null}