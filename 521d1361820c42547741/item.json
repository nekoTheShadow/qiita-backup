{"rendered_body":"<p>Python3で標準入力から入力を読む方法はいくつかありますが、組み込み関数の<code>open</code>を使って、<code>open(0)</code>とすると標準入力に対応するファイルオブジェクトを取得できます。</p>\n\n<p>利用例としては以下のようになります。</p>\n\n<div class=\"code-frame\" data-lang=\"python\"><div class=\"highlight\"><pre><span class=\"n\">stdin</span> <span class=\"o\">=</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"n\">line</span> <span class=\"ow\">in</span> <span class=\"n\">stdin</span><span class=\"p\">:</span>\n    <span class=\"n\">do_something</span><span class=\"p\">(</span><span class=\"n\">line</span><span class=\"p\">)</span>\n</pre></div></div>\n\n<p><code>open</code>の引数を<code>0</code>にすると、なぜ標準入力になるのでしょうか? <a href=\"https://docs.python.org/ja/3/library/functions.html#open\" rel=\"nofollow noopener\" target=\"_blank\">ドキュメントを注意深く読むと以下のように記述されています。</a></p>\n\n<blockquote>\n<p>file は path-like object で、開くファイルの (絶対または現在のワーキングディレクトリに対する相対) パス名を与えるものか、または、ラップするファイルの整数のファイルディスクリプタです。</p>\n</blockquote>\n\n<p><code>open</code>の引数としてはファイルパスだけでなく、ファイルディスクリプタを示す整数を指定することもできます。標準入力のファイルディスクリプタは0ですから、<code>open(0)</code>とすると、標準入力に対応するファイルオブジェクトが取得できるわけです。</p>\n\n<p>なお<a href=\"https://docs.python.org/ja/3/library/sys.html#sys.stdin\" rel=\"nofollow noopener\" target=\"_blank\"><code>sys.stdin</code></a>も標準入力のファイルオブジェクトです。つまり<code>open(0)</code>の戻り値と<code>sys.stdin</code>は実質的には同じものになるといえます。<code>sys.stdin</code>のほうが、標準入力を利用することが明確でわかりやすいのですが、<code>import sys</code>とする必要があって、タイプ数が増えます。コードゴルフや競技プログラミングなどでは<code>open(0)</code>のほうがお得かもしれません。</p>\n","body":"Python3で標準入力から入力を読む方法はいくつかありますが、組み込み関数の`open`を使って、`open(0)`とすると標準入力に対応するファイルオブジェクトを取得できます。\n\n利用例としては以下のようになります。\n\n```python\nstdin = open(0)\nfor line in stdin:\n    do_something(line)\n```\n\n`open`の引数を`0`にすると、なぜ標準入力になるのでしょうか? [ドキュメントを注意深く読むと以下のように記述されています。](https://docs.python.org/ja/3/library/functions.html#open)\n\n> file は path-like object で、開くファイルの (絶対または現在のワーキングディレクトリに対する相対) パス名を与えるものか、または、ラップするファイルの整数のファイルディスクリプタです。\n\n`open`の引数としてはファイルパスだけでなく、ファイルディスクリプタを示す整数を指定することもできます。標準入力のファイルディスクリプタは0ですから、`open(0)`とすると、標準入力に対応するファイルオブジェクトが取得できるわけです。\n\nなお[`sys.stdin`](https://docs.python.org/ja/3/library/sys.html#sys.stdin)も標準入力のファイルオブジェクトです。つまり`open(0)`の戻り値と`sys.stdin`は実質的には同じものになるといえます。`sys.stdin`のほうが、標準入力を利用することが明確でわかりやすいのですが、`import sys`とする必要があって、タイプ数が増えます。コードゴルフや競技プログラミングなどでは`open(0)`のほうがお得かもしれません。\n","coediting":false,"comments_count":0,"created_at":"2021-02-07T13:34:16+09:00","group":null,"id":"521d1361820c42547741","likes_count":1,"private":false,"reactions_count":0,"tags":[{"name":"Python","versions":[]},{"name":"Python3","versions":[]}],"title":"open(0)とすると標準入力に対応するファイルオブジェクトが取得できる","updated_at":"2021-02-07T13:34:16+09:00","url":"https://qiita.com/neko_the_shadow/items/521d1361820c42547741","user":{"description":"IT業界の片隅でひっそり生きるシステムエンジニアです(´・ω・｀)","facebook_id":"","followees_count":0,"followers_count":35,"github_login_name":null,"id":"neko_the_shadow","items_count":179,"linkedin_id":"","location":"神奈川県川崎市","name":"","organization":"","permanent_id":105859,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/105859/profile-images/1473709753","team_only":false,"twitter_screen_name":"neko_the_shadow","website_url":"https://nekotheshadow.github.io/"},"page_views_count":null}