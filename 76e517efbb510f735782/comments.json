[{"body":"minだと全部の要素を調べてしまいますが、nextを使えば最初に見つかったところで処理が終了します。\n\n```py\n>>> numbers = [3, 5, 4, 2, 1]\n>>> next((index for index, val in enumerate(numbers) if val % 2 == 0), -1)\n2\n>>> next((index for index, val in enumerate(numbers) if val % 9 == 0), -1)\n-1\n```\n\nジェネレータと next を使って次々と偶数のインデックスを取り出すことができます。\n\n```py\n>>> numbers = [3, 5, 4, 2, 1]\n>>> gen = (index for index, val in enumerate(numbers) if val % 2 == 0)\n>>> next(gen)\n2\n>>> next(gen)\n3\n>>> next(gen)\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nStopIteration\n>>> next(gen, -1)\n-1\n```\n","created_at":"2017-03-07T01:59:09+09:00","id":"a50f8d49567c19d68bbf","rendered_body":"<p>minだと全部の要素を調べてしまいますが、nextを使えば最初に見つかったところで処理が終了します。</p>\n\n<div class=\"code-frame\" data-lang=\"py\"><div class=\"highlight\"><pre><code><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">numbers</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">next</span><span class=\"p\">((</span><span class=\"n\">index</span> <span class=\"k\">for</span> <span class=\"n\">index</span><span class=\"p\">,</span> <span class=\"n\">val</span> <span class=\"ow\">in</span> <span class=\"nb\">enumerate</span><span class=\"p\">(</span><span class=\"n\">numbers</span><span class=\"p\">)</span> <span class=\"k\">if</span> <span class=\"n\">val</span> <span class=\"o\">%</span> <span class=\"mi\">2</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"mi\">2</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">next</span><span class=\"p\">((</span><span class=\"n\">index</span> <span class=\"k\">for</span> <span class=\"n\">index</span><span class=\"p\">,</span> <span class=\"n\">val</span> <span class=\"ow\">in</span> <span class=\"nb\">enumerate</span><span class=\"p\">(</span><span class=\"n\">numbers</span><span class=\"p\">)</span> <span class=\"k\">if</span> <span class=\"n\">val</span> <span class=\"o\">%</span> <span class=\"mi\">9</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"o\">-</span><span class=\"mi\">1</span>\n</code></pre></div></div>\n\n<p>ジェネレータと next を使って次々と偶数のインデックスを取り出すことができます。</p>\n\n<div class=\"code-frame\" data-lang=\"py\"><div class=\"highlight\"><pre><code><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">numbers</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">gen</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">index</span> <span class=\"k\">for</span> <span class=\"n\">index</span><span class=\"p\">,</span> <span class=\"n\">val</span> <span class=\"ow\">in</span> <span class=\"nb\">enumerate</span><span class=\"p\">(</span><span class=\"n\">numbers</span><span class=\"p\">)</span> <span class=\"k\">if</span> <span class=\"n\">val</span> <span class=\"o\">%</span> <span class=\"mi\">2</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">next</span><span class=\"p\">(</span><span class=\"n\">gen</span><span class=\"p\">)</span>\n<span class=\"mi\">2</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">next</span><span class=\"p\">(</span><span class=\"n\">gen</span><span class=\"p\">)</span>\n<span class=\"mi\">3</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">next</span><span class=\"p\">(</span><span class=\"n\">gen</span><span class=\"p\">)</span>\n<span class=\"n\">Traceback</span> <span class=\"p\">(</span><span class=\"n\">most</span> <span class=\"n\">recent</span> <span class=\"n\">call</span> <span class=\"n\">last</span><span class=\"p\">):</span>\n  <span class=\"n\">File</span> <span class=\"s\">\"&lt;stdin&gt;\"</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"o\">&lt;</span><span class=\"n\">module</span><span class=\"o\">&gt;</span>\n<span class=\"nb\">StopIteration</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">next</span><span class=\"p\">(</span><span class=\"n\">gen</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"o\">-</span><span class=\"mi\">1</span>\n</code></pre></div></div>\n","updated_at":"2017-03-07T02:21:39+09:00","user":{"description":"元、低レイヤーエンジニア。\r\n現、サイバーセキュリティ研究者。\r\n使用言語は、C, Lisp, Java, Python, C#, JavaScript/Node.js。\r\n経験アセンブリ言語は Z80, 6502, 6809, 68000, SPARC, PowerPC, ARM, x86/x64。\r\n","facebook_id":"","followees_count":7,"followers_count":1016,"github_login_name":null,"id":"shiracamus","items_count":80,"linkedin_id":"","location":"日本","name":"しらかみゅ","organization":"某セキュリティマイスター、SECCON実行委員","permanent_id":29070,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/29070/profile-images/1473685289","team_only":false,"twitter_screen_name":"shiracamus","website_url":""}}]