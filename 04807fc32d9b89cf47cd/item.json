{"rendered_body":"<p>python3でファイルツリーをトラバースしたい場合、標準ライブラリとしては<code>os.walk</code>が用意されているのですが、このAPIは指定したディレクトリの配下すべてを探索してしまうため、「特定の名称のディレクトリの配下は走査しない」というような場合には、<code>os.walk</code>を利用せず、自前で実装することになります。</p>\n\n<p>以下は「カレントディレクトリからファイルツリーをトラバースしていって、ファイルが見つかったら何かする、ただし<code>.git</code>ディレクトリと<code>.svn</code>ディレクトリの配下は走査しない」ということを実装したものになります。</p>\n\n<div class=\"code-frame\" data-lang=\"py\"><div class=\"highlight\"><pre><code><span class=\"kn\">import</span> <span class=\"nn\">pathlib</span>\n\n<span class=\"n\">stack</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">pathlib</span><span class=\"p\">.</span><span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"s\">'./'</span><span class=\"p\">)]</span>\n<span class=\"n\">skips</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s\">'.git'</span><span class=\"p\">,</span> <span class=\"s\">'.svn'</span><span class=\"p\">}</span>\n<span class=\"k\">while</span> <span class=\"n\">stack</span><span class=\"p\">:</span>\n    <span class=\"n\">entry</span> <span class=\"o\">=</span> <span class=\"n\">stack</span><span class=\"p\">.</span><span class=\"n\">pop</span><span class=\"p\">()</span>\n    <span class=\"k\">if</span> <span class=\"n\">entry</span><span class=\"p\">.</span><span class=\"n\">name</span> <span class=\"ow\">in</span> <span class=\"n\">skips</span><span class=\"p\">:</span>\n        <span class=\"k\">continue</span>\n    <span class=\"k\">if</span> <span class=\"n\">entry</span><span class=\"p\">.</span><span class=\"n\">is_dir</span><span class=\"p\">():</span>\n        <span class=\"n\">stack</span><span class=\"p\">.</span><span class=\"n\">extend</span><span class=\"p\">(</span><span class=\"n\">entry</span><span class=\"p\">.</span><span class=\"n\">iterdir</span><span class=\"p\">())</span>\n    <span class=\"k\">if</span> <span class=\"n\">entry</span><span class=\"p\">.</span><span class=\"n\">is_file</span><span class=\"p\">():</span>\n        <span class=\"n\">do_something</span><span class=\"p\">(</span><span class=\"n\">entry</span><span class=\"p\">)</span>\n</code></pre></div></div>\n\n<p><strong>2022-01-17 22:00 追記</strong></p>\n\n<p>コメントで指摘があった通り、<code>os.walk</code>でも同じことが実現できることがわかりました。不勉強でした(´・ω・`)</p>\n\n<div class=\"code-frame\" data-lang=\"python\"><div class=\"highlight\"><pre><code><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n\n<span class=\"n\">skips</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s\">'.git'</span><span class=\"p\">,</span> <span class=\"s\">'.svn'</span><span class=\"p\">}</span>\n\n<span class=\"k\">for</span> <span class=\"n\">dirpath</span><span class=\"p\">,</span> <span class=\"n\">dirnames</span><span class=\"p\">,</span> <span class=\"n\">filenames</span> <span class=\"ow\">in</span> <span class=\"n\">os</span><span class=\"p\">.</span><span class=\"n\">walk</span><span class=\"p\">(</span><span class=\"s\">'./'</span><span class=\"p\">):</span>\n    <span class=\"k\">for</span> <span class=\"n\">skip</span> <span class=\"ow\">in</span> <span class=\"n\">skips</span><span class=\"p\">:</span>\n        <span class=\"k\">if</span> <span class=\"n\">skip</span> <span class=\"ow\">in</span> <span class=\"n\">dirnames</span><span class=\"p\">:</span>\n            <span class=\"n\">dirnames</span><span class=\"p\">.</span><span class=\"n\">remove</span><span class=\"p\">(</span><span class=\"n\">skip</span><span class=\"p\">)</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">filename</span> <span class=\"ow\">in</span> <span class=\"n\">filenames</span><span class=\"p\">:</span>\n        <span class=\"n\">do_something</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"p\">.</span><span class=\"n\">path</span><span class=\"p\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">dirpath</span><span class=\"p\">,</span> <span class=\"n\">filename</span><span class=\"p\">))</span>\n</code></pre></div></div>\n","body":"python3でファイルツリーをトラバースしたい場合、標準ライブラリとしては`os.walk`が用意されているのですが、このAPIは指定したディレクトリの配下すべてを探索してしまうため、「特定の名称のディレクトリの配下は走査しない」というような場合には、`os.walk`を利用せず、自前で実装することになります。\n\n以下は「カレントディレクトリからファイルツリーをトラバースしていって、ファイルが見つかったら何かする、ただし`.git`ディレクトリと`.svn`ディレクトリの配下は走査しない」ということを実装したものになります。\n\n```py\nimport pathlib\n\nstack = [pathlib.Path('./')]\nskips = {'.git', '.svn'}\nwhile stack:\n    entry = stack.pop()\n    if entry.name in skips:\n        continue\n    if entry.is_dir():\n        stack.extend(entry.iterdir())\n    if entry.is_file():\n        do_something(entry)\n```\n\n__2022-01-17 22:00 追記__\n\nコメントで指摘があった通り、`os.walk`でも同じことが実現できることがわかりました。不勉強でした(´・ω・`)\n\n```python\nimport os\n\nskips = {'.git', '.svn'}\n\nfor dirpath, dirnames, filenames in os.walk('./'):\n    for skip in skips:\n        if skip in dirnames:\n            dirnames.remove(skip)\n\n    for filename in filenames:\n        do_something(os.path.join(dirpath, filename))\n```\n","coediting":false,"comments_count":2,"created_at":"2022-01-17T00:47:38+09:00","group":null,"id":"04807fc32d9b89cf47cd","likes_count":0,"private":false,"reactions_count":0,"stocks_count":0,"tags":[{"name":"Python3","versions":[]}],"title":"ファイルツリーを走査する際に特定のディレクトリの配下は無視したい","updated_at":"2022-01-17T22:01:30+09:00","url":"https://qiita.com/neko_the_shadow/items/04807fc32d9b89cf47cd","user":{"description":"IT業界の片隅でひっそり生きるシステムエンジニアです(´・ω・｀)","facebook_id":"","followees_count":0,"followers_count":37,"github_login_name":"nekoTheShadow","id":"neko_the_shadow","items_count":218,"linkedin_id":"","location":"神奈川県川崎市","name":"","organization":"","permanent_id":105859,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/105859/profile-images/1473709753","team_only":false,"twitter_screen_name":"neko_the_shadow","website_url":"https://github.com/nekoTheShadow"},"page_views_count":798,"team_membership":null,"organization_url_name":null,"slide":false}