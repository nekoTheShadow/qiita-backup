{"rendered_body":"\n<h1>\n<span id=\"はじめに\" class=\"fragment\"></span><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"><i class=\"fa fa-link\"></i></a>はじめに</h1>\n\n<p>ある日、Qiitaをながめていたところ、こんな面白そうなアドベントカレンダーを発見。</p>\n\n<p><qiita-embed-ogp src=\"https://qiita.com/advent-calendar/2021/ruby-challenge\"></qiita-embed-ogp></p>\n\n<p>ぜひ参加してみたかったのですが、時すでに遅しで、参加枠はゼロ。そういうわけでアドベントカレンダー終了後に勝手に参加しようと思います。勝手に参加するのであれば、言語も好き勝手に選んでいいよねということで、今回はSQLを選択しました。なお稼働確認したDBMSはMySQL8.0.23です。</p>\n\n<h1>\n<span id=\"回答\" class=\"fragment\"></span><a href=\"#%E5%9B%9E%E7%AD%94\"><i class=\"fa fa-link\"></i></a>回答</h1>\n\n<p>回答となるクエリは以下の通りです。もうちょっとシンプルに書けそうではありますね。</p>\n\n<div class=\"code-frame\" data-lang=\"SQL\"><div class=\"highlight\"><pre><code><span class=\"k\">WITH</span> <span class=\"k\">RECURSIVE</span>\n<span class=\"n\">BOIN</span> <span class=\"p\">(</span><span class=\"n\">rome</span><span class=\"p\">,</span> <span class=\"nb\">bit</span><span class=\"p\">)</span> <span class=\"k\">AS</span> <span class=\"p\">(</span>\n            <span class=\"k\">SELECT</span> <span class=\"s1\">'A'</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"n\">b100000</span><span class=\"o\">+</span><span class=\"mi\">0</span>\n  <span class=\"k\">UNION</span> <span class=\"k\">ALL</span> <span class=\"k\">SELECT</span> <span class=\"s1\">'I'</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"n\">b101000</span><span class=\"o\">+</span><span class=\"mi\">0</span>\n  <span class=\"k\">UNION</span> <span class=\"k\">ALL</span> <span class=\"k\">SELECT</span> <span class=\"s1\">'U'</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"n\">b110000</span><span class=\"o\">+</span><span class=\"mi\">0</span>\n  <span class=\"k\">UNION</span> <span class=\"k\">ALL</span> <span class=\"k\">SELECT</span> <span class=\"s1\">'E'</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"n\">b111000</span><span class=\"o\">+</span><span class=\"mi\">0</span>\n  <span class=\"k\">UNION</span> <span class=\"k\">ALL</span> <span class=\"k\">SELECT</span> <span class=\"s1\">'O'</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"n\">b011000</span><span class=\"o\">+</span><span class=\"mi\">0</span>\n<span class=\"p\">),</span>\n<span class=\"n\">SHIN</span> <span class=\"p\">(</span><span class=\"n\">rome</span><span class=\"p\">,</span> <span class=\"nb\">bit</span><span class=\"p\">)</span> <span class=\"k\">AS</span> <span class=\"p\">(</span>\n            <span class=\"k\">SELECT</span> <span class=\"s1\">'K'</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"n\">b000001</span><span class=\"o\">+</span><span class=\"mi\">0</span>\n  <span class=\"k\">UNION</span> <span class=\"k\">ALL</span> <span class=\"k\">SELECT</span> <span class=\"s1\">'S'</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"n\">b000101</span><span class=\"o\">+</span><span class=\"mi\">0</span>\n  <span class=\"k\">UNION</span> <span class=\"k\">ALL</span> <span class=\"k\">SELECT</span> <span class=\"s1\">'T'</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"n\">b000110</span><span class=\"o\">+</span><span class=\"mi\">0</span>\n  <span class=\"k\">UNION</span> <span class=\"k\">ALL</span> <span class=\"k\">SELECT</span> <span class=\"s1\">'N'</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"n\">b000010</span><span class=\"o\">+</span><span class=\"mi\">0</span>\n  <span class=\"k\">UNION</span> <span class=\"k\">ALL</span> <span class=\"k\">SELECT</span> <span class=\"s1\">'H'</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"n\">b000011</span><span class=\"o\">+</span><span class=\"mi\">0</span>\n  <span class=\"k\">UNION</span> <span class=\"k\">ALL</span> <span class=\"k\">SELECT</span> <span class=\"s1\">'M'</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"n\">b000111</span><span class=\"o\">+</span><span class=\"mi\">0</span>\n  <span class=\"k\">UNION</span> <span class=\"k\">ALL</span> <span class=\"k\">SELECT</span> <span class=\"s1\">'R'</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"n\">b000100</span><span class=\"o\">+</span><span class=\"mi\">0</span>\n<span class=\"p\">),</span>\n<span class=\"n\">REIGAI</span> <span class=\"p\">(</span><span class=\"n\">rome</span><span class=\"p\">,</span> <span class=\"nb\">bit</span><span class=\"p\">)</span> <span class=\"k\">AS</span> <span class=\"p\">(</span>\n            <span class=\"k\">SELECT</span> <span class=\"s1\">'YA'</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"n\">b010010</span><span class=\"o\">+</span><span class=\"mi\">0</span>\n  <span class=\"k\">UNION</span> <span class=\"k\">ALL</span> <span class=\"k\">SELECT</span> <span class=\"s1\">'YU'</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"n\">b010011</span><span class=\"o\">+</span><span class=\"mi\">0</span>\n  <span class=\"k\">UNION</span> <span class=\"k\">ALL</span> <span class=\"k\">SELECT</span> <span class=\"s1\">'YO'</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"n\">b010110</span><span class=\"o\">+</span><span class=\"mi\">0</span>\n  <span class=\"k\">UNION</span> <span class=\"k\">ALL</span> <span class=\"k\">SELECT</span> <span class=\"s1\">'WA'</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"n\">b000010</span><span class=\"o\">+</span><span class=\"mi\">0</span>\n  <span class=\"k\">UNION</span> <span class=\"k\">ALL</span> <span class=\"k\">SELECT</span> <span class=\"s1\">'N'</span> <span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"n\">b000111</span><span class=\"o\">+</span><span class=\"mi\">0</span>\n<span class=\"p\">),</span>\n<span class=\"n\">HENKAN</span> <span class=\"p\">(</span><span class=\"n\">rome</span><span class=\"p\">,</span> <span class=\"nb\">bit</span><span class=\"p\">)</span>  <span class=\"k\">AS</span> <span class=\"p\">(</span>\n            <span class=\"k\">SELECT</span> <span class=\"n\">rome</span><span class=\"p\">,</span> <span class=\"nb\">bit</span> <span class=\"k\">FROM</span> <span class=\"n\">BOIN</span>\n  <span class=\"k\">UNION</span> <span class=\"k\">ALL</span> <span class=\"k\">SELECT</span> <span class=\"n\">rome</span><span class=\"p\">,</span> <span class=\"nb\">bit</span> <span class=\"k\">FROM</span> <span class=\"n\">REIGAI</span>\n  <span class=\"k\">UNION</span> <span class=\"k\">ALL</span> <span class=\"k\">SELECT</span> <span class=\"n\">CONCAT</span><span class=\"p\">(</span><span class=\"n\">S</span><span class=\"p\">.</span><span class=\"n\">rome</span><span class=\"p\">,</span> <span class=\"n\">B</span><span class=\"p\">.</span><span class=\"n\">rome</span><span class=\"p\">),</span> <span class=\"n\">S</span><span class=\"p\">.</span><span class=\"nb\">bit</span> <span class=\"o\">|</span> <span class=\"n\">B</span><span class=\"p\">.</span><span class=\"nb\">bit</span> <span class=\"k\">FROM</span> <span class=\"n\">SHIN</span> <span class=\"n\">S</span> <span class=\"k\">CROSS</span> <span class=\"k\">JOIN</span> <span class=\"n\">BOIN</span> <span class=\"n\">B</span>\n<span class=\"p\">),</span>\n<span class=\"k\">INPUT</span> <span class=\"p\">(</span><span class=\"n\">txt</span><span class=\"p\">)</span> <span class=\"k\">AS</span> <span class=\"p\">(</span>\n            <span class=\"k\">SELECT</span> <span class=\"s1\">'A HI RU'</span>\n  <span class=\"k\">UNION</span> <span class=\"k\">ALL</span> <span class=\"k\">SELECT</span> <span class=\"s1\">'KI RI N'</span>\n  <span class=\"k\">UNION</span> <span class=\"k\">ALL</span> <span class=\"k\">SELECT</span> <span class=\"s1\">'SI MA U MA'</span>\n  <span class=\"k\">UNION</span> <span class=\"k\">ALL</span> <span class=\"k\">SELECT</span> <span class=\"s1\">'NI WA TO RI'</span>\n  <span class=\"k\">UNION</span> <span class=\"k\">ALL</span> <span class=\"k\">SELECT</span> <span class=\"s1\">'HI YO KO'</span>\n  <span class=\"k\">UNION</span> <span class=\"k\">ALL</span> <span class=\"k\">SELECT</span> <span class=\"s1\">'KI TU NE'</span>\n<span class=\"p\">),</span>\n<span class=\"n\">WORD</span> <span class=\"p\">(</span><span class=\"n\">txt</span><span class=\"p\">,</span> <span class=\"n\">lvl</span><span class=\"p\">,</span> <span class=\"n\">rome</span><span class=\"p\">,</span> <span class=\"n\">rest</span><span class=\"p\">)</span> <span class=\"k\">AS</span> <span class=\"p\">(</span>\n    <span class=\"k\">SELECT</span> <span class=\"n\">txt</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">'  '</span><span class=\"p\">,</span> <span class=\"n\">CONCAT</span><span class=\"p\">(</span><span class=\"n\">txt</span><span class=\"p\">,</span> <span class=\"s1\">' '</span><span class=\"p\">)</span> <span class=\"k\">FROM</span> <span class=\"k\">INPUT</span>\n  <span class=\"k\">UNION</span> <span class=\"k\">ALL</span> \n    <span class=\"k\">SELECT</span> <span class=\"n\">txt</span><span class=\"p\">,</span> <span class=\"n\">lvl</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">SUBSTR</span><span class=\"p\">(</span><span class=\"n\">rest</span> <span class=\"k\">FROM</span> <span class=\"mi\">1</span> <span class=\"k\">FOR</span> <span class=\"n\">INSTR</span><span class=\"p\">(</span><span class=\"n\">rest</span><span class=\"p\">,</span> <span class=\"s1\">' '</span><span class=\"p\">)),</span> <span class=\"n\">SUBSTR</span><span class=\"p\">(</span><span class=\"n\">rest</span> <span class=\"k\">FROM</span> <span class=\"n\">INSTR</span><span class=\"p\">(</span><span class=\"n\">rest</span><span class=\"p\">,</span> <span class=\"s1\">' '</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"k\">FROM</span> <span class=\"n\">WORD</span>\n    <span class=\"k\">WHERE</span> <span class=\"n\">rest</span> <span class=\"o\">&lt;&gt;</span> <span class=\"s1\">''</span>\n<span class=\"p\">),</span>\n<span class=\"n\">A</span> <span class=\"p\">(</span><span class=\"n\">txt</span><span class=\"p\">,</span> <span class=\"n\">lvl</span><span class=\"p\">,</span> <span class=\"n\">tenji</span><span class=\"p\">)</span> <span class=\"k\">AS</span> <span class=\"p\">(</span>\n  <span class=\"k\">SELECT</span> <span class=\"n\">W</span><span class=\"p\">.</span><span class=\"n\">txt</span><span class=\"p\">,</span> <span class=\"n\">W</span><span class=\"p\">.</span><span class=\"n\">lvl</span><span class=\"p\">,</span> <span class=\"k\">REPLACE</span><span class=\"p\">(</span><span class=\"k\">REPLACE</span><span class=\"p\">(</span><span class=\"n\">LPAD</span><span class=\"p\">(</span><span class=\"n\">BIN</span><span class=\"p\">(</span><span class=\"n\">H</span><span class=\"p\">.</span><span class=\"nb\">bit</span><span class=\"p\">),</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"s1\">'0'</span><span class=\"p\">),</span> <span class=\"s1\">'1'</span><span class=\"p\">,</span> <span class=\"s1\">'o'</span><span class=\"p\">),</span> <span class=\"s1\">'0'</span><span class=\"p\">,</span> <span class=\"s1\">'-'</span><span class=\"p\">)</span>\n  <span class=\"k\">FROM</span> <span class=\"n\">WORD</span> <span class=\"n\">W</span>\n  <span class=\"k\">JOIN</span> <span class=\"n\">HENKAN</span> <span class=\"n\">H</span> <span class=\"k\">ON</span> <span class=\"n\">W</span><span class=\"p\">.</span><span class=\"n\">rome</span> <span class=\"o\">=</span> <span class=\"n\">H</span><span class=\"p\">.</span><span class=\"n\">rome</span>\n<span class=\"p\">),</span>\n<span class=\"n\">B</span> <span class=\"p\">(</span><span class=\"n\">txt</span><span class=\"p\">,</span> <span class=\"n\">lvl</span><span class=\"p\">,</span> <span class=\"n\">col</span><span class=\"p\">,</span> <span class=\"n\">tenji</span><span class=\"p\">)</span> <span class=\"k\">AS</span> <span class=\"p\">(</span>\n            <span class=\"k\">SELECT</span> <span class=\"n\">txt</span><span class=\"p\">,</span> <span class=\"n\">lvl</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">SUBSTR</span><span class=\"p\">(</span><span class=\"n\">tenji</span> <span class=\"k\">FROM</span> <span class=\"mi\">1</span> <span class=\"k\">FOR</span> <span class=\"mi\">2</span><span class=\"p\">)</span> <span class=\"k\">FROM</span> <span class=\"n\">A</span>\n  <span class=\"k\">UNION</span> <span class=\"k\">ALL</span> <span class=\"k\">SELECT</span> <span class=\"n\">txt</span><span class=\"p\">,</span> <span class=\"n\">lvl</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">SUBSTR</span><span class=\"p\">(</span><span class=\"n\">tenji</span> <span class=\"k\">FROM</span> <span class=\"mi\">3</span> <span class=\"k\">FOR</span> <span class=\"mi\">2</span><span class=\"p\">)</span> <span class=\"k\">FROM</span> <span class=\"n\">A</span>\n  <span class=\"k\">UNION</span> <span class=\"k\">ALL</span> <span class=\"k\">SELECT</span> <span class=\"n\">txt</span><span class=\"p\">,</span> <span class=\"n\">lvl</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">SUBSTR</span><span class=\"p\">(</span><span class=\"n\">tenji</span> <span class=\"k\">FROM</span> <span class=\"mi\">5</span> <span class=\"k\">FOR</span> <span class=\"mi\">2</span><span class=\"p\">)</span> <span class=\"k\">FROM</span> <span class=\"n\">A</span>\n<span class=\"p\">),</span>\n<span class=\"k\">C</span> <span class=\"p\">(</span><span class=\"n\">txt</span><span class=\"p\">,</span> <span class=\"n\">col</span><span class=\"p\">,</span> <span class=\"n\">tenji</span><span class=\"p\">)</span> <span class=\"k\">AS</span> <span class=\"p\">(</span>\n  <span class=\"k\">SELECT</span> <span class=\"n\">txt</span><span class=\"p\">,</span> <span class=\"n\">col</span><span class=\"p\">,</span> <span class=\"n\">GROUP_CONCAT</span><span class=\"p\">(</span><span class=\"n\">tenji</span> <span class=\"k\">ORDER</span> <span class=\"k\">BY</span> <span class=\"n\">lvl</span> <span class=\"n\">SEPARATOR</span> <span class=\"s1\">' '</span><span class=\"p\">)</span>\n  <span class=\"k\">FROM</span> <span class=\"n\">B</span>\n  <span class=\"k\">GROUP</span> <span class=\"k\">BY</span> <span class=\"n\">txt</span><span class=\"p\">,</span> <span class=\"n\">col</span>\n<span class=\"p\">)</span>\n<span class=\"k\">SELECT</span> <span class=\"n\">txt</span><span class=\"p\">,</span> <span class=\"n\">GROUP_CONCAT</span><span class=\"p\">(</span><span class=\"n\">tenji</span> <span class=\"k\">ORDER</span> <span class=\"k\">BY</span> <span class=\"n\">col</span> <span class=\"n\">SEPARATOR</span> <span class=\"s1\">'</span><span class=\"se\">\\n</span><span class=\"s1\">'</span><span class=\"p\">)</span> <span class=\"k\">AS</span> <span class=\"n\">tenji</span>\n<span class=\"k\">FROM</span> <span class=\"k\">C</span>\n<span class=\"k\">GROUP</span> <span class=\"k\">BY</span> <span class=\"n\">txt</span>\n\n</code></pre></div></div>\n\n<p>実行結果は次の通り。提供されているUnitテストがあるのですが、テストケースはそこから拝借しています。</p>\n\n<table>\n<thead>\n<tr>\n<th style=\"text-align: left\">txt</th>\n<th style=\"text-align: left\">tenji</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align: left\">A HI RU</td>\n<td style=\"text-align: left\">o- o- oo<br>-- o- -o<br>-- oo --</td>\n</tr>\n<tr>\n<td style=\"text-align: left\">HI YO KO</td>\n<td style=\"text-align: left\">o- -o -o<br>o- -o o-<br>oo o- -o</td>\n</tr>\n<tr>\n<td style=\"text-align: left\">KI RI N</td>\n<td style=\"text-align: left\">o- o- --<br>o- oo -o<br>-o -- oo</td>\n</tr>\n<tr>\n<td style=\"text-align: left\">KI TU NE</td>\n<td style=\"text-align: left\">o- oo oo<br>o- -o o-<br>-o o- o-</td>\n</tr>\n<tr>\n<td style=\"text-align: left\">NI WA TO RI</td>\n<td style=\"text-align: left\">o- -- -o o-<br>o- -- oo oo<br>o- o- o- --</td>\n</tr>\n<tr>\n<td style=\"text-align: left\">SI MA U MA</td>\n<td style=\"text-align: left\">o- o- oo o-<br>oo -o -- -o<br>-o oo -- oo</td>\n</tr>\n</tbody>\n</table>\n\n<h1>\n<span id=\"簡単な解説\" class=\"fragment\"></span><a href=\"#%E7%B0%A1%E5%8D%98%E3%81%AA%E8%A7%A3%E8%AA%AC\"><i class=\"fa fa-link\"></i></a>簡単な解説</h1>\n\n<p>やや長大なクエリですが、おおよそ3つの部分に分けられます。</p>\n\n<p>まず今回の変換対象である点字ですが、3種類に分けられます: ①母音だけからなるもの、②母音と子音を組み合わせたもの、③それ以外のもの。①はBOIN表、③はREIGAI表にまとめており、②については子音のみをSHIN表にまとめています。BOIN表とSHIN表とREIGAI表を組み合わせて、すべてのローマ字と点字を1対1で格納するHENKAN表を作成します。なおHENKAN表では点字を2進数(bit)で持っています。これは②で母音と子音を組み合わせる際に都合がよいからです (bit演算を利用している)。</p>\n\n<p>INPUT表には点字に変換したいローマ字列がまとめられています。与えられる文字列は空白区切りになっているので、トークンごとに分割してやる必要があります。この分割結果が格納されているのがWORD表で、再帰SQLを活用しています。</p>\n\n<p>あとはWORD表とHENKAN表を組み合わせて、文字列を求める形式に整形していきます。これをA表、B表、C表、そして最後のSELECT文で行っているわけですね。</p>\n","body":"# はじめに\n\nある日、Qiitaをながめていたところ、こんな面白そうなアドベントカレンダーを発見。\n\nhttps://qiita.com/advent-calendar/2021/ruby-challenge\n\nぜひ参加してみたかったのですが、時すでに遅しで、参加枠はゼロ。そういうわけでアドベントカレンダー終了後に勝手に参加しようと思います。勝手に参加するのであれば、言語も好き勝手に選んでいいよねということで、今回はSQLを選択しました。なお稼働確認したDBMSはMySQL8.0.23です。\n\n# 回答\n\n回答となるクエリは以下の通りです。もうちょっとシンプルに書けそうではありますね。\n\n```SQL\nWITH RECURSIVE\nBOIN (rome, bit) AS (\n            SELECT 'A', 0b100000+0\n  UNION ALL SELECT 'I', 0b101000+0\n  UNION ALL SELECT 'U', 0b110000+0\n  UNION ALL SELECT 'E', 0b111000+0\n  UNION ALL SELECT 'O', 0b011000+0\n),\nSHIN (rome, bit) AS (\n            SELECT 'K', 0b000001+0\n  UNION ALL SELECT 'S', 0b000101+0\n  UNION ALL SELECT 'T', 0b000110+0\n  UNION ALL SELECT 'N', 0b000010+0\n  UNION ALL SELECT 'H', 0b000011+0\n  UNION ALL SELECT 'M', 0b000111+0\n  UNION ALL SELECT 'R', 0b000100+0\n),\nREIGAI (rome, bit) AS (\n            SELECT 'YA', 0b010010+0\n  UNION ALL SELECT 'YU', 0b010011+0\n  UNION ALL SELECT 'YO', 0b010110+0\n  UNION ALL SELECT 'WA', 0b000010+0\n  UNION ALL SELECT 'N' , 0b000111+0\n),\nHENKAN (rome, bit)  AS (\n            SELECT rome, bit FROM BOIN\n  UNION ALL SELECT rome, bit FROM REIGAI\n  UNION ALL SELECT CONCAT(S.rome, B.rome), S.bit | B.bit FROM SHIN S CROSS JOIN BOIN B\n),\nINPUT (txt) AS (\n            SELECT 'A HI RU'\n  UNION ALL SELECT 'KI RI N'\n  UNION ALL SELECT 'SI MA U MA'\n  UNION ALL SELECT 'NI WA TO RI'\n  UNION ALL SELECT 'HI YO KO'\n  UNION ALL SELECT 'KI TU NE'\n),\nWORD (txt, lvl, rome, rest) AS (\n    SELECT txt, 0, '  ', CONCAT(txt, ' ') FROM INPUT\n  UNION ALL \n    SELECT txt, lvl + 1, SUBSTR(rest FROM 1 FOR INSTR(rest, ' ')), SUBSTR(rest FROM INSTR(rest, ' ') + 1)\n    FROM WORD\n    WHERE rest <> ''\n),\nA (txt, lvl, tenji) AS (\n  SELECT W.txt, W.lvl, REPLACE(REPLACE(LPAD(BIN(H.bit), 6, '0'), '1', 'o'), '0', '-')\n  FROM WORD W\n  JOIN HENKAN H ON W.rome = H.rome\n),\nB (txt, lvl, col, tenji) AS (\n            SELECT txt, lvl, 1, SUBSTR(tenji FROM 1 FOR 2) FROM A\n  UNION ALL SELECT txt, lvl, 2, SUBSTR(tenji FROM 3 FOR 2) FROM A\n  UNION ALL SELECT txt, lvl, 3, SUBSTR(tenji FROM 5 FOR 2) FROM A\n),\nC (txt, col, tenji) AS (\n  SELECT txt, col, GROUP_CONCAT(tenji ORDER BY lvl SEPARATOR ' ')\n  FROM B\n  GROUP BY txt, col\n)\nSELECT txt, GROUP_CONCAT(tenji ORDER BY col SEPARATOR '\\n') AS tenji\nFROM C\nGROUP BY txt\n\n```\n\n実行結果は次の通り。提供されているUnitテストがあるのですが、テストケースはそこから拝借しています。\n\n|txt|tenji|\n|:---|:---|\n|A HI RU|o- o- oo<br>-- o- -o<br>-- oo --|\n|HI YO KO|o- -o -o<br>o- -o o-<br>oo o- -o|\n|KI RI N|o- o- --<br>o- oo -o<br>-o -- oo|\n|KI TU NE|o- oo oo<br>o- -o o-<br>-o o- o-|\n|NI WA TO RI|o- -- -o o-<br>o- -- oo oo<br>o- o- o- --|\n|SI MA U MA|o- o- oo o-<br>oo -o -- -o<br>-o oo -- oo|\n\n# 簡単な解説\n\nやや長大なクエリですが、おおよそ3つの部分に分けられます。\n\nまず今回の変換対象である点字ですが、3種類に分けられます: ①母音だけからなるもの、②母音と子音を組み合わせたもの、③それ以外のもの。①はBOIN表、③はREIGAI表にまとめており、②については子音のみをSHIN表にまとめています。BOIN表とSHIN表とREIGAI表を組み合わせて、すべてのローマ字と点字を1対1で格納するHENKAN表を作成します。なおHENKAN表では点字を2進数(bit)で持っています。これは②で母音と子音を組み合わせる際に都合がよいからです (bit演算を利用している)。\n\nINPUT表には点字に変換したいローマ字列がまとめられています。与えられる文字列は空白区切りになっているので、トークンごとに分割してやる必要があります。この分割結果が格納されているのがWORD表で、再帰SQLを活用しています。\n\nあとはWORD表とHENKAN表を組み合わせて、文字列を求める形式に整形していきます。これをA表、B表、C表、そして最後のSELECT文で行っているわけですね。\n\n","coediting":false,"comments_count":0,"created_at":"2021-12-26T01:37:44+09:00","group":null,"id":"e9325e13d236a40b0121","likes_count":4,"private":false,"reactions_count":0,"stocks_count":0,"tags":[{"name":"SQL","versions":[]}],"title":"「点字メーカープログラム」をSQLで回答したい","updated_at":"2021-12-26T01:37:44+09:00","url":"https://qiita.com/neko_the_shadow/items/e9325e13d236a40b0121","user":{"description":"IT業界の片隅でひっそり生きるシステムエンジニアです(´・ω・｀)","facebook_id":"","followees_count":0,"followers_count":35,"github_login_name":null,"id":"neko_the_shadow","items_count":210,"linkedin_id":"","location":"神奈川県川崎市","name":"","organization":"","permanent_id":105859,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/105859/profile-images/1473709753","team_only":false,"twitter_screen_name":"neko_the_shadow","website_url":"https://nekotheshadow.github.io/"},"page_views_count":761,"team_membership":null,"organization_url_name":null}