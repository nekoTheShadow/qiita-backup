{"rendered_body":"\n<h1>\n<span id=\"発生した問題\" class=\"fragment\"></span><a href=\"#%E7%99%BA%E7%94%9F%E3%81%97%E3%81%9F%E5%95%8F%E9%A1%8C\"><i class=\"fa fa-link\"></i></a>発生した問題</h1>\n\n<p>Apache POIを利用するシステム開発プロジェクトでは「指定したシートを読み込み、2次元配列に変換する」というようなAPIを作成することがあります。自分がかかわっているプロジェクトでもそのようなAPIが提供されており、おおよそ以下のように実装されていました (読み込ませるシートはすべて文字列になっている想定)</p>\n\n<div class=\"code-frame\" data-lang=\"java\"><div class=\"highlight\"><pre><code><span class=\"k\">try</span> <span class=\"o\">(</span><span class=\"nc\">Workbook</span> <span class=\"n\">book</span> <span class=\"o\">=</span> <span class=\"nc\">WorkbookFactory</span><span class=\"o\">.</span><span class=\"na\">create</span><span class=\"o\">(</span><span class=\"nc\">Paths</span><span class=\"o\">.</span><span class=\"na\">get</span><span class=\"o\">(</span><span class=\"s\">\"target-book.xlsx\"</span><span class=\"o\">).</span><span class=\"na\">toFile</span><span class=\"o\">()))</span> <span class=\"o\">{</span>\n    <span class=\"nc\">Sheet</span> <span class=\"n\">sheet</span> <span class=\"o\">=</span> <span class=\"n\">book</span><span class=\"o\">.</span><span class=\"na\">getSheet</span><span class=\"o\">(</span><span class=\"s\">\"target-sheet\"</span><span class=\"o\">);</span>\n\n    <span class=\"nc\">List</span><span class=\"o\">&lt;</span><span class=\"nc\">List</span><span class=\"o\">&lt;</span><span class=\"nc\">String</span><span class=\"o\">&gt;&gt;</span> <span class=\"n\">lists</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nc\">ArrayList</span><span class=\"o\">&lt;&gt;();</span>\n    <span class=\"k\">for</span> <span class=\"o\">(</span><span class=\"nc\">Row</span> <span class=\"n\">row</span> <span class=\"o\">:</span> <span class=\"n\">sheet</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"nc\">List</span><span class=\"o\">&lt;</span><span class=\"nc\">String</span><span class=\"o\">&gt;</span> <span class=\"n\">list</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nc\">ArrayList</span><span class=\"o\">&lt;&gt;();</span>\n        <span class=\"k\">for</span> <span class=\"o\">(</span><span class=\"nc\">Cell</span> <span class=\"n\">cell</span> <span class=\"o\">:</span> <span class=\"n\">row</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n            <span class=\"n\">list</span><span class=\"o\">.</span><span class=\"na\">add</span><span class=\"o\">(</span><span class=\"n\">cell</span><span class=\"o\">.</span><span class=\"na\">getStringCellValue</span><span class=\"o\">());</span>\n        <span class=\"o\">}</span>\n        <span class=\"n\">lists</span><span class=\"o\">.</span><span class=\"na\">add</span><span class=\"o\">(</span><span class=\"n\">list</span><span class=\"o\">);</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"n\">doSomeThing</span><span class=\"o\">(</span><span class=\"n\">lists</span><span class=\"o\">);</span>\n<span class=\"o\">}</span>\n</code></pre></div></div>\n\n<p>さてこの実装は少なくともこのAPIを提供したチームが公表していた仕様を満たしていませんでした。たとえばこのAPIを使って以下のようなExcelを読み込ませたとします。</p>\n\n<p><a href=\"https://camo.qiitausercontent.com/1ceebc540368c05530871fc577f43c513de308af/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3130353835392f62336463323634342d626266362d653535642d396633342d3737323634623662613533632e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F105859%2Fb3dc2644-bbf6-e55d-9f34-77264b6ba53c.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=b2d4e65383c7cbfaa10bbfee21b53047\" alt=\"image.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/105859/b3dc2644-bbf6-e55d-9f34-77264b6ba53c.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F105859%2Fb3dc2644-bbf6-e55d-9f34-77264b6ba53c.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=b874281ea91a66b480193b02e6073e44 1x\" loading=\"lazy\"></a></p>\n\n<p>このシートは以下のような二次元配列に変換されます。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>[A1, B1, C1, D1, E1], \n[B2, D2],  \n[A4, B4, C4, D4, E4]\n</code></pre></div></div>\n\n<p>しかしAPI提供チームがうたっていた仕様では、このExcelシートは以下のように変換されるはずでした。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>[A1, B1, C1, D1, E1], \n[  , B2, ,   D2], \n[], \n[A4, B4, C4, D4, E4]\n</code></pre></div></div>\n\n<p>つまり、空の行や空のセルについても適切に処理するというのがAPI仕様でしたが、実装はそのようになっていませんでした。</p>\n\n<h1>\n<span id=\"原因と対策\" class=\"fragment\"></span><a href=\"#%E5%8E%9F%E5%9B%A0%E3%81%A8%E5%AF%BE%E7%AD%96\"><i class=\"fa fa-link\"></i></a>原因と対策</h1>\n\n<p><strong>原因は<code>Row</code>や<code>Cell</code>の読み込みにイテレータを利用していることです。</strong><code>Sheet</code>は<code>Iteratable&lt;Row&gt;</code>を、 <code>Row</code>は<code>Iterable&lt;Cell&gt;</code>をそれぞれ実装していますが、これらを利用すると、未定義の行や未定義のセルについては、存在しないものとしてスキップします。上述の例でいうと、3行目やA2セルやA3セルは、Apache POI上、未定義として扱われてしまい、イテレータ読み込みではないものとしてスキップされてしまいます。</p>\n\n<p>こういう空の行や空のセルをうまくハンドリングするには、<code>Sheet.getRow</code>や<code>Row.getCell</code>を使う必要があります。今回の場合は以下のように実装を修正しました。</p>\n\n<div class=\"code-frame\" data-lang=\"java\"><div class=\"highlight\"><pre><code><span class=\"k\">try</span> <span class=\"o\">(</span><span class=\"nc\">Workbook</span> <span class=\"n\">book</span> <span class=\"o\">=</span> <span class=\"nc\">WorkbookFactory</span><span class=\"o\">.</span><span class=\"na\">create</span><span class=\"o\">(</span><span class=\"nc\">Paths</span><span class=\"o\">.</span><span class=\"na\">get</span><span class=\"o\">(</span><span class=\"s\">\"target-book.xlsx\"</span><span class=\"o\">).</span><span class=\"na\">toFile</span><span class=\"o\">()))</span> <span class=\"o\">{</span>\n    <span class=\"nc\">Sheet</span> <span class=\"n\">sheet</span> <span class=\"o\">=</span> <span class=\"n\">book</span><span class=\"o\">.</span><span class=\"na\">getSheet</span><span class=\"o\">(</span><span class=\"s\">\"target-sheet\"</span><span class=\"o\">);</span>\n\n    <span class=\"nc\">List</span><span class=\"o\">&lt;</span><span class=\"nc\">List</span><span class=\"o\">&lt;</span><span class=\"nc\">String</span><span class=\"o\">&gt;&gt;</span> <span class=\"n\">lists</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nc\">ArrayList</span><span class=\"o\">&lt;&gt;();</span>\n    <span class=\"k\">for</span> <span class=\"o\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"o\">;</span> <span class=\"n\">i</span> <span class=\"o\">&lt;=</span> <span class=\"n\">sheet</span><span class=\"o\">.</span><span class=\"na\">getLastRowNum</span><span class=\"o\">();</span> <span class=\"n\">i</span><span class=\"o\">++)</span> <span class=\"o\">{</span>\n        <span class=\"nc\">Row</span> <span class=\"n\">row</span> <span class=\"o\">=</span> <span class=\"n\">sheet</span><span class=\"o\">.</span><span class=\"na\">getRow</span><span class=\"o\">(</span><span class=\"n\">i</span><span class=\"o\">);</span>\n        <span class=\"nc\">List</span><span class=\"o\">&lt;</span><span class=\"nc\">String</span><span class=\"o\">&gt;</span> <span class=\"n\">list</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nc\">ArrayList</span><span class=\"o\">&lt;&gt;();</span>\n\n        <span class=\"kt\">int</span> <span class=\"n\">len</span> <span class=\"o\">=</span> <span class=\"o\">(</span><span class=\"n\">row</span> <span class=\"o\">==</span> <span class=\"kc\">null</span><span class=\"o\">)</span> <span class=\"o\">?</span> <span class=\"mi\">0</span> <span class=\"o\">:</span> <span class=\"n\">row</span><span class=\"o\">.</span><span class=\"na\">getLastCellNum</span><span class=\"o\">();</span>\n        <span class=\"k\">for</span> <span class=\"o\">(</span><span class=\"kt\">int</span> <span class=\"n\">j</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"o\">;</span> <span class=\"n\">j</span> <span class=\"o\">&lt;</span> <span class=\"n\">len</span><span class=\"o\">;</span> <span class=\"n\">j</span><span class=\"o\">++)</span> <span class=\"o\">{</span>\n            <span class=\"nc\">Cell</span> <span class=\"n\">cell</span> <span class=\"o\">=</span> <span class=\"n\">row</span><span class=\"o\">.</span><span class=\"na\">getCell</span><span class=\"o\">(</span><span class=\"n\">j</span><span class=\"o\">);</span>\n            <span class=\"n\">list</span><span class=\"o\">.</span><span class=\"na\">add</span><span class=\"o\">((</span><span class=\"n\">cell</span> <span class=\"o\">==</span> <span class=\"kc\">null</span><span class=\"o\">)</span> <span class=\"o\">?</span> <span class=\"s\">\"\"</span> <span class=\"o\">:</span> <span class=\"n\">cell</span><span class=\"o\">.</span><span class=\"na\">getStringCellValue</span><span class=\"o\">());</span>\n        <span class=\"o\">}</span>\n        <span class=\"n\">lists</span><span class=\"o\">.</span><span class=\"na\">add</span><span class=\"o\">(</span><span class=\"n\">list</span><span class=\"o\">);</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"n\">doSomeThing</span><span class=\"o\">(</span><span class=\"n\">lists</span><span class=\"o\">);</span>\n<span class=\"o\">}</span>\n</code></pre></div></div>\n\n<h1>\n<span id=\"環境情報-pomxml抜粋\" class=\"fragment\"></span><a href=\"#%E7%92%B0%E5%A2%83%E6%83%85%E5%A0%B1-pomxml%E6%8A%9C%E7%B2%8B\"><i class=\"fa fa-link\"></i></a>環境情報 (pom.xml抜粋)</h1>\n\n<div class=\"code-frame\" data-lang=\"xml\"><div class=\"highlight\"><pre><code><span class=\"c\">&lt;!-- https://mvnrepository.com/artifact/org.apache.poi/poi --&gt;</span>\n<span class=\"nt\">&lt;dependency&gt;</span>\n    <span class=\"nt\">&lt;groupId&gt;</span>org.apache.poi<span class=\"nt\">&lt;/groupId&gt;</span>\n    <span class=\"nt\">&lt;artifactId&gt;</span>poi<span class=\"nt\">&lt;/artifactId&gt;</span>\n    <span class=\"nt\">&lt;version&gt;</span>5.0.0<span class=\"nt\">&lt;/version&gt;</span>\n<span class=\"nt\">&lt;/dependency&gt;</span>\n<span class=\"c\">&lt;!-- https://mvnrepository.com/artifact/org.apache.poi/poi-ooxml --&gt;</span>\n<span class=\"nt\">&lt;dependency&gt;</span>\n    <span class=\"nt\">&lt;groupId&gt;</span>org.apache.poi<span class=\"nt\">&lt;/groupId&gt;</span>\n    <span class=\"nt\">&lt;artifactId&gt;</span>poi-ooxml<span class=\"nt\">&lt;/artifactId&gt;</span>\n    <span class=\"nt\">&lt;version&gt;</span>5.0.0<span class=\"nt\">&lt;/version&gt;</span>\n<span class=\"nt\">&lt;/dependency&gt;</span>\n</code></pre></div></div>\n","body":"# 発生した問題\n\nApache POIを利用するシステム開発プロジェクトでは「指定したシートを読み込み、2次元配列に変換する」というようなAPIを作成することがあります。自分がかかわっているプロジェクトでもそのようなAPIが提供されており、おおよそ以下のように実装されていました (読み込ませるシートはすべて文字列になっている想定)\n\n```java\ntry (Workbook book = WorkbookFactory.create(Paths.get(\"target-book.xlsx\").toFile())) {\n    Sheet sheet = book.getSheet(\"target-sheet\");\n    \n    List<List<String>> lists = new ArrayList<>();\n    for (Row row : sheet) {\n        List<String> list = new ArrayList<>();\n        for (Cell cell : row) {\n            list.add(cell.getStringCellValue());\n        }\n        lists.add(list);\n    }\n    \n    doSomeThing(lists);\n}\n```\n\nさてこの実装は少なくともこのAPIを提供したチームが公表していた仕様を満たしていませんでした。たとえばこのAPIを使って以下のようなExcelを読み込ませたとします。\n\n![image.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/105859/b3dc2644-bbf6-e55d-9f34-77264b6ba53c.png)\n\nこのシートは以下のような二次元配列に変換されます。\n\n```\n[A1, B1, C1, D1, E1], \n[B2, D2],  \n[A4, B4, C4, D4, E4]\n```\n\nしかしAPI提供チームがうたっていた仕様では、このExcelシートは以下のように変換されるはずでした。\n\n```\n[A1, B1, C1, D1, E1], \n[  , B2, ,   D2], \n[], \n[A4, B4, C4, D4, E4]\n```\n\nつまり、空の行や空のセルについても適切に処理するというのがAPI仕様でしたが、実装はそのようになっていませんでした。\n\n# 原因と対策\n\n**原因は`Row`や`Cell`の読み込みにイテレータを利用していることです。**`Sheet`は`Iteratable<Row>`を、 `Row`は`Iterable<Cell>`をそれぞれ実装していますが、これらを利用すると、未定義の行や未定義のセルについては、存在しないものとしてスキップします。上述の例でいうと、3行目やA2セルやA3セルは、Apache POI上、未定義として扱われてしまい、イテレータ読み込みではないものとしてスキップされてしまいます。\n\nこういう空の行や空のセルをうまくハンドリングするには、`Sheet.getRow`や`Row.getCell`を使う必要があります。今回の場合は以下のように実装を修正しました。\n\n```java\ntry (Workbook book = WorkbookFactory.create(Paths.get(\"target-book.xlsx\").toFile())) {\n    Sheet sheet = book.getSheet(\"target-sheet\");\n    \n    List<List<String>> lists = new ArrayList<>();\n    for (int i = 0; i <= sheet.getLastRowNum(); i++) {\n        Row row = sheet.getRow(i);\n        List<String> list = new ArrayList<>();\n        \n        int len = (row == null) ? 0 : row.getLastCellNum();\n        for (int j = 0; j < len; j++) {\n            Cell cell = row.getCell(j);\n            list.add((cell == null) ? \"\" : cell.getStringCellValue());\n        }\n        lists.add(list);\n    }\n    \n    doSomeThing(lists);\n}\n```\n\n# 環境情報 (pom.xml抜粋) \n\n```xml\n<!-- https://mvnrepository.com/artifact/org.apache.poi/poi -->\n<dependency>\n    <groupId>org.apache.poi</groupId>\n    <artifactId>poi</artifactId>\n    <version>5.0.0</version>\n</dependency>\n<!-- https://mvnrepository.com/artifact/org.apache.poi/poi-ooxml -->\n<dependency>\n    <groupId>org.apache.poi</groupId>\n    <artifactId>poi-ooxml</artifactId>\n    <version>5.0.0</version>\n</dependency>\n```\n","coediting":false,"comments_count":0,"created_at":"2021-05-22T18:15:55+09:00","group":null,"id":"8982cc5102421952a999","likes_count":0,"private":false,"reactions_count":0,"tags":[{"name":"Java","versions":[]},{"name":"POI","versions":[]}],"title":"RowやCelをイテレータで処理する場合は未定義の行やセルに気を付ける","updated_at":"2021-05-22T18:16:53+09:00","url":"https://qiita.com/neko_the_shadow/items/8982cc5102421952a999","user":{"description":"IT業界の片隅でひっそり生きるシステムエンジニアです(´・ω・｀)","facebook_id":"","followees_count":0,"followers_count":35,"github_login_name":null,"id":"neko_the_shadow","items_count":186,"linkedin_id":"","location":"神奈川県川崎市","name":"","organization":"","permanent_id":105859,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/105859/profile-images/1473709753","team_only":false,"twitter_screen_name":"neko_the_shadow","website_url":"https://nekotheshadow.github.io/"},"page_views_count":null,"team_membership":null}