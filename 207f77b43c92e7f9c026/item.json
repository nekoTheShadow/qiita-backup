{"rendered_body":"<p><strong>注意</strong></p>\n\n<ul>\n<li>本記事は2016/03/31に作成されたものです</li>\n<li>OSはWindows10(64bit)です。</li>\n<li>本記事には外部サイトへのリンクがありますが、その内容については保証しかねます。</li>\n</ul>\n\n<p>最近windows10においてgit環境を構築したので、そのメモを残しておきたいと思います。</p>\n\n<h2>\n<span id=\"インストール\" class=\"fragment\"></span><a href=\"#%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB\"><i class=\"fa fa-link\"></i></a>インストール</h2>\n\n<p>windowsでgitを利用する場合、いくつか選択肢はあるようですが、今回は<a href=\"https://git-for-windows.github.io/\" rel=\"nofollow noopener\" target=\"_blank\">Git for Windows</a>を選択。該当のページに飛び、ダウンロード&amp;インストールするだけです。インストールガイドとしては<a href=\"http://opcdiary.net/?page_id=27065\" rel=\"nofollow noopener\" target=\"_blank\">「私家版 Git For Windowsのインストール手順」</a>が参考になりました。</p>\n\n<p>ただし当該記事ではgit用のコンソールとしてMinTTyの使用が推奨されていますが、わたしはコマンドプロンプトを選択しています。</p>\n\n<h2>\n<span id=\"ローカルでgitのお勉強\" class=\"fragment\"></span><a href=\"#%E3%83%AD%E3%83%BC%E3%82%AB%E3%83%AB%E3%81%A7git%E3%81%AE%E3%81%8A%E5%8B%89%E5%BC%B7\"><i class=\"fa fa-link\"></i></a>ローカルでgitのお勉強</h2>\n\n<p>Git for Windowsのインストールの際、設定さえきちんとしていればCUIからgitを利用できると思います。ここまでできれば、コマンドのお勉強ですね。学習用ツールもさまざまありますが、個人的に一番ためになったのは<a href=\"http://dotinstall.com/lessons/basic_git\" rel=\"nofollow noopener\" target=\"_blank\">ドットインストールの「git入門」</a>だったので、それをお勧めしておきます。</p>\n\n<h2>\n<span id=\"git-commit-に失敗する\" class=\"fragment\"></span><a href=\"#git-commit-%E3%81%AB%E5%A4%B1%E6%95%97%E3%81%99%E3%82%8B\"><i class=\"fa fa-link\"></i></a>git commit に失敗する?</h2>\n\n<p>gitでは<code>git add</code>と<code>git commit</code>を繰り返すわけですが、コマンドプロンプトから<code>git commit</code>コマンドをたたいた場合、<strong>コミットコメントの編集画面に移らず、プロンプトがブラックアウトしたまま、何の入力も受け付けない</strong>という現象が起きることがあります。</p>\n\n<p>gitはコメントの編集時にエディタを立ち上げる仕組みになっているのですが、windows環境ではこの立ち上げがうまくいかず、ブラックアウトしてしまうようです。したがってデフォルトで利用するエディタを設定してやる必要があります。</p>\n\n<p>おのおの好きなエディタでよいと思いますが、たとえばwindowsに必ずインストールされている「メモ帳」を使う場合は以下のようなコマンドで設定することができます。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>git config --global core.editor 'notepad'\n</code></pre></div></div>\n\n<p>またほかのエディタを利用したい場合などは<a href=\"http://d.hatena.ne.jp/stellaqua/20081110/1226298802\" rel=\"nofollow noopener\" target=\"_blank\">「Gitを触ってみるよ その2『WindowsでGitを使いやすくする』」</a>という記事が参考になると思います。</p>\n\n<h2>\n<span id=\"githubを利用する\" class=\"fragment\"></span><a href=\"#github%E3%82%92%E5%88%A9%E7%94%A8%E3%81%99%E3%82%8B\"><i class=\"fa fa-link\"></i></a>GitHubを利用する</h2>\n\n<p>さてgitコマンドが問題なく作動することを一通り確認したあとはGitHubを利用するだけですね。わたしは次のブログ記事を参考にしました:<a href=\"http://www.karakaram.com/git-install\" rel=\"nofollow noopener\" target=\"_blank\">「Windowsにgitをインストールしてgithubにpushするまで」</a>。</p>\n\n<p>懇切丁寧に説明してくれていますが、1点補足します。当該記事ではgit bashというツールにコマンドを打ち込む形で公開鍵を生成していますが、Git for Windowsを利用した場合、<strong>その必要はありません</strong>。Git for Windowsのインストールの際、Git GUIというツールが付随するのですが、そのツールを利用すると、コマンドを打ち込むことなく公開鍵を生成することができます。(参考:<a href=\"http://www.koikikukan.com/archives/2010/08/04-235555.php\" rel=\"nofollow noopener\" target=\"_blank\">「Github を Windows で利用する（Git GUI編）」</a>)</p>\n","body":"**注意**\n\n- 本記事は2016/03/31に作成されたものです\n- OSはWindows10(64bit)です。\n- 本記事には外部サイトへのリンクがありますが、その内容については保証しかねます。\n  \n最近windows10においてgit環境を構築したので、そのメモを残しておきたいと思います。\n\n## インストール\n\nwindowsでgitを利用する場合、いくつか選択肢はあるようですが、今回は[Git for Windows](https://git-for-windows.github.io/)を選択。該当のページに飛び、ダウンロード&インストールするだけです。インストールガイドとしては[「私家版 Git For Windowsのインストール手順」](http://opcdiary.net/?page_id=27065)が参考になりました。\n\nただし当該記事ではgit用のコンソールとしてMinTTyの使用が推奨されていますが、わたしはコマンドプロンプトを選択しています。\n\n## ローカルでgitのお勉強\n\nGit for Windowsのインストールの際、設定さえきちんとしていればCUIからgitを利用できると思います。ここまでできれば、コマンドのお勉強ですね。学習用ツールもさまざまありますが、個人的に一番ためになったのは[ドットインストールの「git入門」](http://dotinstall.com/lessons/basic_git)だったので、それをお勧めしておきます。\n\n## git commit に失敗する?\n\ngitでは`git add`と`git commit`を繰り返すわけですが、コマンドプロンプトから`git commit`コマンドをたたいた場合、**コミットコメントの編集画面に移らず、プロンプトがブラックアウトしたまま、何の入力も受け付けない**という現象が起きることがあります。\n\ngitはコメントの編集時にエディタを立ち上げる仕組みになっているのですが、windows環境ではこの立ち上げがうまくいかず、ブラックアウトしてしまうようです。したがってデフォルトで利用するエディタを設定してやる必要があります。\n\nおのおの好きなエディタでよいと思いますが、たとえばwindowsに必ずインストールされている「メモ帳」を使う場合は以下のようなコマンドで設定することができます。\n\n```\ngit config --global core.editor 'notepad'\n```\n\nまたほかのエディタを利用したい場合などは[「Gitを触ってみるよ その2『WindowsでGitを使いやすくする』」](http://d.hatena.ne.jp/stellaqua/20081110/1226298802)という記事が参考になると思います。\n\n## GitHubを利用する\n\nさてgitコマンドが問題なく作動することを一通り確認したあとはGitHubを利用するだけですね。わたしは次のブログ記事を参考にしました:[「Windowsにgitをインストールしてgithubにpushするまで」](http://www.karakaram.com/git-install)。\n\n懇切丁寧に説明してくれていますが、1点補足します。当該記事ではgit bashというツールにコマンドを打ち込む形で公開鍵を生成していますが、Git for Windowsを利用した場合、**その必要はありません**。Git for Windowsのインストールの際、Git GUIというツールが付随するのですが、そのツールを利用すると、コマンドを打ち込むことなく公開鍵を生成することができます。(参考:[「Github を Windows で利用する（Git GUI編）」](http://www.koikikukan.com/archives/2010/08/04-235555.php))\n","coediting":false,"comments_count":0,"created_at":"2016-03-31T17:28:31+09:00","group":null,"id":"207f77b43c92e7f9c026","likes_count":24,"private":false,"reactions_count":0,"tags":[{"name":"Git","versions":[]},{"name":"Windows10","versions":[]}],"title":"Windows10でgit環境を作るまでのメモ。","updated_at":"2016-03-31T17:28:31+09:00","url":"https://qiita.com/neko_the_shadow/items/207f77b43c92e7f9c026","user":{"description":"IT業界の片隅でひっそり生きるシステムエンジニアです(´・ω・｀)","facebook_id":"","followees_count":0,"followers_count":36,"github_login_name":null,"id":"neko_the_shadow","items_count":196,"linkedin_id":"","location":"神奈川県川崎市","name":"","organization":"","permanent_id":105859,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/105859/profile-images/1473709753","team_only":false,"twitter_screen_name":"neko_the_shadow","website_url":"https://nekotheshadow.github.io/"},"page_views_count":null,"team_membership":null}