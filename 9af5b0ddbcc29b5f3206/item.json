{"rendered_body":"<p><a href=\"https://codeiq.jp/q/2683\" rel=\"nofollow noopener\" target=\"_blank\">CodeIQ「『ロング・ロング・ストリング』問題」</a>の掲載期間が終了したということで、自分が提出したコードを公開したいと思います。なお<a href=\"http://togetter.com/li/947393\" rel=\"nofollow noopener\" target=\"_blank\">他の方のコードはTogetterにまとめられている</a>ということで、そちらをご参照お願いします。また具体的な問題の内容はCodeIQMagazineあたりに公開されると思いますので、そのとき覚えていればリンクを張り付けたいと思います。</p>\n\n<h1>\n<span id=\"提出コード\" class=\"fragment\"></span><a href=\"#%E6%8F%90%E5%87%BA%E3%82%B3%E3%83%BC%E3%83%89\"><i class=\"fa fa-link\"></i></a>提出コード</h1>\n\n<div class=\"code-frame\" data-lang=\"rb\"><div class=\"highlight\"><pre><code><span class=\"c1\"># 問題文中のF(n)。つまりn^nの桁数を常用対数を利用して求める</span>\n<span class=\"k\">def</span> <span class=\"nf\">f</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">)</span>\n    <span class=\"p\">(</span><span class=\"no\">Math</span><span class=\"p\">.</span><span class=\"nf\">log10</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"n\">n</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">).</span><span class=\"nf\">to_i</span>\n<span class=\"k\">end</span>\n\n<span class=\"c1\"># 問題文中のG(m)。つまりF(n) = m となるnを二分探索を利用して求める</span>\n<span class=\"k\">def</span> <span class=\"nf\">g</span><span class=\"p\">(</span><span class=\"n\">m</span><span class=\"p\">,</span> <span class=\"n\">rate</span> <span class=\"o\">=</span> <span class=\"mi\">10</span><span class=\"p\">)</span>\n    <span class=\"c1\"># nの上界highと下界lowをそれぞれ求める</span>\n    <span class=\"n\">low</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n    <span class=\"n\">low</span> <span class=\"o\">*=</span> <span class=\"n\">rate</span> <span class=\"k\">until</span> <span class=\"n\">f</span><span class=\"p\">(</span><span class=\"n\">low</span><span class=\"p\">)</span> <span class=\"o\">&lt;=</span> <span class=\"n\">m</span> <span class=\"o\">&amp;&amp;</span> <span class=\"n\">m</span> <span class=\"o\">&lt;=</span> <span class=\"n\">f</span><span class=\"p\">(</span><span class=\"n\">low</span> <span class=\"o\">*</span> <span class=\"n\">rate</span><span class=\"p\">)</span>\n    <span class=\"n\">high</span> <span class=\"o\">=</span> <span class=\"n\">low</span> <span class=\"o\">*</span> <span class=\"n\">rate</span>\n\n    <span class=\"c1\"># mについて二分探索を実行する。見つからなければ-1が戻り値となる</span>\n    <span class=\"k\">while</span> <span class=\"n\">low</span> <span class=\"o\">&lt;=</span> <span class=\"n\">high</span> <span class=\"k\">do</span>\n        <span class=\"n\">n</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">low</span> <span class=\"o\">+</span> <span class=\"n\">high</span><span class=\"p\">)</span> <span class=\"o\">/</span> <span class=\"mi\">2</span>\n        <span class=\"k\">return</span> <span class=\"n\">n</span> <span class=\"k\">if</span> <span class=\"n\">f</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"n\">m</span>\n        <span class=\"n\">f</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">)</span> <span class=\"o\">&lt;</span> <span class=\"n\">m</span> <span class=\"p\">?</span> <span class=\"n\">low</span> <span class=\"o\">=</span> <span class=\"n\">n</span> <span class=\"o\">+</span> <span class=\"mi\">1</span> <span class=\"p\">:</span> <span class=\"n\">high</span> <span class=\"o\">=</span> <span class=\"n\">n</span> <span class=\"o\">-</span> <span class=\"mi\">1</span>\n    <span class=\"k\">end</span>\n    <span class=\"o\">-</span><span class=\"mi\">1</span>\n<span class=\"k\">end</span>\n\n<span class=\"c1\"># == main ==</span>\n<span class=\"n\">m</span> <span class=\"o\">=</span> <span class=\"nb\">gets</span><span class=\"p\">.</span><span class=\"nf\">to_i</span>\n<span class=\"nb\">p</span> <span class=\"n\">g</span><span class=\"p\">(</span><span class=\"n\">m</span><span class=\"p\">)</span>\n</code></pre></div></div>\n\n<h1>\n<span id=\"考え方\" class=\"fragment\"></span><a href=\"#%E8%80%83%E3%81%88%E6%96%B9\"><i class=\"fa fa-link\"></i></a>考え方</h1>\n\n<p>問題文中の$n$と$m$は「$m$($n$)がひとつに決定すれば$n$($m$)もまたただ一つに決まり、かつ$m$($n$)が大きくなれば$n$($m$)もまた大きくなる」関係にあります。つまり$n=2,3,4,5,6...$と大きくしたとき、対応する$m$は$1,2,3,4,5...$というようにソートされた状態ですから、二分探索が有効とわかります。つまり</p>\n\n<ol>\n<li>$n$を適当に決める</li>\n<li>$F(n)$を計算する</li>\n<li>その値が目的の$m$より大きいときは、$n$をより小さくして2.へもどる。$m$より大きいときは、$n$をより大きくして2.へ戻る</li>\n</ol>\n\n<p>以上を繰り返せば、目的の$m$に対応する$n$を求めることができるはずです。</p>\n\n<p>このとき注意せねばならないのは$F(n)$が必要になること、つまり「$n^n$の桁数を求める処理」が求められることです。思わず<code>i.to_s.size</code>としたくなりますが、これはだめ。計算量が大きくなりすぎて、制限時間中には終わらなくなります。</p>\n\n<p>したがって別の方法、つまり常用対数を利用する必要があります。たとえば$n^n$の桁数を$x$とすると</p>\n\n<div class=\"code-frame\" data-lang=\"math\"><div class=\"highlight\"><pre><code>10^{x-1} \\leq n^n &lt; 10^x \\\\\n\\log 10^{x-1} \\leq \\log n^n &lt; \\log 10^x \\\\\n(x-1)\\log 10 \\leq n \\log n &lt; x\\log10 \\\\\nx-1 \\leq n \\log n &lt; x\n</code></pre></div></div>\n\n<p>よって$\\log n$の値がわかれば、xの値も決定するということです。センター試験の数学1Aに出てきそうな問題ですね。幸いにもRubyには<code>Math</code>モジュールに<code>log10</code>メソッドが用意されているので、常用対数を簡単に求めることができるはずです。</p>\n","body":"[CodeIQ「『ロング・ロング・ストリング』問題」](https://codeiq.jp/q/2683)の掲載期間が終了したということで、自分が提出したコードを公開したいと思います。なお[他の方のコードはTogetterにまとめられている](http://togetter.com/li/947393)ということで、そちらをご参照お願いします。また具体的な問題の内容はCodeIQMagazineあたりに公開されると思いますので、そのとき覚えていればリンクを張り付けたいと思います。\n\n# 提出コード\n\n```rb\n# 問題文中のF(n)。つまりn^nの桁数を常用対数を利用して求める\ndef f(n)\n    (Math.log10(n) * n + 1).to_i\nend\n\n# 問題文中のG(m)。つまりF(n) = m となるnを二分探索を利用して求める\ndef g(m, rate = 10)\n    # nの上界highと下界lowをそれぞれ求める\n    low = 1\n    low *= rate until f(low) <= m && m <= f(low * rate)\n    high = low * rate\n\n    # mについて二分探索を実行する。見つからなければ-1が戻り値となる\n    while low <= high do\n        n = (low + high) / 2\n        return n if f(n) == m\n        f(n) < m ? low = n + 1 : high = n - 1\n    end\n    -1\nend\n\n# == main ==\nm = gets.to_i\np g(m)\n```\n\n# 考え方\n\n問題文中の$n$と$m$は「$m$($n$)がひとつに決定すれば$n$($m$)もまたただ一つに決まり、かつ$m$($n$)が大きくなれば$n$($m$)もまた大きくなる」関係にあります。つまり$n=2,3,4,5,6...$と大きくしたとき、対応する$m$は$1,2,3,4,5...$というようにソートされた状態ですから、二分探索が有効とわかります。つまり\n\n1. $n$を適当に決める\n2. $F(n)$を計算する\n2. その値が目的の$m$より大きいときは、$n$をより小さくして2.へもどる。$m$より大きいときは、$n$をより大きくして2.へ戻る\n\n以上を繰り返せば、目的の$m$に対応する$n$を求めることができるはずです。\n\nこのとき注意せねばならないのは$F(n)$が必要になること、つまり「$n^n$の桁数を求める処理」が求められることです。思わず`i.to_s.size`としたくなりますが、これはだめ。計算量が大きくなりすぎて、制限時間中には終わらなくなります。\n\nしたがって別の方法、つまり常用対数を利用する必要があります。たとえば$n^n$の桁数を$x$とすると\n\n```math\n10^{x-1} \\leq n^n < 10^x \\\\\n\\log 10^{x-1} \\leq \\log n^n < \\log 10^x \\\\\n(x-1)\\log 10 \\leq n \\log n < x\\log10 \\\\\nx-1 \\leq n \\log n < x\n```\n\nよって$\\log n$の値がわかれば、xの値も決定するということです。センター試験の数学1Aに出てきそうな問題ですね。幸いにもRubyには`Math`モジュールに`log10`メソッドが用意されているので、常用対数を簡単に求めることができるはずです。\n\n","coediting":false,"comments_count":0,"created_at":"2016-03-10T23:57:27+09:00","group":null,"id":"9af5b0ddbcc29b5f3206","likes_count":1,"private":false,"reactions_count":0,"stocks_count":1,"tags":[{"name":"Ruby","versions":[]},{"name":"codeiq","versions":[]}],"title":"CodeIQ「『ロング・ロング・ストリング』問題」に参加しました。","updated_at":"2016-03-10T23:57:27+09:00","url":"https://qiita.com/neko_the_shadow/items/9af5b0ddbcc29b5f3206","user":{"description":"IT業界の片隅でひっそり生きるシステムエンジニアです(´・ω・｀)","facebook_id":"","followees_count":0,"followers_count":35,"github_login_name":null,"id":"neko_the_shadow","items_count":210,"linkedin_id":"","location":"神奈川県川崎市","name":"","organization":"","permanent_id":105859,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/105859/profile-images/1473709753","team_only":false,"twitter_screen_name":"neko_the_shadow","website_url":"https://nekotheshadow.github.io/"},"page_views_count":803,"team_membership":null,"organization_url_name":null}