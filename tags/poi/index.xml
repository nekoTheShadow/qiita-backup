<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>POI on Qiita Backup</title><link>https://nekotheshadow.github.io/qiita-backup/tags/poi/</link><description>Recent content in POI on Qiita Backup</description><generator>Hugo -- gohugo.io</generator><language>ja</language><lastBuildDate>Tue, 23 Nov 2021 14:36:03 +0900</lastBuildDate><atom:link href="https://nekotheshadow.github.io/qiita-backup/tags/poi/index.xml" rel="self" type="application/rss+xml"/><item><title>Apache POIを使って列の幅の自動調整を行う</title><link>https://nekotheshadow.github.io/qiita-backup/blog/2dcf0c8275317135733b/</link><pubDate>Tue, 23 Nov 2021 14:36:03 +0900</pubDate><guid>https://nekotheshadow.github.io/qiita-backup/blog/2dcf0c8275317135733b/</guid><description>Excelの列の幅の自動調整に相当することをApache POIで実現したい場合、Sheet.autoSizeColumnを利用すると良いです</description></item><item><title>Apache POIを使ってセルにリンクを設定する</title><link>https://nekotheshadow.github.io/qiita-backup/blog/5ea378e90f618902fc18/</link><pubDate>Tue, 23 Nov 2021 14:34:27 +0900</pubDate><guid>https://nekotheshadow.github.io/qiita-backup/blog/5ea378e90f618902fc18/</guid><description>Apache POIを使ってセルにリンクを設定する場合のサンプルを以下に示します。 Workbook workbook = ...; Cell cell = ...; // セルにハイパーリンクを設定する Hyperlink hyperlink = workbook.getCreationHelper().createHyperlink(HyperlinkType.DOCUMENT); hyperlink.setAddress(&amp;#34;destination!A1&amp;#34;); cell.setHyperlink(hyperlink); // セルに値</description></item><item><title>Apache POIを利用している際にA1形式でセルを取得したい</title><link>https://nekotheshadow.github.io/qiita-backup/blog/f3c9686fd9103f40b512/</link><pubDate>Sun, 31 Oct 2021 20:54:52 +0900</pubDate><guid>https://nekotheshadow.github.io/qiita-backup/blog/f3c9686fd9103f40b512/</guid><description>Excelではセルの位置を示すにあたって、A1形式を利用することが一般的だと思います。Apache POIを利用している際にA1形式でセルを取</description></item><item><title>Apache POIを使って、シートをソートしたい</title><link>https://nekotheshadow.github.io/qiita-backup/blog/b20f34c0a3cba56e14b9/</link><pubDate>Sun, 31 Oct 2021 20:33:50 +0900</pubDate><guid>https://nekotheshadow.github.io/qiita-backup/blog/b20f34c0a3cba56e14b9/</guid><description>Excelにはシートをソートする機能は標準で用意されていません。通常はVBAを利用するのですが、VBAにはソート関数がなく、これを自前を用意</description></item><item><title>XSSF(xlsx)を扱う3種類の方法とメモリ消費量について</title><link>https://nekotheshadow.github.io/qiita-backup/blog/4ee737e9fb98dfb275b4/</link><pubDate>Sun, 03 Oct 2021 19:04:21 +0900</pubDate><guid>https://nekotheshadow.github.io/qiita-backup/blog/4ee737e9fb98dfb275b4/</guid><description>注意: 基本的にはこのあたりのドキュメントを読めばよい話ですが、自分用に簡単にまとめておきますね(´・ω・`) https://poi.apache.org/components/spreadsheet/ http://poi.apache.org/components/spreadsheet/how-to.html#xssf_sax_api JavaでExcelを操作す</description></item><item><title>RowやCellをイテレータで処理する場合は未定義の行やセルに気を付ける</title><link>https://nekotheshadow.github.io/qiita-backup/blog/8982cc5102421952a999/</link><pubDate>Sat, 22 May 2021 18:15:55 +0900</pubDate><guid>https://nekotheshadow.github.io/qiita-backup/blog/8982cc5102421952a999/</guid><description>発生した問題 Apache POIを利用するシステム開発プロジェクトでは「指定したシートを読み込み、2次元配列に変換する」というようなAPIを作成すること</description></item><item><title>表示形式が設定された状態の値を取得したい</title><link>https://nekotheshadow.github.io/qiita-backup/blog/5664d767816002218a23/</link><pubDate>Sat, 22 May 2021 17:27:36 +0900</pubDate><guid>https://nekotheshadow.github.io/qiita-backup/blog/5664d767816002218a23/</guid><description>Excelにはセルの表示形式という機能があって、セルに同じデータを入力していても、セルの表示形式を変更することによって、任意の形式で表示する</description></item><item><title>関数を評価する前もしくは評価した後のセルの値が欲しい</title><link>https://nekotheshadow.github.io/qiita-backup/blog/92c1d73c157a724d18bd/</link><pubDate>Sun, 16 May 2021 17:30:21 +0900</pubDate><guid>https://nekotheshadow.github.io/qiita-backup/blog/92c1d73c157a724d18bd/</guid><description>関数を評価した後の値が欲しい Apache POIでセルの値を取得する際、「セルに関数が含まれている場合は関数を評価した後の値が欲しい」とします。書き方は</description></item><item><title>SXSSFWorkbookを利用する際の個人的な注意点 (行単位のアクセス単位は避けたほうが無難 / 既存のxlsxファイルで書き込み済みの行にはアクセスできない)</title><link>https://nekotheshadow.github.io/qiita-backup/blog/3a70dc7b8236e93221e7/</link><pubDate>Sun, 30 Aug 2020 12:44:54 +0900</pubDate><guid>https://nekotheshadow.github.io/qiita-backup/blog/3a70dc7b8236e93221e7/</guid><description>概要 Apache POIでXSSFWorkbookを利用する場合、頭をもたげてくるのはメモリ問題。XSSFWorkbookは読み込んだデータや書き込んだ</description></item><item><title>CellTypeを問わず、Cellの値を透過的に取得したい(Apache POI)</title><link>https://nekotheshadow.github.io/qiita-backup/blog/2b41b05fb0440ca8410e/</link><pubDate>Sun, 09 Jul 2017 23:55:35 +0900</pubDate><guid>https://nekotheshadow.github.io/qiita-backup/blog/2b41b05fb0440ca8410e/</guid><description>Excel大好き日本企業にシステムを納めるJava大好きSIerとして働いている以上、避けては通れないのがApache POI。POIはExc</description></item><item><title>エクセルをダウンロードするサーブレットのサンプル。</title><link>https://nekotheshadow.github.io/qiita-backup/blog/7f3d32be19aae3517a1c/</link><pubDate>Sun, 25 Dec 2016 22:36:13 +0900</pubDate><guid>https://nekotheshadow.github.io/qiita-backup/blog/7f3d32be19aae3517a1c/</guid><description>エクセルがダウンロードできるサーブレットを作成する機会があり、なかなかにはまったので、そのサンプルを残しておきたいと思います。なおJavaか</description></item></channel></rss>