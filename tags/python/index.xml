<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Python on Qiita Backup</title><link>https://nekotheshadow.github.io/qiita-backup/tags/python/</link><description>Recent content in Python on Qiita Backup</description><generator>Hugo -- gohugo.io</generator><language>ja</language><lastBuildDate>Sun, 07 Feb 2021 13:34:16 +0900</lastBuildDate><atom:link href="https://nekotheshadow.github.io/qiita-backup/tags/python/index.xml" rel="self" type="application/rss+xml"/><item><title>open(0)とすると標準入力に対応するファイルオブジェクトが取得できる</title><link>https://nekotheshadow.github.io/qiita-backup/blog/521d1361820c42547741/</link><pubDate>Sun, 07 Feb 2021 13:34:16 +0900</pubDate><guid>https://nekotheshadow.github.io/qiita-backup/blog/521d1361820c42547741/</guid><description>Python3で標準入力から入力を読む方法はいくつかありますが、組み込み関数のopenを使って、open(0)とすると標準入力に対応するファ</description></item><item><title>Pleiadesの PyDevでpipがうまく動かない</title><link>https://nekotheshadow.github.io/qiita-backup/blog/0ce215380845e08db044/</link><pubDate>Sun, 01 Dec 2019 12:16:04 +0900</pubDate><guid>https://nekotheshadow.github.io/qiita-backup/blog/0ce215380845e08db044/</guid><description>Python3開発ではEclipse 2019-09 (Pleiades All in One Eclipse) に初期導入されているPyDevをよく利用しています。PyDevではpipによるライブラリの管</description></item><item><title>Python3で整数の最大値や小数の無限大を扱いたい</title><link>https://nekotheshadow.github.io/qiita-backup/blog/bc4a399b9e4a298d28c6/</link><pubDate>Sun, 04 Mar 2018 23:36:31 +0900</pubDate><guid>https://nekotheshadow.github.io/qiita-backup/blog/bc4a399b9e4a298d28c6/</guid><description>Python3で整数型の最大値はsys.maxsizeとして定義されています(URL: https://docs.python.jp/3/library/sys.html#sys.maxsize )。たとえばC言語風のforループがサポートされてい</description></item><item><title>実行しているファイルが格納されているディレクトリのパスを取得したい。</title><link>https://nekotheshadow.github.io/qiita-backup/blog/09ff3a423954a2adfe18/</link><pubDate>Tue, 25 Jul 2017 23:10:23 +0900</pubDate><guid>https://nekotheshadow.github.io/qiita-backup/blog/09ff3a423954a2adfe18/</guid><description>タイトル通り、実行したファイルが格納されているディレクトリのパスを取得したいという場合、Python3ではどのように書くべきでしょうか? まず</description></item><item><title>ループ中にdefaultdictの未定義領域にアクセスすると例外</title><link>https://nekotheshadow.github.io/qiita-backup/blog/2d9ab4d77d0d56e5a9a7/</link><pubDate>Tue, 13 Dec 2016 00:10:54 +0900</pubDate><guid>https://nekotheshadow.github.io/qiita-backup/blog/2d9ab4d77d0d56e5a9a7/</guid><description>突然ですが次のコードは例外をスローします。なぜでしょうか? import collections ht = collections.defaultdict(int) ht[0] = ht[1] = 1 x = 2 for ky in ht: if ht[ky + 1] == 0: do_something() #=&amp;gt; RuntimeError: dictionary changed size during iteration Python3ではル</description></item><item><title>「モンティ・ホール問題」の簡単なシミュレーションプログラムを書いてみる</title><link>https://nekotheshadow.github.io/qiita-backup/blog/0720fa0fe41260dbbf8c/</link><pubDate>Fri, 26 Aug 2016 00:19:19 +0900</pubDate><guid>https://nekotheshadow.github.io/qiita-backup/blog/0720fa0fe41260dbbf8c/</guid><description>モンティ・ホール問題は「主観的な答えと確率論にのっとった答えが一致しない」という不思議な問題です。今回はこの「モンティ・ホール問題」の簡単な</description></item><item><title>ストゥージソートをPython3で実装(バブルソート&amp;クイックソート)</title><link>https://nekotheshadow.github.io/qiita-backup/blog/c3d37e32c99a43c87b3d/</link><pubDate>Sun, 31 Jul 2016 21:58:56 +0900</pubDate><guid>https://nekotheshadow.github.io/qiita-backup/blog/c3d37e32c99a43c87b3d/</guid><description>ストゥージソート(stooge sort)というソートがあるそうです。このソートアルゴリズムはとても効率の悪いソートアルゴリズムらしく、バブル</description></item><item><title>Python3のスクリプトでjsonをPOSTする</title><link>https://nekotheshadow.github.io/qiita-backup/blog/324976c7b54623e82b26/</link><pubDate>Thu, 28 Jul 2016 21:03:11 +0900</pubDate><guid>https://nekotheshadow.github.io/qiita-backup/blog/324976c7b54623e82b26/</guid><description>ちょっとしたPython3スクリプトでjsonをPOSTしたいということがよくあると思います(適当)。 まずはサンプルコード。 import urllib.request, json if __name__ == &amp;#39;__main__&amp;#39;: url</description></item><item><title>Python3で素数の無限ジェネレータ</title><link>https://nekotheshadow.github.io/qiita-backup/blog/4de8cc0fb0967a1aae68/</link><pubDate>Wed, 27 Jul 2016 22:57:49 +0900</pubDate><guid>https://nekotheshadow.github.io/qiita-backup/blog/4de8cc0fb0967a1aae68/</guid><description>先日次のような記事を書きました: 「Pythonで素数列挙と素数判定」。これを公開したのち、ふと「素数の無限ジェネレータ」をPython3を作</description></item><item><title>Pythonで素数列挙と素数判定</title><link>https://nekotheshadow.github.io/qiita-backup/blog/4ebad619564a48f5a97f/</link><pubDate>Mon, 25 Jul 2016 22:49:41 +0900</pubDate><guid>https://nekotheshadow.github.io/qiita-backup/blog/4ebad619564a48f5a97f/</guid><description>たまに自分で使うので、Qiitaに投稿しておきます(´・ω・`) primes(x)はx未満の素数をリストに格納するメソッドです。アルゴリズム</description></item><item><title>__len__の戻り値に気を付ける</title><link>https://nekotheshadow.github.io/qiita-backup/blog/5c68112ce16e459ef72b/</link><pubDate>Sun, 24 Jul 2016 00:22:18 +0900</pubDate><guid>https://nekotheshadow.github.io/qiita-backup/blog/5c68112ce16e459ef72b/</guid><description>自作のクラスに__len__をオーバーライドし、呼び出したところ、次のようなエラーが発生。 OverflowError: cannot fit &amp;#39;int&amp;#39; into an index-sized integer 原因は__len__の仕様にありま</description></item><item><title>数独ソルバーをPython3で実装</title><link>https://nekotheshadow.github.io/qiita-backup/blog/a7b6f1e050627d862591/</link><pubDate>Sat, 23 Jul 2016 23:06:08 +0900</pubDate><guid>https://nekotheshadow.github.io/qiita-backup/blog/a7b6f1e050627d862591/</guid><description>先日ネットサーフィン中に次のような記事を見つけました: 「数学のエキスパートが3ヶ月かけて作成した「世界一難しい数独」」。事実かどうかはともか</description></item><item><title>Gauche(0.9.4)とPython(3.5.1)で「logと無限大の関係」を比較する</title><link>https://nekotheshadow.github.io/qiita-backup/blog/ded8dcf746738cb4e209/</link><pubDate>Tue, 03 May 2016 22:16:54 +0900</pubDate><guid>https://nekotheshadow.github.io/qiita-backup/blog/ded8dcf746738cb4e209/</guid><description>Gauche(0.9.4)でプログラミング中、無限大の対数をとるという処理を行ったところ、Assertion failedなるエラーが発生、G</description></item></channel></rss>