<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>SQL on Qiita Backup</title><link>https://nekotheshadow.github.io/qiita-backup/tags/sql/</link><description>Recent content in SQL on Qiita Backup</description><generator>Hugo -- gohugo.io</generator><language>ja</language><lastBuildDate>Sun, 26 Dec 2021 01:37:44 +0900</lastBuildDate><atom:link href="https://nekotheshadow.github.io/qiita-backup/tags/sql/index.xml" rel="self" type="application/rss+xml"/><item><title>「点字メーカープログラム」をSQLで回答したい</title><link>https://nekotheshadow.github.io/qiita-backup/blog/e9325e13d236a40b0121/</link><pubDate>Sun, 26 Dec 2021 01:37:44 +0900</pubDate><guid>https://nekotheshadow.github.io/qiita-backup/blog/e9325e13d236a40b0121/</guid><description>はじめに ある日、Qiitaをながめていたところ、こんな面白そうなアドベントカレンダーを発見。 https://qiita.com/advent-calendar/2021/ruby-challenge ぜひ参加してみたかったのですが、時すでに遅しで</description></item><item><title>相関サブクエリや共通表式を使って、他のテーブルをもとにUPDATEする</title><link>https://nekotheshadow.github.io/qiita-backup/blog/a3c3eff96bf4db3adba7/</link><pubDate>Sun, 11 Apr 2021 14:47:24 +0900</pubDate><guid>https://nekotheshadow.github.io/qiita-backup/blog/a3c3eff96bf4db3adba7/</guid><description>前提 商品在庫を管理するシステム構築にあたり、まず在庫数を商品ごとに格納しているinventoryテーブルがあるとします。 goods pieces 夏タイヤ 10 冬タイ</description></item><item><title>2つのテーブルのデータがすべて一致しているかを確認したい</title><link>https://nekotheshadow.github.io/qiita-backup/blog/c3a14cf1889f505d6a3d/</link><pubDate>Tue, 02 Mar 2021 13:38:20 +0900</pubDate><guid>https://nekotheshadow.github.io/qiita-backup/blog/c3a14cf1889f505d6a3d/</guid><description>テーブルXとテーブルYのデータがすべて一致しているかを確認したい場合、どのようにすればよいでしょうか? 集合Xと集合Yが等しいことを確認したい</description></item><item><title>INSERT SELECTでWITHを利用したい</title><link>https://nekotheshadow.github.io/qiita-backup/blog/4653401d8cbc44b55192/</link><pubDate>Tue, 02 Mar 2021 10:51:40 +0900</pubDate><guid>https://nekotheshadow.github.io/qiita-backup/blog/4653401d8cbc44b55192/</guid><description>TL;DR MySQL8で、INSERT SELECTでWITHを利用したい場合、以下のように書けばよいです。 INSERT INTO a ( WITH c AS ( SELECT * FROM b ) SELECT * FROM c ); WITH RECURSIVE (</description></item><item><title>条件に合うデータの数を数えたい</title><link>https://nekotheshadow.github.io/qiita-backup/blog/12e1ce61e9b11af87c11/</link><pubDate>Fri, 12 Feb 2021 23:12:02 +0900</pubDate><guid>https://nekotheshadow.github.io/qiita-backup/blog/12e1ce61e9b11af87c11/</guid><description>この記事では条件に合うデータの数を数える方法を紹介します。 例: とあるIT企業の従業員の名前(name)とその従業員が所属している部署(dep</description></item><item><title>ずんだの菱形アルファベット問題 Python3 &amp; SQL編</title><link>https://nekotheshadow.github.io/qiita-backup/blog/532f7a48cf384b3f23bf/</link><pubDate>Tue, 06 Nov 2018 23:40:38 +0900</pubDate><guid>https://nekotheshadow.github.io/qiita-backup/blog/532f7a48cf384b3f23bf/</guid><description>もとねた: ずんだの菱形アルファベット問題 Ruby編 Python3で、まずは「ふつう」に回答してみました。もとねたでは実行時引数を読み込んでい</description></item><item><title>ずんだの表見出し++問題 SQL 編</title><link>https://nekotheshadow.github.io/qiita-backup/blog/acc773ef71b3312075e7/</link><pubDate>Wed, 24 Oct 2018 01:15:19 +0900</pubDate><guid>https://nekotheshadow.github.io/qiita-backup/blog/acc773ef71b3312075e7/</guid><description>注意: 本記事のSQLはPostgreSQLの次のバージョンで動作確認を行っています: psql (PostgreSQL) 10.5 (Ubuntu 10.5-0ubuntu0.18.04) 元ネタ: ずんだの表見出し++問題 Ruby 編 計算資源が</description></item><item><title>[DB2] Loadコマンドに関する自分用メモ(基本文法・進捗状況・Pending)</title><link>https://nekotheshadow.github.io/qiita-backup/blog/6e6ac5b258793981fa38/</link><pubDate>Sun, 23 Apr 2017 17:20:30 +0900</pubDate><guid>https://nekotheshadow.github.io/qiita-backup/blog/6e6ac5b258793981fa38/</guid><description>仕事中に調べたメモを簡単にまとめなおしたものです。そのため時間をかけて調べてまとめあげたという質のものではありません。**要するに自分用のメ</description></item><item><title>ストアドファンクションを利用してcheck制約でサブクエリを発行する</title><link>https://nekotheshadow.github.io/qiita-backup/blog/35dcb9285d70f35f60e4/</link><pubDate>Tue, 31 Jan 2017 01:02:54 +0900</pubDate><guid>https://nekotheshadow.github.io/qiita-backup/blog/35dcb9285d70f35f60e4/</guid><description>データの挿入や更新を行う際蓄積されたデータとの比較をしたい、あるいはデータの整合性を確保するためにほかのデータとの関係性を見たいということが</description></item><item><title>SQLでフィボナッチ数列を書いた</title><link>https://nekotheshadow.github.io/qiita-backup/blog/5b905ba702d9830f72c0/</link><pubDate>Thu, 19 Jan 2017 00:40:36 +0900</pubDate><guid>https://nekotheshadow.github.io/qiita-backup/blog/5b905ba702d9830f72c0/</guid><description>以下のクエリはPostgreSQLで動作確認を行っています。 postgres=# select version(); version ------------------------------------------------------------- PostgreSQL 9.6.1, compiled by Visual C++ build 1800, 64-bit (1 行) 再帰呼び出しの課題としてよく利用されるのがフィ</description></item><item><title>木構造の親または子を再帰的に取得する</title><link>https://nekotheshadow.github.io/qiita-backup/blog/d401e0c23892b0d53c2a/</link><pubDate>Tue, 10 Jan 2017 23:37:05 +0900</pubDate><guid>https://nekotheshadow.github.io/qiita-backup/blog/d401e0c23892b0d53c2a/</guid><description>注意: 以下のクエリはPostgreSQLにより動作確認を行っています。 postgres=# select version(); version ------------------------------------------------------------- PostgreSQL 9.6.1, compiled by Visual C++ build 1800, 64-bit (1 行) 上のような木構造のデータを次のように</description></item><item><title>SQLで素数列挙を行う</title><link>https://nekotheshadow.github.io/qiita-backup/blog/18348d38eb3f350a9d2e/</link><pubDate>Sun, 08 Jan 2017 00:01:18 +0900</pubDate><guid>https://nekotheshadow.github.io/qiita-backup/blog/18348d38eb3f350a9d2e/</guid><description>注意: 以下のクエリはPostgresSQLで動作確認を行っています。 postgres=# select version(); version ------------------------------------------------------------- PostgreSQL 9.6.1, compiled by Visual C++ build 1800, 64-bit (1 行) いつものように仕事をさぼっていたときの</description></item><item><title>SQLでFizzBuzzを書いた</title><link>https://nekotheshadow.github.io/qiita-backup/blog/b1a946baadaeee92c7ca/</link><pubDate>Thu, 05 Jan 2017 23:47:34 +0900</pubDate><guid>https://nekotheshadow.github.io/qiita-backup/blog/b1a946baadaeee92c7ca/</guid><description>使い古されたねたではありますが、プログラミングクイズとしてもっとも有名な問題のひとつである「FizzBuzz」をSQLで解いてみました。動作</description></item><item><title>主キーの有無によりinsertとupdateを切り替えるにはmergeを活用する</title><link>https://nekotheshadow.github.io/qiita-backup/blog/4d37fc32870b9fd93f6c/</link><pubDate>Wed, 21 Dec 2016 23:59:01 +0900</pubDate><guid>https://nekotheshadow.github.io/qiita-backup/blog/4d37fc32870b9fd93f6c/</guid><description>データベースアクセス層(いわゆるDAO)からとあるテーブルの行の更新情報がDBに引き渡されるとします。そのテーブルは主キーによって行が一意に</description></item><item><title>SQLでは「'」をエスケープする際に「''」を使う</title><link>https://nekotheshadow.github.io/qiita-backup/blog/1573138b4dcfe0821cf4/</link><pubDate>Tue, 29 Nov 2016 01:01:33 +0900</pubDate><guid>https://nekotheshadow.github.io/qiita-backup/blog/1573138b4dcfe0821cf4/</guid><description>SQLでは文字列リテラルとしてシングルクォート(「&amp;rsquo;」)を利用します。そのため文字列中に何も考えずシングルクォートを混ぜていると</description></item><item><title>いくつかの条件ごとに更新する行や内容を切り替える</title><link>https://nekotheshadow.github.io/qiita-backup/blog/35f00931ec8336b7e26b/</link><pubDate>Sun, 23 Oct 2016 19:43:35 +0900</pubDate><guid>https://nekotheshadow.github.io/qiita-backup/blog/35f00931ec8336b7e26b/</guid><description>同一テーブル内の複数の行を更新する際、行ごとに更新する内容を切り替えたい場合はUPDATEとCASEの合わせ技を用います。 たとえばユーザの個</description></item><item><title>テーブルの途中のN行を取得するいくつかのSQL文</title><link>https://nekotheshadow.github.io/qiita-backup/blog/5de507c0f6c4b9f2f455/</link><pubDate>Sat, 22 Oct 2016 19:32:43 +0900</pubDate><guid>https://nekotheshadow.github.io/qiita-backup/blog/5de507c0f6c4b9f2f455/</guid><description>ページネーションの実装など、テーブルのN行目から(N + M)行目を取得したい場合、どのようなSQL文を発行すべきでしょうか。まず一番手っ取り早</description></item></channel></rss>