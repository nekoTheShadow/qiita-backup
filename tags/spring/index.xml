<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>spring on Qiita Backup</title><link>https://nekotheshadow.github.io/qiita-backup/tags/spring/</link><description>Recent content in spring on Qiita Backup</description><generator>Hugo -- gohugo.io</generator><language>ja</language><lastBuildDate>Thu, 13 Apr 2017 23:10:41 +0900</lastBuildDate><atom:link href="https://nekotheshadow.github.io/qiita-backup/tags/spring/index.xml" rel="self" type="application/rss+xml"/><item><title>staticフィールドを@Autowiredの対象にしたい</title><link>https://nekotheshadow.github.io/qiita-backup/blog/d61917e8bcf8088a895f/</link><pubDate>Thu, 13 Apr 2017 23:10:41 +0900</pubDate><guid>https://nekotheshadow.github.io/qiita-backup/blog/d61917e8bcf8088a895f/</guid><description>とりわけユーティリティクラスの設計に際して、staticフィールドを@Autowiredの対象にしたい場面があります。この場合は__対象のs</description></item><item><title>Servletの中で@Autowiredを利用したい</title><link>https://nekotheshadow.github.io/qiita-backup/blog/c82a90459e11a940cc5f/</link><pubDate>Tue, 20 Dec 2016 23:33:28 +0900</pubDate><guid>https://nekotheshadow.github.io/qiita-backup/blog/c82a90459e11a940cc5f/</guid><description>Webアプリケーション構築にあたっては原則として「単一言語/単一フレームワーク」であるべきだとは思いますが、現実としてそれが許されない場合も</description></item><item><title>MyBatis-Springでプログラム的にトランザクション管理をする</title><link>https://nekotheshadow.github.io/qiita-backup/blog/2770036dae7436ca18a4/</link><pubDate>Sat, 08 Oct 2016 23:30:18 +0900</pubDate><guid>https://nekotheshadow.github.io/qiita-backup/blog/2770036dae7436ca18a4/</guid><description>残業続きでとても眠いので、ごく簡単に済ませたいと思います。誤字脱字は許してね(´・ω・`) やりたいことはタイトルの通り。MyBatis-Sp</description></item><item><title>@RequestBodyと@Validの両方を利用時に"The request sent by the client was syntactically incorrect"が出る</title><link>https://nekotheshadow.github.io/qiita-backup/blog/c35dc31d9f4b3c453fb1/</link><pubDate>Sat, 10 Sep 2016 23:39:03 +0900</pubDate><guid>https://nekotheshadow.github.io/qiita-backup/blog/c35dc31d9f4b3c453fb1/</guid><description>残業続きで眠いです……。誤字脱字は勘弁してね(´・ω・`) クライアントからPOSTされたJSONを受け取って、JSONを返すようなコントロー</description></item></channel></rss>