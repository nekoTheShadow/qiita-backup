<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>C# on Qiita Backup</title><link>https://nekotheshadow.github.io/qiita-backup/tags/c#/</link><description>Recent content in C# on Qiita Backup</description><generator>Hugo -- gohugo.io</generator><language>ja</language><lastBuildDate>Mon, 24 Dec 2018 16:17:25 +0900</lastBuildDate><atom:link href="https://nekotheshadow.github.io/qiita-backup/tags/c#/index.xml" rel="self" type="application/rss+xml"/><item><title>ビット演算を利用してべき集合を作成する。</title><link>https://nekotheshadow.github.io/qiita-backup/blog/0d70793b3b9e76e918a0/</link><pubDate>Mon, 24 Dec 2018 16:17:25 +0900</pubDate><guid>https://nekotheshadow.github.io/qiita-backup/blog/0d70793b3b9e76e918a0/</guid><description>参考: 「C#でサイズnの順列をすべて生成したい。」 表題のとおり「ビット演算でべき集合を作成する」ことがあったので、その際のメモになります。な</description></item><item><title>シクシク素数列 Advent Calendar 2018 C#編</title><link>https://nekotheshadow.github.io/qiita-backup/blog/ca927584a6059d681cd3/</link><pubDate>Wed, 12 Dec 2018 23:40:25 +0900</pubDate><guid>https://nekotheshadow.github.io/qiita-backup/blog/ca927584a6059d681cd3/</guid><description>「シクシク素数列 Advent Calendar 2018」の16日目の記事になります。問題詳細は当該アドベントカレンダーのページを参照していただくとして、ごく簡単にまと</description></item><item><title>C#でサイズnの順列をすべて生成したい。</title><link>https://nekotheshadow.github.io/qiita-backup/blog/e6a931b8a9193b47fcd3/</link><pubDate>Tue, 20 Nov 2018 23:49:27 +0900</pubDate><guid>https://nekotheshadow.github.io/qiita-backup/blog/e6a931b8a9193b47fcd3/</guid><description>サイズ$n$の順列をすべて生成する処理をC#で実装する機会があったので、そのメモになります。RubyやPythonだと順列の列挙は標準ライブ</description></item><item><title>ずんだのMARQUEE問題 C#編</title><link>https://nekotheshadow.github.io/qiita-backup/blog/8d7c77587519d357e1dd/</link><pubDate>Sun, 04 Nov 2018 23:40:49 +0900</pubDate><guid>https://nekotheshadow.github.io/qiita-backup/blog/8d7c77587519d357e1dd/</guid><description>もとねた: ずんだのMARQUEE問題 この程度の問題だと、正規表現や文字列置換などを利用して、解くことを考えるのが一般的だと思います。&amp;ldq</description></item><item><title>Selectとforeachでインデックス付きのループを実現したい</title><link>https://nekotheshadow.github.io/qiita-backup/blog/5cebdeb99e0e029e0905/</link><pubDate>Sat, 10 Feb 2018 15:50:33 +0900</pubDate><guid>https://nekotheshadow.github.io/qiita-backup/blog/5cebdeb99e0e029e0905/</guid><description>配列やリストの列挙処理において、列挙される値だけではなく、同時にインデックス/添え字を利用したいということが多々あります。いいかえれば「イン</description></item><item><title>CodeIQ「進捗ヴェリーグッドマーク」問題に参加しました</title><link>https://nekotheshadow.github.io/qiita-backup/blog/821ea42582de973aad65/</link><pubDate>Thu, 18 Jan 2018 21:40:53 +0900</pubDate><guid>https://nekotheshadow.github.io/qiita-backup/blog/821ea42582de973aad65/</guid><description>CodeIQ「進捗ヴェリーグッドマーク」問題の公開が終了したということで、自分の解答を公開したいと思います。なおCodeIQはそのサービスの</description></item><item><title>別々のSystem.Randomインスタンスが同じ乱数列を生成してしまう</title><link>https://nekotheshadow.github.io/qiita-backup/blog/72f0285324100a596979/</link><pubDate>Wed, 17 Jan 2018 23:28:25 +0900</pubDate><guid>https://nekotheshadow.github.io/qiita-backup/blog/72f0285324100a596979/</guid><description>__注意: C#初心者なので、とんちんかんなことをいっているかもしれません。__呼び出すたびに5桁のランダムな整数からなるパスワードを生成する</description></item><item><title>CodeIQ「進捗いいわけマーク」問題に参加しました。</title><link>https://nekotheshadow.github.io/qiita-backup/blog/1267810314d4eb5b8f68/</link><pubDate>Thu, 11 Jan 2018 23:39:20 +0900</pubDate><guid>https://nekotheshadow.github.io/qiita-backup/blog/1267810314d4eb5b8f68/</guid><description>「進捗いいわけマーク」問題の公開期限が終了したということで、自分の提出コードを公開したいと思います。利用言語はC#。ここ2-3か月C#の勉強</description></item><item><title>LINQでデカルト積を実現したい(Pythonのitertools#productのような機能を実現したい)</title><link>https://nekotheshadow.github.io/qiita-backup/blog/a6eb074c19aff769e1f9/</link><pubDate>Mon, 06 Nov 2017 23:07:35 +0900</pubDate><guid>https://nekotheshadow.github.io/qiita-backup/blog/a6eb074c19aff769e1f9/</guid><description>Pythonにはitertools#productというデカルト積を簡単に実現できるメソッドが用意されており、個人的には2重ループのネストを</description></item><item><title>リストや配列を生成する際、すべての要素を特定の値で初期化したい</title><link>https://nekotheshadow.github.io/qiita-backup/blog/ea0fbad2617b7e263a44/</link><pubDate>Sat, 28 Oct 2017 22:09:57 +0900</pubDate><guid>https://nekotheshadow.github.io/qiita-backup/blog/ea0fbad2617b7e263a44/</guid><description>最近はC#に凝っています。LINQとvarが最高すぎて、Javaにはもどれない(´・ω・｀) __リストや配列を生成する際、すべての要素を特定</description></item></channel></rss>