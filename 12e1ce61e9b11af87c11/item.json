{"rendered_body":"<p>この記事では条件に合うデータの数を数える方法を紹介します。</p>\n\n<p>例: とあるIT企業の従業員の名前(name)とその従業員が所属している部署(department)を格納しているemployeeテーブルがあります。</p>\n\n<table>\n<thead>\n<tr>\n<th>name</th>\n<th>department</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>佐藤 一郎</td>\n<td>営業部</td>\n</tr>\n<tr>\n<td>鈴木 二郎</td>\n<td>法務部</td>\n</tr>\n<tr>\n<td>高橋 三郎</td>\n<td>開発部</td>\n</tr>\n<tr>\n<td>田中 四郎</td>\n<td>人事部</td>\n</tr>\n<tr>\n<td>伊藤 五郎</td>\n<td>開発部</td>\n</tr>\n<tr>\n<td>渡辺 六郎</td>\n<td>開発部</td>\n</tr>\n<tr>\n<td>山本 七郎</td>\n<td>総務部</td>\n</tr>\n<tr>\n<td>中村 八郎</td>\n<td>監査部</td>\n</tr>\n<tr>\n<td>小林 九郎</td>\n<td>営業部</td>\n</tr>\n</tbody>\n</table>\n\n<p>ここで、開発部に所属している人数、営業部に所属している人数、それ以外に所属している人数を以下のような形式で求めるにはどうすればよいでしょうか?</p>\n\n<table>\n<thead>\n<tr>\n<th>開発部</th>\n<th>営業部</th>\n<th>その他</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>3</td>\n<td>2</td>\n<td>4</td>\n</tr>\n</tbody>\n</table>\n\n<p>まず第1にCOUNTを利用する方法があります。</p>\n\n<div class=\"code-frame\" data-lang=\"sql\"><div class=\"highlight\"><pre class=\"with-code\"><code><span class=\"k\">SELECT</span>\n  <span class=\"k\">COUNT</span><span class=\"p\">(</span><span class=\"n\">department</span><span class=\"o\">=</span><span class=\"s1\">'開発部'</span> <span class=\"k\">OR</span> <span class=\"k\">NULL</span><span class=\"p\">)</span> <span class=\"k\">AS</span> <span class=\"nv\">\"開発部\"</span><span class=\"p\">,</span>\n  <span class=\"k\">COUNT</span><span class=\"p\">(</span><span class=\"n\">department</span><span class=\"o\">=</span><span class=\"s1\">'営業部'</span> <span class=\"k\">OR</span> <span class=\"k\">NULL</span><span class=\"p\">)</span> <span class=\"k\">AS</span> <span class=\"nv\">\"営業部\"</span><span class=\"p\">,</span>\n  <span class=\"k\">COUNT</span><span class=\"p\">(</span><span class=\"k\">NOT</span> <span class=\"n\">department</span> <span class=\"k\">IN</span> <span class=\"p\">(</span><span class=\"s1\">'開発部'</span><span class=\"p\">,</span> <span class=\"s1\">'営業部'</span><span class=\"p\">)</span> <span class=\"k\">OR</span> <span class=\"k\">NULL</span><span class=\"p\">)</span> <span class=\"k\">AS</span> <span class=\"nv\">\"その他\"</span>\n<span class=\"k\">FROM</span> <span class=\"n\">employee</span><span class=\"p\">;</span>\n</code></pre></div></div>\n\n<p>COUNTはNULL以外のデータの数を数える関数です。&lt;左辺&gt; OR NULLは、&lt;左辺&gt;がTRUEの場合、評価値がTRUEになるので、COUNTの対象となります。一方、&lt;左辺&gt;がFALSEの場合、評価値はNULLになり、COUNTの対象にはなりません。つまりCOUNT(&lt;左辺&gt; OR NULL)というのは、&lt;左辺&gt;がTRUEの数を数えるイディオムになります。</p>\n\n<p>次にSUMを使う方法も紹介します。</p>\n\n<div class=\"code-frame\" data-lang=\"sql\"><div class=\"highlight\"><pre class=\"with-code\"><code><span class=\"k\">SELECT</span>\n  <span class=\"k\">SUM</span><span class=\"p\">(</span><span class=\"k\">CASE</span> <span class=\"k\">WHEN</span> <span class=\"n\">department</span><span class=\"o\">=</span><span class=\"s1\">'開発部'</span> <span class=\"k\">THEN</span> <span class=\"mi\">1</span> <span class=\"k\">ELSE</span> <span class=\"mi\">0</span> <span class=\"k\">END</span><span class=\"p\">)</span> <span class=\"k\">AS</span> <span class=\"nv\">\"開発部\"</span><span class=\"p\">,</span>\n  <span class=\"k\">SUM</span><span class=\"p\">(</span><span class=\"k\">CASE</span> <span class=\"k\">WHEN</span> <span class=\"n\">department</span><span class=\"o\">=</span><span class=\"s1\">'営業部'</span> <span class=\"k\">THEN</span> <span class=\"mi\">1</span> <span class=\"k\">ELSE</span> <span class=\"mi\">0</span> <span class=\"k\">END</span><span class=\"p\">)</span> <span class=\"k\">AS</span> <span class=\"nv\">\"開発部\"</span><span class=\"p\">,</span>\n  <span class=\"k\">SUM</span><span class=\"p\">(</span><span class=\"k\">CASE</span> <span class=\"k\">WHEN</span> <span class=\"n\">department</span> <span class=\"k\">IN</span> <span class=\"p\">(</span><span class=\"s1\">'開発部'</span><span class=\"p\">,</span> <span class=\"s1\">'営業部'</span><span class=\"p\">)</span> <span class=\"k\">THEN</span> <span class=\"mi\">0</span> <span class=\"k\">ELSE</span> <span class=\"mi\">1</span> <span class=\"k\">END</span><span class=\"p\">)</span> <span class=\"k\">AS</span> <span class=\"nv\">\"その他\"</span>\n<span class=\"k\">FROM</span> <span class=\"n\">employee</span><span class=\"p\">;</span>\n</code></pre></div></div>\n\n<p>条件にマッチするものを1、マッチしないものを0と評価して、その合計値を求めると、条件にマッチするものが数えられるという仕組みです。</p>\n\n<p><strong>環境情報</strong></p>\n\n<p>この記事は以下の環境で動作確認を行いましたが、多くのRDBMSでも応用しやすい内容だと思います。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre class=\"with-code\"><code>PostgreSQL 12.5 on x86_64-pc-linux-musl, compiled by gcc (Alpine 9.3.0) 9.3.0, 64-bit\n</code></pre></div></div>\n\n<p>なお動作確認を行うために作成したDDLは次の通りです。</p>\n\n<div class=\"code-frame\" data-lang=\"sql\"><div class=\"highlight\"><pre class=\"with-code\"><code><span class=\"k\">CREATE</span> <span class=\"k\">TABLE</span> <span class=\"n\">employee</span> <span class=\"p\">(</span>\n  <span class=\"n\">name</span> <span class=\"nb\">TEXT</span><span class=\"p\">,</span>\n  <span class=\"n\">department</span> <span class=\"nb\">TEXT</span><span class=\"p\">,</span>\n  <span class=\"k\">PRIMARY</span> <span class=\"k\">KEY</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">)</span>\n<span class=\"p\">);</span>\n<span class=\"k\">INSERT</span> <span class=\"k\">INTO</span> <span class=\"n\">employee</span> <span class=\"k\">values</span><span class=\"p\">(</span><span class=\"s1\">'佐藤 一郎'</span><span class=\"p\">,</span> <span class=\"s1\">'営業部'</span><span class=\"p\">);</span>\n<span class=\"k\">INSERT</span> <span class=\"k\">INTO</span> <span class=\"n\">employee</span> <span class=\"k\">values</span><span class=\"p\">(</span><span class=\"s1\">'鈴木 二郎'</span><span class=\"p\">,</span> <span class=\"s1\">'法務部'</span><span class=\"p\">);</span>\n<span class=\"k\">INSERT</span> <span class=\"k\">INTO</span> <span class=\"n\">employee</span> <span class=\"k\">values</span><span class=\"p\">(</span><span class=\"s1\">'高橋 三郎'</span><span class=\"p\">,</span> <span class=\"s1\">'開発部'</span><span class=\"p\">);</span>\n<span class=\"k\">INSERT</span> <span class=\"k\">INTO</span> <span class=\"n\">employee</span> <span class=\"k\">values</span><span class=\"p\">(</span><span class=\"s1\">'田中 四郎'</span><span class=\"p\">,</span> <span class=\"s1\">'人事部'</span><span class=\"p\">);</span>\n<span class=\"k\">INSERT</span> <span class=\"k\">INTO</span> <span class=\"n\">employee</span> <span class=\"k\">values</span><span class=\"p\">(</span><span class=\"s1\">'伊藤 五郎'</span><span class=\"p\">,</span> <span class=\"s1\">'開発部'</span><span class=\"p\">);</span>\n<span class=\"k\">INSERT</span> <span class=\"k\">INTO</span> <span class=\"n\">employee</span> <span class=\"k\">values</span><span class=\"p\">(</span><span class=\"s1\">'渡辺 六郎'</span><span class=\"p\">,</span> <span class=\"s1\">'開発部'</span><span class=\"p\">);</span>\n<span class=\"k\">INSERT</span> <span class=\"k\">INTO</span> <span class=\"n\">employee</span> <span class=\"k\">values</span><span class=\"p\">(</span><span class=\"s1\">'山本 七郎'</span><span class=\"p\">,</span> <span class=\"s1\">'総務部'</span><span class=\"p\">);</span>\n<span class=\"k\">INSERT</span> <span class=\"k\">INTO</span> <span class=\"n\">employee</span> <span class=\"k\">values</span><span class=\"p\">(</span><span class=\"s1\">'中村 八郎'</span><span class=\"p\">,</span> <span class=\"s1\">'監査部'</span><span class=\"p\">);</span>\n<span class=\"k\">INSERT</span> <span class=\"k\">INTO</span> <span class=\"n\">employee</span> <span class=\"k\">values</span><span class=\"p\">(</span><span class=\"s1\">'小林 九郎'</span><span class=\"p\">,</span> <span class=\"s1\">'営業部'</span><span class=\"p\">);</span>\n</code></pre></div></div>\n","body":"この記事では条件に合うデータの数を数える方法を紹介します。\n\n例: とあるIT企業の従業員の名前(name)とその従業員が所属している部署(department)を格納しているemployeeテーブルがあります。\n\n|name     |department|\n|---------|----------|\n|佐藤 一郎|営業部    |\n|鈴木 二郎|法務部    |\n|高橋 三郎|開発部    |\n|田中 四郎|人事部    |\n|伊藤 五郎|開発部    |\n|渡辺 六郎|開発部    |\n|山本 七郎|総務部    |\n|中村 八郎|監査部    |\n|小林 九郎|営業部    |\n\nここで、開発部に所属している人数、営業部に所属している人数、それ以外に所属している人数を以下のような形式で求めるにはどうすればよいでしょうか?\n\n|開発部|営業部|その他|\n|------|------|------|\n|3     |2     |4     |\n\nまず第1にCOUNTを利用する方法があります。\n\n```sql\nSELECT\n  COUNT(department='開発部' OR NULL) AS \"開発部\",\n  COUNT(department='営業部' OR NULL) AS \"営業部\",\n  COUNT(NOT department IN ('開発部', '営業部') OR NULL) AS \"その他\"\nFROM employee;\n```\n\nCOUNTはNULL以外のデータの数を数える関数です。<左辺> OR NULLは、<左辺>がTRUEの場合、評価値がTRUEになるので、COUNTの対象となります。一方、<左辺>がFALSEの場合、評価値はNULLになり、COUNTの対象にはなりません。つまりCOUNT(<左辺> OR NULL)というのは、<左辺>がTRUEの数を数えるイディオムになります。\n\n次にSUMを使う方法も紹介します。\n\n```sql\nSELECT\n  SUM(CASE WHEN department='開発部' THEN 1 ELSE 0 END) AS \"開発部\",\n  SUM(CASE WHEN department='営業部' THEN 1 ELSE 0 END) AS \"開発部\",\n  SUM(CASE WHEN department IN ('開発部', '営業部') THEN 0 ELSE 1 END) AS \"その他\"\nFROM employee;\n```\n\n条件にマッチするものを1、マッチしないものを0と評価して、その合計値を求めると、条件にマッチするものが数えられるという仕組みです。\n\n__環境情報__\n\nこの記事は以下の環境で動作確認を行いましたが、多くのRDBMSでも応用しやすい内容だと思います。\n\n```\nPostgreSQL 12.5 on x86_64-pc-linux-musl, compiled by gcc (Alpine 9.3.0) 9.3.0, 64-bit\n```\n\nなお動作確認を行うために作成したDDLは次の通りです。\n\n```sql\nCREATE TABLE employee (\n  name TEXT,\n  department TEXT,\n  PRIMARY KEY(name)\n);\nINSERT INTO employee values('佐藤 一郎', '営業部');\nINSERT INTO employee values('鈴木 二郎', '法務部');\nINSERT INTO employee values('高橋 三郎', '開発部');\nINSERT INTO employee values('田中 四郎', '人事部');\nINSERT INTO employee values('伊藤 五郎', '開発部');\nINSERT INTO employee values('渡辺 六郎', '開発部');\nINSERT INTO employee values('山本 七郎', '総務部');\nINSERT INTO employee values('中村 八郎', '監査部');\nINSERT INTO employee values('小林 九郎', '営業部');\n```\n","coediting":false,"comments_count":0,"created_at":"2021-02-12T23:12:02+09:00","group":null,"id":"12e1ce61e9b11af87c11","likes_count":0,"private":false,"reactions_count":0,"tags":[{"name":"SQL","versions":[]}],"title":"条件に合うデータの数を数えたい","updated_at":"2021-02-12T23:12:31+09:00","url":"https://qiita.com/neko_the_shadow/items/12e1ce61e9b11af87c11","user":{"description":"IT業界の片隅でひっそり生きるシステムエンジニアです(´・ω・｀)","facebook_id":"","followees_count":0,"followers_count":35,"github_login_name":null,"id":"neko_the_shadow","items_count":183,"linkedin_id":"","location":"神奈川県川崎市","name":"","organization":"","permanent_id":105859,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/105859/profile-images/1473709753","team_only":false,"twitter_screen_name":"neko_the_shadow","website_url":"https://nekotheshadow.github.io/"},"page_views_count":null,"team_membership":null}