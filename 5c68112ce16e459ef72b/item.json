{"rendered_body":"<p>自作のクラスに<code>__len__</code>をオーバーライドし、呼び出したところ、次のようなエラーが発生。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>OverflowError: cannot fit 'int' into an index-sized integer\n</pre></div></div>\n\n<p>原因は<code>__len__</code>の仕様にありました。どうやら<code>__len__</code>の戻り値は以下の条件を満たす必要があるようです。</p>\n\n<ul>\n<li>整数型(int)</li>\n<li>0以上</li>\n<li>符号付32bit整数の上限(<code>0x7FFFFFFF</code>)以下\n\n<ul>\n<li>「符号付32bit整数」の部分は環境によって違う可能性あり</li>\n</ul>\n</li>\n</ul>\n\n<div class=\"code-frame\" data-lang=\"py3\"><div class=\"highlight\"><pre>\n<span class=\"k\">class</span> <span class=\"nc\">ReturnStr</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">__len__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span> <span class=\"k\">return</span> <span class=\"s\">\"abc\"</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">ReturnFloat</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">__len__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span> <span class=\"k\">return</span> <span class=\"mf\">1.0</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">ReturnNegativeNumber</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">__len__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span> <span class=\"k\">return</span> <span class=\"o\">-</span><span class=\"mi\">1</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">ReturnBigNumber</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">__len__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span> <span class=\"k\">return</span> <span class=\"mh\">0x7FFFFFFF</span> <span class=\"o\">+</span> <span class=\"mi\">1</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">ReturnSmallNumber</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">__len__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span> <span class=\"k\">return</span> <span class=\"mh\">0x7FFFFFFF</span>\n\n<span class=\"k\">if</span> <span class=\"n\">__name__</span> <span class=\"o\">==</span> <span class=\"s\">\"__main__\"</span><span class=\"p\">:</span>\n    <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">ReturnStr</span><span class=\"p\">())</span>            <span class=\"c1\">#=&gt; TypeError: 'str' object cannot be interpreted as an integer\n</span>    <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">ReturnFloat</span><span class=\"p\">())</span>          <span class=\"c1\">#=&gt; TypeError: 'float' object cannot be interpreted as an integer\n</span>    <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">ReturnNegativeNumber</span><span class=\"p\">())</span> <span class=\"c1\">#=&gt; ValueError: __len__() should return &gt;= 0\n</span>    <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">ReturnBigNumber</span><span class=\"p\">())</span>      <span class=\"c1\">#=&gt; OverflowError: cannot fit 'int' into an index-sized integer\n</span>    <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">ReturnSmallNumber</span><span class=\"p\">())</span>    <span class=\"c1\">#=&gt; OK\n</span>\n</pre></div></div>\n\n<p>わたしの場合は<code>__len__</code>の戻り値が大きすぎたせいで、例外になっていたようですね(´・ω・`)</p>\n","body":"自作のクラスに`__len__`をオーバーライドし、呼び出したところ、次のようなエラーが発生。\n\n```\nOverflowError: cannot fit 'int' into an index-sized integer\n```\n\n原因は`__len__`の仕様にありました。どうやら`__len__`の戻り値は以下の条件を満たす必要があるようです。\n\n- 整数型(int)\n- 0以上\n- 符号付32bit整数の上限(`0x7FFFFFFF`)以下\n    - 「符号付32bit整数」の部分は環境によって違う可能性あり\n\n```py3\n\nclass ReturnStr(object):\n    def __len__(self): return \"abc\"\n\nclass ReturnFloat(object):\n    def __len__(self): return 1.0\n\nclass ReturnNegativeNumber(object):\n    def __len__(self): return -1\n\nclass ReturnBigNumber(object):\n    def __len__(self): return 0x7FFFFFFF + 1\n\nclass ReturnSmallNumber(object):\n    def __len__(self): return 0x7FFFFFFF\n\nif __name__ == \"__main__\":\n    len(ReturnStr())            #=> TypeError: 'str' object cannot be interpreted as an integer\n    len(ReturnFloat())          #=> TypeError: 'float' object cannot be interpreted as an integer\n    len(ReturnNegativeNumber()) #=> ValueError: __len__() should return >= 0\n    len(ReturnBigNumber())      #=> OverflowError: cannot fit 'int' into an index-sized integer\n    len(ReturnSmallNumber())    #=> OK\n\n```\n\nわたしの場合は`__len__`の戻り値が大きすぎたせいで、例外になっていたようですね(´・ω・`)\n","coediting":false,"comments_count":0,"created_at":"2016-07-24T00:22:18+09:00","group":null,"id":"5c68112ce16e459ef72b","likes_count":5,"private":false,"reactions_count":0,"tags":[{"name":"Python","versions":[]},{"name":"Python3","versions":[]}],"title":"__len__の戻り値に気を付ける","updated_at":"2016-07-24T00:22:18+09:00","url":"https://qiita.com/neko_the_shadow/items/5c68112ce16e459ef72b","user":{"description":"IT業界の片隅でひっそり生きるシステムエンジニアです(´・ω・｀)","facebook_id":"","followees_count":0,"followers_count":32,"github_login_name":null,"id":"neko_the_shadow","items_count":166,"linkedin_id":"","location":"神奈川県川崎市","name":"","organization":"","permanent_id":105859,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/105859/profile-images/1473709753","team_only":false,"twitter_screen_name":"neko_the_shadow","website_url":"https://nekotheshadow.github.io/"},"page_views_count":null}