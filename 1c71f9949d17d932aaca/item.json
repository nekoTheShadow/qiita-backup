{"rendered_body":"<p>Javaで経過日数を計算したい場合、もっともシンプルなのは<code>LocalDate</code>と<code>ChronoUnit</code>を利用するものです。</p>\n\n<div class=\"code-frame\" data-lang=\"java\"><div class=\"highlight\"><pre><code><span class=\"kd\">public</span> <span class=\"kd\">static</span> <span class=\"kt\">long</span> <span class=\"nf\">diff</span><span class=\"o\">(</span><span class=\"nc\">LocalDate</span> <span class=\"n\">localDate1</span><span class=\"o\">,</span> <span class=\"nc\">LocalDate</span> <span class=\"n\">localDate2</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n    <span class=\"k\">return</span> <span class=\"nc\">ChronoUnit</span><span class=\"o\">.</span><span class=\"na\">DAYS</span><span class=\"o\">.</span><span class=\"na\">between</span><span class=\"o\">(</span><span class=\"n\">localDate1</span><span class=\"o\">,</span> <span class=\"n\">localDate2</span><span class=\"o\">);</span>\n<span class=\"o\">}</span>\n</code></pre></div></div>\n\n<p>しかしライブラリや開発環境の都合上、<code>Date</code>や<code>Calendar</code>を利用せねばならないということもあります。この場合、<code>Date</code>や<code>Calendar</code>を<code>LocalDate</code>に変換してしまうのがもっともわかりやすいと思います。</p>\n\n<div class=\"code-frame\" data-lang=\"java\"><div class=\"highlight\"><pre><code><span class=\"kd\">public</span> <span class=\"kd\">static</span> <span class=\"kt\">long</span> <span class=\"nf\">diff</span><span class=\"o\">(</span><span class=\"nc\">Date</span> <span class=\"n\">date1</span><span class=\"o\">,</span> <span class=\"nc\">Date</span> <span class=\"n\">date2</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n    <span class=\"nc\">LocalDate</span> <span class=\"n\">localDate1</span> <span class=\"o\">=</span> <span class=\"n\">date1</span><span class=\"o\">.</span><span class=\"na\">toInstant</span><span class=\"o\">().</span><span class=\"na\">atZone</span><span class=\"o\">(</span><span class=\"nc\">ZoneId</span><span class=\"o\">.</span><span class=\"na\">systemDefault</span><span class=\"o\">()).</span><span class=\"na\">toLocalDate</span><span class=\"o\">();</span>\n    <span class=\"nc\">LocalDate</span> <span class=\"n\">localDate2</span> <span class=\"o\">=</span> <span class=\"n\">date2</span><span class=\"o\">.</span><span class=\"na\">toInstant</span><span class=\"o\">().</span><span class=\"na\">atZone</span><span class=\"o\">(</span><span class=\"nc\">ZoneId</span><span class=\"o\">.</span><span class=\"na\">systemDefault</span><span class=\"o\">()).</span><span class=\"na\">toLocalDate</span><span class=\"o\">();</span>\n    <span class=\"k\">return</span> <span class=\"nc\">ChronoUnit</span><span class=\"o\">.</span><span class=\"na\">DAYS</span><span class=\"o\">.</span><span class=\"na\">between</span><span class=\"o\">(</span><span class=\"n\">localDate1</span><span class=\"o\">,</span> <span class=\"n\">localDate2</span><span class=\"o\">);</span>\n<span class=\"o\">}</span>\n\n<span class=\"kd\">public</span> <span class=\"kd\">static</span> <span class=\"kt\">long</span> <span class=\"nf\">diff</span><span class=\"o\">(</span><span class=\"nc\">Calendar</span> <span class=\"n\">calendar1</span><span class=\"o\">,</span> <span class=\"nc\">Calendar</span> <span class=\"n\">calendar2</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n    <span class=\"nc\">LocalDate</span> <span class=\"n\">localDate1</span> <span class=\"o\">=</span> <span class=\"n\">calendar1</span><span class=\"o\">.</span><span class=\"na\">toInstant</span><span class=\"o\">().</span><span class=\"na\">atZone</span><span class=\"o\">(</span><span class=\"nc\">ZoneId</span><span class=\"o\">.</span><span class=\"na\">systemDefault</span><span class=\"o\">()).</span><span class=\"na\">toLocalDate</span><span class=\"o\">();</span>\n    <span class=\"nc\">LocalDate</span> <span class=\"n\">localDate2</span> <span class=\"o\">=</span> <span class=\"n\">calendar2</span><span class=\"o\">.</span><span class=\"na\">toInstant</span><span class=\"o\">().</span><span class=\"na\">atZone</span><span class=\"o\">(</span><span class=\"nc\">ZoneId</span><span class=\"o\">.</span><span class=\"na\">systemDefault</span><span class=\"o\">()).</span><span class=\"na\">toLocalDate</span><span class=\"o\">();</span>\n    <span class=\"k\">return</span> <span class=\"nc\">ChronoUnit</span><span class=\"o\">.</span><span class=\"na\">DAYS</span><span class=\"o\">.</span><span class=\"na\">between</span><span class=\"o\">(</span><span class=\"n\">localDate1</span><span class=\"o\">,</span> <span class=\"n\">localDate2</span><span class=\"o\">);</span>\n<span class=\"o\">}</span>\n</code></pre></div></div>\n\n<p>利用しているJavaのバージョンやコーディングルールなどにより、そもそも<code>LocalDate</code>の利用ができない場合は、おとなしく秒数から計算しましょう(´・ω・`)</p>\n\n<div class=\"code-frame\" data-lang=\"java\"><div class=\"highlight\"><pre><code><span class=\"kd\">public</span> <span class=\"kd\">static</span> <span class=\"kt\">long</span> <span class=\"nf\">diff</span><span class=\"o\">(</span><span class=\"nc\">Date</span> <span class=\"n\">date1</span><span class=\"o\">,</span> <span class=\"nc\">Date</span> <span class=\"n\">date2</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n    <span class=\"kt\">long</span> <span class=\"n\">time1</span> <span class=\"o\">=</span> <span class=\"n\">date1</span><span class=\"o\">.</span><span class=\"na\">getTime</span><span class=\"o\">();</span>\n    <span class=\"kt\">long</span> <span class=\"n\">time2</span> <span class=\"o\">=</span> <span class=\"n\">date2</span><span class=\"o\">.</span><span class=\"na\">getTime</span><span class=\"o\">();</span>\n    <span class=\"k\">return</span> <span class=\"nc\">Math</span><span class=\"o\">.</span><span class=\"na\">abs</span><span class=\"o\">(</span><span class=\"n\">time1</span><span class=\"o\">-</span><span class=\"n\">time2</span><span class=\"o\">)</span> <span class=\"o\">/</span> <span class=\"o\">(</span><span class=\"mi\">1000</span><span class=\"o\">*</span><span class=\"mi\">60</span><span class=\"o\">*</span><span class=\"mi\">60</span><span class=\"o\">*</span><span class=\"mi\">24</span><span class=\"o\">);</span>\n<span class=\"o\">}</span>\n\n<span class=\"kd\">public</span> <span class=\"kd\">static</span> <span class=\"kt\">long</span> <span class=\"nf\">diff</span><span class=\"o\">(</span><span class=\"nc\">Calendar</span> <span class=\"n\">calendar1</span><span class=\"o\">,</span> <span class=\"nc\">Calendar</span> <span class=\"n\">calendar2</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n    <span class=\"kt\">long</span> <span class=\"n\">time1</span> <span class=\"o\">=</span> <span class=\"n\">calendar1</span><span class=\"o\">.</span><span class=\"na\">getTimeInMillis</span><span class=\"o\">();</span>\n    <span class=\"kt\">long</span> <span class=\"n\">time2</span> <span class=\"o\">=</span> <span class=\"n\">calendar2</span><span class=\"o\">.</span><span class=\"na\">getTimeInMillis</span><span class=\"o\">();</span>\n    <span class=\"k\">return</span> <span class=\"nc\">Math</span><span class=\"o\">.</span><span class=\"na\">abs</span><span class=\"o\">(</span><span class=\"n\">time1</span><span class=\"o\">-</span><span class=\"n\">time2</span><span class=\"o\">)</span> <span class=\"o\">/</span> <span class=\"o\">(</span><span class=\"mi\">1000</span><span class=\"o\">*</span><span class=\"mi\">60</span><span class=\"o\">*</span><span class=\"mi\">60</span><span class=\"o\">*</span><span class=\"mi\">24</span><span class=\"o\">);</span>\n<span class=\"o\">}</span>\n</code></pre></div></div>\n\n<p><strong>環境情報</strong></p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>D:\\&gt;javac --version\njavac 11.0.10\n\nD:\\&gt;java --version\nopenjdk 11.0.10 2021-01-19\nOpenJDK Runtime Environment AdoptOpenJDK (build 11.0.10+9)\nOpenJDK 64-Bit Server VM AdoptOpenJDK (build 11.0.10+9, mixed mode)\n</code></pre></div></div>\n","body":"Javaで経過日数を計算したい場合、もっともシンプルなのは`LocalDate`と`ChronoUnit`を利用するものです。\n\n```java\npublic static long diff(LocalDate localDate1, LocalDate localDate2) {\n    return ChronoUnit.DAYS.between(localDate1, localDate2);\n}\n```\n\nしかしライブラリや開発環境の都合上、`Date`や`Calendar`を利用せねばならないということもあります。この場合、`Date`や`Calendar`を`LocalDate`に変換してしまうのがもっともわかりやすいと思います。\n\n```java\npublic static long diff(Date date1, Date date2) {\n    LocalDate localDate1 = date1.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();\n    LocalDate localDate2 = date2.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();\n    return ChronoUnit.DAYS.between(localDate1, localDate2);\n}\n    \npublic static long diff(Calendar calendar1, Calendar calendar2) {\n    LocalDate localDate1 = calendar1.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();\n    LocalDate localDate2 = calendar2.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();\n    return ChronoUnit.DAYS.between(localDate1, localDate2);\n}\n```\n\n利用しているJavaのバージョンやコーディングルールなどにより、そもそも`LocalDate`の利用ができない場合は、おとなしく秒数から計算しましょう(´・ω・`)\n\n```java\npublic static long diff(Date date1, Date date2) {\n    long time1 = date1.getTime();\n    long time2 = date2.getTime();\n    return Math.abs(time1-time2) / (1000*60*60*24);\n}\n\npublic static long diff(Calendar calendar1, Calendar calendar2) {\n    long time1 = calendar1.getTimeInMillis();\n    long time2 = calendar2.getTimeInMillis();\n    return Math.abs(time1-time2) / (1000*60*60*24);\n}\n```\n\n__環境情報__\n\n```\nD:\\>javac --version\njavac 11.0.10\n\nD:\\>java --version\nopenjdk 11.0.10 2021-01-19\nOpenJDK Runtime Environment AdoptOpenJDK (build 11.0.10+9)\nOpenJDK 64-Bit Server VM AdoptOpenJDK (build 11.0.10+9, mixed mode)\n```\n","coediting":false,"comments_count":0,"created_at":"2021-08-01T22:25:06+09:00","group":null,"id":"1c71f9949d17d932aaca","likes_count":0,"private":false,"reactions_count":0,"tags":[{"name":"Java","versions":[]}],"title":"Javaで経過日数を計算したい","updated_at":"2021-08-01T22:26:04+09:00","url":"https://qiita.com/neko_the_shadow/items/1c71f9949d17d932aaca","user":{"description":"IT業界の片隅でひっそり生きるシステムエンジニアです(´・ω・｀)","facebook_id":"","followees_count":0,"followers_count":36,"github_login_name":null,"id":"neko_the_shadow","items_count":194,"linkedin_id":"","location":"神奈川県川崎市","name":"","organization":"","permanent_id":105859,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/105859/profile-images/1473709753","team_only":false,"twitter_screen_name":"neko_the_shadow","website_url":"https://nekotheshadow.github.io/"},"page_views_count":null,"team_membership":null}