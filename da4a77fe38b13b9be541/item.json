{"rendered_body":"<p>𩸽という漢字はユニコードのサロゲートペアの代表例としてプログラマにはよく知られていますが、この漢字はShift_JISには収録されていません。</p>\n\n<div class=\"code-frame\" data-lang=\"java\"><div class=\"highlight\"><pre><code><span class=\"nc\">Files</span><span class=\"o\">.</span><span class=\"na\">write</span><span class=\"o\">(</span><span class=\"nc\">Paths</span><span class=\"o\">.</span><span class=\"na\">get</span><span class=\"o\">(</span><span class=\"s\">\"sjis.txt\"</span><span class=\"o\">),</span> <span class=\"nc\">List</span><span class=\"o\">.</span><span class=\"na\">of</span><span class=\"o\">(</span><span class=\"s\">\"𩸽\"</span><span class=\"o\">),</span> <span class=\"nc\">Charset</span><span class=\"o\">.</span><span class=\"na\">forName</span><span class=\"o\">(</span><span class=\"s\">\"SJIS\"</span><span class=\"o\">));</span>\n</code></pre></div></div>\n\n<p>上のコードは<code>Files.write</code>を使って、この𩸽という漢字を文字コード=Shift_JISのファイルに書き込もうとするものですが、これを実行すると<code>UnmappableCharacterException</code>が発生します。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>Exception in thread \"main\" java.nio.charset.UnmappableCharacterException: Input length = 2\n    at java.base/java.nio.charset.CoderResult.throwException(CoderResult.java:275)\n    at java.base/sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:306)\n    at java.base/sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:281)\n    at java.base/sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125)\n    at java.base/java.io.OutputStreamWriter.write(OutputStreamWriter.java:211)\n    at java.base/java.io.BufferedWriter.flushBuffer(BufferedWriter.java:120)\n    at java.base/java.io.BufferedWriter.close(BufferedWriter.java:268)\n    at java.base/java.nio.file.Files.write(Files.java:3493)\n    at Iconv.main(Iconv.java:9)\n</code></pre></div></div>\n\n<p>さて、Java11で追加された<code>Files.writeString</code>を使って同じことをしてみましょう。</p>\n\n<div class=\"code-frame\" data-lang=\"java\"><div class=\"highlight\"><pre><code><span class=\"nc\">Files</span><span class=\"o\">.</span><span class=\"na\">writeString</span><span class=\"o\">(</span><span class=\"nc\">Paths</span><span class=\"o\">.</span><span class=\"na\">get</span><span class=\"o\">(</span><span class=\"s\">\"sjis.txt\"</span><span class=\"o\">),</span> <span class=\"s\">\"𩸽\"</span><span class=\"o\">,</span> <span class=\"nc\">Charset</span><span class=\"o\">.</span><span class=\"na\">forName</span><span class=\"o\">(</span><span class=\"s\">\"SJIS\"</span><span class=\"o\">));</span>\n</code></pre></div></div>\n\n<p>これを実行すると、同じように<code>UnmappableCharacterException</code>が発生するかと思いきや、例外は発生せず、処理は正常終了します。<code>sjis.txt</code>にも正常に書き込みされています。</p>\n\n<p>もっとも𩸽という漢字が正しく書き込まれているわけではなく、文字コード=<code>3F</code>、すなわち<code>?</code>という文字に置換されてしまっているようです。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>$ xxd sjis.txt\n00000000: 3f                                       ?\n</code></pre></div></div>\n\n<p><strong>環境情報:</strong></p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>C:\\&gt;javac -version\njavac 11.0.3\nC:\\&gt;java -version\nopenjdk version \"11.0.3\" 2019-04-16\nOpenJDK Runtime Environment AdoptOpenJDK (build 11.0.3+7)\nOpenJDK 64-Bit Server VM AdoptOpenJDK (build 11.0.3+7, mixed mode)\n</code></pre></div></div>\n","body":"𩸽という漢字はユニコードのサロゲートペアの代表例としてプログラマにはよく知られていますが、この漢字はShift_JISには収録されていません。\n\n```java\nFiles.write(Paths.get(\"sjis.txt\"), List.of(\"𩸽\"), Charset.forName(\"SJIS\"));\n```\n\n上のコードは`Files.write`を使って、この𩸽という漢字を文字コード=Shift_JISのファイルに書き込もうとするものですが、これを実行すると`UnmappableCharacterException`が発生します。\n\n```\nException in thread \"main\" java.nio.charset.UnmappableCharacterException: Input length = 2\n\tat java.base/java.nio.charset.CoderResult.throwException(CoderResult.java:275)\n\tat java.base/sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:306)\n\tat java.base/sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:281)\n\tat java.base/sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125)\n\tat java.base/java.io.OutputStreamWriter.write(OutputStreamWriter.java:211)\n\tat java.base/java.io.BufferedWriter.flushBuffer(BufferedWriter.java:120)\n\tat java.base/java.io.BufferedWriter.close(BufferedWriter.java:268)\n\tat java.base/java.nio.file.Files.write(Files.java:3493)\n\tat Iconv.main(Iconv.java:9)\n```\n\nさて、Java11で追加された`Files.writeString`を使って同じことをしてみましょう。\n\n```java\nFiles.writeString(Paths.get(\"sjis.txt\"), \"𩸽\", Charset.forName(\"SJIS\"));\n```\n\nこれを実行すると、同じように`UnmappableCharacterException`が発生するかと思いきや、例外は発生せず、処理は正常終了します。`sjis.txt`にも正常に書き込みされています。\n\nもっとも𩸽という漢字が正しく書き込まれているわけではなく、文字コード=`3F`、すなわち`?`という文字に置換されてしまっているようです。\n\n```\n$ xxd sjis.txt\n00000000: 3f                                       ?\n```\n\n**環境情報:**\n\n```\nC:\\>javac -version\njavac 11.0.3\nC:\\>java -version\nopenjdk version \"11.0.3\" 2019-04-16\nOpenJDK Runtime Environment AdoptOpenJDK (build 11.0.3+7)\nOpenJDK 64-Bit Server VM AdoptOpenJDK (build 11.0.3+7, mixed mode)\n```\n","coediting":false,"comments_count":0,"created_at":"2020-10-03T18:08:25+09:00","group":null,"id":"da4a77fe38b13b9be541","likes_count":3,"private":false,"reactions_count":0,"stocks_count":0,"tags":[{"name":"Java","versions":[]}],"title":"対象の文字コードにない文字を書き込む際の挙動がFiles.writeとFiles.writeStringで異なる","updated_at":"2020-10-03T18:08:25+09:00","url":"https://qiita.com/neko_the_shadow/items/da4a77fe38b13b9be541","user":{"description":"IT業界の片隅でひっそり生きるシステムエンジニアです(´・ω・｀)","facebook_id":"","followees_count":0,"followers_count":35,"github_login_name":null,"id":"neko_the_shadow","items_count":207,"linkedin_id":"","location":"神奈川県川崎市","name":"","organization":"","permanent_id":105859,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/105859/profile-images/1473709753","team_only":false,"twitter_screen_name":"neko_the_shadow","website_url":"https://nekotheshadow.github.io/"},"page_views_count":4198,"team_membership":null}