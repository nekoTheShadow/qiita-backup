{"rendered_body":"\n<h1>\n<span id=\"事象\" class=\"fragment\"></span><a href=\"#%E4%BA%8B%E8%B1%A1\"><i class=\"fa fa-link\"></i></a>事象</h1>\n\n<p><code>index.html</code>、<code>main.js</code>、<code>word.js</code>の3つのファイルから構成されるフロントエンドアプリケーションがあるとします。</p>\n\n<div class=\"code-frame\" data-lang=\"html\">\n<div class=\"code-lang\"><span class=\"bold\">index.html</span></div>\n<div class=\"highlight\"><pre><span class=\"cp\">&lt;!DOCTYPE html&gt;</span>\n<span class=\"nt\">&lt;body&gt;</span>\n  <span class=\"nt\">&lt;div</span> <span class=\"na\">id=</span><span class=\"s\">\"title\"</span><span class=\"nt\">&gt;&lt;/div&gt;</span>\n  <span class=\"nt\">&lt;div</span> <span class=\"na\">id=</span><span class=\"s\">\"description\"</span><span class=\"nt\">&gt;&lt;/div&gt;</span>\n  <span class=\"nt\">&lt;script </span><span class=\"na\">src=</span><span class=\"s\">\"main.js\"</span><span class=\"nt\">&gt;&lt;/script&gt;</span>\n<span class=\"nt\">&lt;/body&gt;</span>\n</pre></div>\n</div>\n\n<div class=\"code-frame\" data-lang=\"js\">\n<div class=\"code-lang\"><span class=\"bold\">main.js</span></div>\n<div class=\"highlight\"><pre><span class=\"k\">import</span> <span class=\"nx\">Word</span> <span class=\"k\">from</span> <span class=\"dl\">'</span><span class=\"s1\">./word.js</span><span class=\"dl\">'</span>\n\n<span class=\"nb\">document</span><span class=\"p\">.</span><span class=\"nx\">getElementById</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">title</span><span class=\"dl\">\"</span><span class=\"p\">).</span><span class=\"nx\">innerHTML</span> <span class=\"o\">=</span> <span class=\"nx\">Word</span><span class=\"p\">.</span><span class=\"nx\">title</span>\n<span class=\"nb\">document</span><span class=\"p\">.</span><span class=\"nx\">getElementById</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">description</span><span class=\"dl\">\"</span><span class=\"p\">).</span><span class=\"nx\">innerHTML</span> <span class=\"o\">=</span> <span class=\"nx\">Word</span><span class=\"p\">.</span><span class=\"nx\">description</span>\n</pre></div>\n</div>\n\n<div class=\"code-frame\" data-lang=\"js\">\n<div class=\"code-lang\"><span class=\"bold\">word.js</span></div>\n<div class=\"highlight\"><pre><span class=\"k\">export</span> <span class=\"k\">default</span> <span class=\"p\">{</span>\n  <span class=\"na\">title</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">Hello World</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n  <span class=\"na\">description</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">Parcelのテストです</span><span class=\"dl\">\"</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n\n<p><code>parcel build index.html</code>によりこのアプリケーションをビルドします (parcel-bundler v1.12.4)</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>$ parcel build index.html\n⠹ Building index.html...\n✨  Built in 36.94s.\n\ndist/main.a0e33e9b.js        1.57 KB     1.08s\ndist/main.a0e33e9b.js.map      735 B      17ms\ndist/index.html                123 B    35.01s\nDone in 60.34s.\n</pre></div></div>\n\n<p>ビルド結果である<code>dist</code>ディレクトリ配下をGitHubの<code>parcel-sample</code>レポジトリの<code>master</code>ブランチにプッシュ。<code>parcel-sample</code>レポジトリをgithub pagesとして公開する設定をした後、所定のURL(<code>https://nekotheshadow.github.io/parcel-sample</code>)にアクセスしたところ、<code>index.html</code>は想定通り表示されるものの、jsファイルの読み込みがステータスコード404によって失敗する事象が発生しました。</p>\n\n<p><a href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F105859%2F9e961253-cbc6-913b-eca2-ea0369206e33.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=33dd41c3be33c591826601fbfda15b61\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F105859%2F9e961253-cbc6-913b-eca2-ea0369206e33.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=33dd41c3be33c591826601fbfda15b61\" alt=\"image.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/105859/9e961253-cbc6-913b-eca2-ea0369206e33.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F105859%2F9e961253-cbc6-913b-eca2-ea0369206e33.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=74aa353864dfaa93b107dadf2198dca1 1x\" loading=\"lazy\"></a></p>\n\n<h1>\n<span id=\"原因と対策\" class=\"fragment\"></span><a href=\"#%E5%8E%9F%E5%9B%A0%E3%81%A8%E5%AF%BE%E7%AD%96\"><i class=\"fa fa-link\"></i></a>原因と対策</h1>\n\n<p>公開URLを明示せずにビルドしたため、あらぬjsファイルを読み込もうとしたために起きた現象です。つまり<code>parcel build</code>の際に公開URLを指定する<code>--public-url</code>オプションを利用することにより問題は解決します (参考: <a href=\"https://parceljs.org/cli.html\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">https://parceljs.org/cli.html</a>)</p>\n\n<p>具体的には以下のように指定してビルドを実施します</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>$ parcel build index.html --public-url https://nekotheshadow.github.io/parcel-sample/\n✨  Built in 30.23s.\n\ndist/main.a0e33e9b.js        1.61 KB     1.19s\ndist/main.a0e33e9b.js.map      735 B       6ms\ndist/index.html                168 B    28.32s\nDone in 50.77s\n</pre></div></div>\n\n<p><code>dist</code>配下のビルド結果を改めて<code>parcel-sample</code>にプッシュし、<code>https://nekotheshadow.github.io/parcel-sample</code>にアクセスすると、想定通り動作することが確認できました。</p>\n\n<p><a href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F105859%2F6383bc8d-7d69-b927-8b90-73eeda6509b8.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=ca86ecd552d5d5203c37daf989b21b13\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F105859%2F6383bc8d-7d69-b927-8b90-73eeda6509b8.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=ca86ecd552d5d5203c37daf989b21b13\" alt=\"image.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/105859/6383bc8d-7d69-b927-8b90-73eeda6509b8.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F105859%2F6383bc8d-7d69-b927-8b90-73eeda6509b8.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=b2de2c17f9679d41ae9c3c3708c4ec75 1x\" loading=\"lazy\"></a></p>\n\n<p>Chromeの開発者ツールでも、jsファイルの読み込みが正しくできていることがわかります。</p>\n\n<p><a href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F105859%2Ffcdc92c3-02b9-9913-c8ab-25b9ab91cfa1.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=eccaba388a703b27b1b90d3ed9e07d75\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F105859%2Ffcdc92c3-02b9-9913-c8ab-25b9ab91cfa1.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=eccaba388a703b27b1b90d3ed9e07d75\" alt=\"image.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/105859/fcdc92c3-02b9-9913-c8ab-25b9ab91cfa1.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F105859%2Ffcdc92c3-02b9-9913-c8ab-25b9ab91cfa1.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=610dc7c92575ce241ae2d4526bbd9a27 1x\" loading=\"lazy\"></a></p>\n\n<h1>\n<span id=\"参考\" class=\"fragment\"></span><a href=\"#%E5%8F%82%E8%80%83\"><i class=\"fa fa-link\"></i></a>参考</h1>\n\n<ul>\n<li><a href=\"https://github.com/nekoTheShadow/parcel-sample\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">https://github.com/nekoTheShadow/parcel-sample</a></li>\n<li><a href=\"http://nekoTheShadow.github.io/parcel-sample\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">http://nekoTheShadow.github.io/parcel-sample</a></li>\n</ul>\n","body":"# 事象\n\n`index.html`、`main.js`、`word.js`の3つのファイルから構成されるフロントエンドアプリケーションがあるとします。\n\n```html:index.html\n<!DOCTYPE html>\n<body>\n  <div id=\"title\"></div>\n  <div id=\"description\"></div>\n  <script src=\"main.js\"></script>\n</body>\n```\n\n```js:main.js\nimport Word from './word.js'\n\ndocument.getElementById(\"title\").innerHTML = Word.title\ndocument.getElementById(\"description\").innerHTML = Word.description\n```\n\n```js:word.js\nexport default {\n  title: \"Hello World\",\n  description: \"Parcelのテストです\"\n}\n```\n\n`parcel build index.html`によりこのアプリケーションをビルドします (parcel-bundler v1.12.4)\n\n```\n$ parcel build index.html\n⠹ Building index.html...\n✨  Built in 36.94s.\n\ndist/main.a0e33e9b.js        1.57 KB     1.08s\ndist/main.a0e33e9b.js.map      735 B      17ms\ndist/index.html                123 B    35.01s\nDone in 60.34s.\n```\n\nビルド結果である`dist`ディレクトリ配下をGitHubの`parcel-sample`レポジトリの`master`ブランチにプッシュ。`parcel-sample`レポジトリをgithub pagesとして公開する設定をした後、所定のURL(`https://nekotheshadow.github.io/parcel-sample`)にアクセスしたところ、`index.html`は想定通り表示されるものの、jsファイルの読み込みがステータスコード404によって失敗する事象が発生しました。\n\n![image.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/105859/9e961253-cbc6-913b-eca2-ea0369206e33.png)\n\n\n# 原因と対策\n\n公開URLを明示せずにビルドしたため、あらぬjsファイルを読み込もうとしたために起きた現象です。つまり`parcel build`の際に公開URLを指定する`--public-url`オプションを利用することにより問題は解決します (参考: https://parceljs.org/cli.html)\n\n具体的には以下のように指定してビルドを実施します\n\n```\n$ parcel build index.html --public-url https://nekotheshadow.github.io/parcel-sample/\n✨  Built in 30.23s.\n\ndist/main.a0e33e9b.js        1.61 KB     1.19s\ndist/main.a0e33e9b.js.map      735 B       6ms\ndist/index.html                168 B    28.32s\nDone in 50.77s\n```\n\n`dist`配下のビルド結果を改めて`parcel-sample`にプッシュし、`https://nekotheshadow.github.io/parcel-sample`にアクセスすると、想定通り動作することが確認できました。\n\n![image.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/105859/6383bc8d-7d69-b927-8b90-73eeda6509b8.png)\n\nChromeの開発者ツールでも、jsファイルの読み込みが正しくできていることがわかります。\n\n![image.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/105859/fcdc92c3-02b9-9913-c8ab-25b9ab91cfa1.png)\n\n# 参考\n\n- https://github.com/nekoTheShadow/parcel-sample\n- http://nekoTheShadow.github.io/parcel-sample\n","coediting":false,"comments_count":0,"created_at":"2020-07-30T00:36:23+09:00","group":null,"id":"2f3a6d8ef547cdf45592","likes_count":0,"private":false,"reactions_count":0,"tags":[{"name":"github-pages","versions":[]},{"name":"parcel","versions":[]}],"title":"parcel buildのビルド結果をgithub pagesで公開すると、jsファイルの読み込みが404で失敗する。","updated_at":"2020-07-30T00:43:06+09:00","url":"https://qiita.com/neko_the_shadow/items/2f3a6d8ef547cdf45592","user":{"description":"IT業界の片隅でひっそり生きるシステムエンジニアです(´・ω・｀)","facebook_id":"","followees_count":0,"followers_count":32,"github_login_name":null,"id":"neko_the_shadow","items_count":162,"linkedin_id":"","location":"神奈川県川崎市","name":"","organization":"","permanent_id":105859,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/105859/profile-images/1473709753","team_only":false,"twitter_screen_name":"neko_the_shadow","website_url":"https://nekotheshadow.github.io/"},"page_views_count":null}