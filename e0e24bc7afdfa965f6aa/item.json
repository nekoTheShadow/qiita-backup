{"rendered_body":"<p><a href=\"https://codeiq.jp/q/3132\" rel=\"nofollow noopener\" target=\"_blank\">CodeIQ「スーパー素数」問題</a>の公開期間が終了したということで、自分の答案を公開したいと思います。</p>\n\n<p>利用した言語はBash――なのですが、実際はawkですね(´・ω・｀) プログラミング・パズルをBashで解こうとすると、どうしてもawkを多用しがちです。</p>\n\n<div class=\"code-frame\" data-lang=\"awk\"><div class=\"highlight\"><pre><code><span class=\"c1\">#!/bin/bash</span>\n\n<span class=\"nx\">awk</span> <span class=\"err\">'</span><span class=\"p\">{</span>\n    <span class=\"nx\">n</span> <span class=\"o\">=</span> <span class=\"mi\">200000</span>\n\n    <span class=\"nx\">eratosthenes</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nx\">eratosthenes</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n    <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"nx\">i</span> <span class=\"o\">=</span> <span class=\"mi\">2</span><span class=\"p\">;</span> <span class=\"nx\">i</span> <span class=\"o\">&lt;=</span> <span class=\"nb\">sqrt</span><span class=\"p\">(</span><span class=\"nx\">n</span><span class=\"p\">);</span> <span class=\"nx\">i</span><span class=\"o\">++</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">eratosthenes</span><span class=\"p\">[</span><span class=\"nx\">i</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"k\">continue</span><span class=\"p\">;</span>\n        <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"nx\">j</span> <span class=\"o\">=</span> <span class=\"nx\">i</span> <span class=\"o\">*</span> <span class=\"mi\">2</span><span class=\"p\">;</span> <span class=\"nx\">j</span> <span class=\"o\">&lt;=</span> <span class=\"nx\">n</span><span class=\"p\">;</span> <span class=\"nx\">j</span> <span class=\"o\">+=</span> <span class=\"nx\">i</span><span class=\"p\">)</span> <span class=\"nx\">eratosthenes</span><span class=\"p\">[</span><span class=\"nx\">j</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"nx\">i</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">;</span> <span class=\"nx\">i</span> <span class=\"o\">&lt;=</span> <span class=\"nx\">n</span><span class=\"p\">;</span> <span class=\"nx\">i</span><span class=\"o\">++</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">eratosthenes</span><span class=\"p\">[</span><span class=\"nx\">i</span><span class=\"p\">]</span> <span class=\"o\">!=</span> <span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"nx\">primes</span><span class=\"p\">[</span><span class=\"o\">++</span><span class=\"nx\">x</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nx\">i</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"k\">for</span><span class=\"p\">(</span><span class=\"nx\">i</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">;</span> <span class=\"nx\">i</span> <span class=\"o\">&lt;=</span> <span class=\"mi\">2017</span><span class=\"p\">;</span> <span class=\"nx\">i</span><span class=\"o\">++</span><span class=\"p\">)</span> <span class=\"nx\">super_primes</span><span class=\"p\">[</span><span class=\"nx\">i</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nx\">primes</span><span class=\"p\">[</span><span class=\"nx\">primes</span><span class=\"p\">[</span><span class=\"nx\">i</span><span class=\"p\">]];</span>\n\n    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"nx\">super_primes</span><span class=\"p\">[</span><span class=\"nv\">$0</span><span class=\"p\">])</span>\n<span class=\"p\">}</span><span class=\"err\">'</span>\n</code></pre></div></div>\n\n<p>問題の内容としては「素数列の素数番目だけを集めた<a href=\"https://ja.wikipedia.org/wiki/%E3%82%B9%E3%83%BC%E3%83%91%E3%83%BC%E7%B4%A0%E6%95%B0\" rel=\"nofollow noopener\" target=\"_blank\">『スーパー素数』</a>列のn番目を求めなさい」というもの。解答にあたっては素数列を求める必要があるのですが、問題の制約上200000程度まで計算せねばなりません。よって比較的効率のよいアルゴリズム、すなわち「エラトステネスのふるい」により素数列挙を行いました。実際にやってみたわけではないのですが、試し割りのような計算量の多いアルゴリズムだと、CodeIQの制限時間(1秒)には間に合わないと思います。</p>\n\n<p>要するに本問はエラトステネスのふるいがきちんと実装できるかということが問われていたのでした。</p>\n\n<p><strong>おまけ:</strong> 現役システムエンジニアらしく、VBAでも実装しておきました(´・ω・｀)</p>\n\n<div class=\"code-frame\" data-lang=\"vbnet\"><div class=\"highlight\"><pre><code>Sub SuperPrimes()\n    Const UpperBound As Long = 200000\n    Const SuperPrimesUpperBound As Long = 2017\n\n    Dim X As Long\n\n    ' エラトステネスのふるい: 素数判定を行う。\n    Dim IsPrime(UpperBound + 1) As Boolean\n    For X = 0 To UpperBound\n        IsPrime(X) = True\n    Next X\n    IsPrime(0) = IsPrime(1) = False\n\n    For X = 2 To Sqr(UpperBound)\n        If IsPrime(X) Then\n            Dim NonPrime As Long\n            For NonPrime = X * 2 To UpperBound Step X\n                IsPrime(NonPrime) = False\n            Next NonPrime\n        End If\n    Next X\n\n    ' 素数列を求める。\n    Dim Primes(UpperBound) As Long\n    Dim PrimesIdx As Long\n    PrimesIdx = 1\n    For X = 2 To UpperBound\n        If IsPrime(X) Then\n            Primes(PrimesIdx) = X\n            PrimesIdx = PrimesIdx + 1\n        End If\n    Next X\n\n    ' スーパー素数列を求める。\n    Dim SuperPrimes(SuperPrimesUpperBound) As Long\n    For X = 1 To SuperPrimesUpperBound\n        SuperPrimes(X) = Primes(Primes(X))\n    Next X\n\n    ' スーパー素数列をシートに書き出す。\n    For X = 1 To SuperPrimesUpperBound\n        Cells(X, 1).Value = SuperPrimes(X)\n    Next X\nEnd Sub\n</code></pre></div></div>\n\n<p>以上のマクロをエクセルに張り付けて実行すると、シートのA列にスーパー素数が書き出されます。業務で「素数」「エラトステネスのふるい」「スーパー素数」が必要になりそうな方は参考にしてください(｀・ω・´)ｼｬｷｰﾝ</p>\n","body":"\n[CodeIQ「スーパー素数」問題](https://codeiq.jp/q/3132)の公開期間が終了したということで、自分の答案を公開したいと思います。\n\n利用した言語はBash――なのですが、実際はawkですね(´・ω・｀) プログラミング・パズルをBashで解こうとすると、どうしてもawkを多用しがちです。\n\n```awk\n#!/bin/bash\n\nawk '{\n    n = 200000\n    \n    eratosthenes[0] = eratosthenes[1] = 1\n    for (i = 2; i <= sqrt(n); i++) {\n        if (eratosthenes[i] == 1) continue;\n        for (j = i * 2; j <= n; j += i) eratosthenes[j] = 1;\n    }\n\n    for (i = 1; i <= n; i++) {\n        if (eratosthenes[i] != 1) primes[++x] = i;\n    }\n    \n    for(i = 1; i <= 2017; i++) super_primes[i] = primes[primes[i]];\n    \n    print(super_primes[$0])\n}'\n```\n\n問題の内容としては「素数列の素数番目だけを集めた[『スーパー素数』](https://ja.wikipedia.org/wiki/%E3%82%B9%E3%83%BC%E3%83%91%E3%83%BC%E7%B4%A0%E6%95%B0)列のn番目を求めなさい」というもの。解答にあたっては素数列を求める必要があるのですが、問題の制約上200000程度まで計算せねばなりません。よって比較的効率のよいアルゴリズム、すなわち「エラトステネスのふるい」により素数列挙を行いました。実際にやってみたわけではないのですが、試し割りのような計算量の多いアルゴリズムだと、CodeIQの制限時間(1秒)には間に合わないと思います。\n\n要するに本問はエラトステネスのふるいがきちんと実装できるかということが問われていたのでした。\n\n__おまけ:__ 現役システムエンジニアらしく、VBAでも実装しておきました(´・ω・｀)\n\n```vbnet\nSub SuperPrimes()\n    Const UpperBound As Long = 200000\n    Const SuperPrimesUpperBound As Long = 2017\n    \n    Dim X As Long\n    \n    ' エラトステネスのふるい: 素数判定を行う。\n    Dim IsPrime(UpperBound + 1) As Boolean\n    For X = 0 To UpperBound\n        IsPrime(X) = True\n    Next X\n    IsPrime(0) = IsPrime(1) = False\n    \n    For X = 2 To Sqr(UpperBound)\n        If IsPrime(X) Then\n            Dim NonPrime As Long\n            For NonPrime = X * 2 To UpperBound Step X\n                IsPrime(NonPrime) = False\n            Next NonPrime\n        End If\n    Next X\n    \n    ' 素数列を求める。\n    Dim Primes(UpperBound) As Long\n    Dim PrimesIdx As Long\n    PrimesIdx = 1\n    For X = 2 To UpperBound\n        If IsPrime(X) Then\n            Primes(PrimesIdx) = X\n            PrimesIdx = PrimesIdx + 1\n        End If\n    Next X\n    \n    ' スーパー素数列を求める。\n    Dim SuperPrimes(SuperPrimesUpperBound) As Long\n    For X = 1 To SuperPrimesUpperBound\n        SuperPrimes(X) = Primes(Primes(X))\n    Next X\n    \n    ' スーパー素数列をシートに書き出す。\n    For X = 1 To SuperPrimesUpperBound\n        Cells(X, 1).Value = SuperPrimes(X)\n    Next X\nEnd Sub\n```\n\n以上のマクロをエクセルに張り付けて実行すると、シートのA列にスーパー素数が書き出されます。業務で「素数」「エラトステネスのふるい」「スーパー素数」が必要になりそうな方は参考にしてください(｀・ω・´)ｼｬｷｰﾝ\n","coediting":false,"comments_count":2,"created_at":"2017-02-10T01:07:02+09:00","group":null,"id":"e0e24bc7afdfa965f6aa","likes_count":3,"private":false,"reactions_count":0,"tags":[{"name":"Bash","versions":[]},{"name":"awk","versions":[]},{"name":"VBA","versions":[]},{"name":"codeiq","versions":[]}],"title":"CodeIQ「スーパー素数」問題に参加しました。","updated_at":"2017-02-10T01:07:02+09:00","url":"https://qiita.com/neko_the_shadow/items/e0e24bc7afdfa965f6aa","user":{"description":"IT業界の片隅でひっそり生きるシステムエンジニアです(´・ω・｀)","facebook_id":"","followees_count":0,"followers_count":36,"github_login_name":null,"id":"neko_the_shadow","items_count":194,"linkedin_id":"","location":"神奈川県川崎市","name":"","organization":"","permanent_id":105859,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/105859/profile-images/1473709753","team_only":false,"twitter_screen_name":"neko_the_shadow","website_url":"https://nekotheshadow.github.io/"},"page_views_count":null,"team_membership":null}