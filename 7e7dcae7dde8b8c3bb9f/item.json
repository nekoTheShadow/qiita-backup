{"rendered_body":"<p><code>grep</code>でバックスラッシュ(<code>\\</code>)を検索する機会があったのですが、意外にも「はまった」のでメモとして対応策を残しておきたいと思います。</p>\n\n<p>まず文字列の囲み文字/リテラルとしてダブルクオート(<code>\"</code>)を利用する場合は<code>\\\\\\\\</code>を利用します。わかりにくいですが、<strong>バックスラッシュを4つ重ねて初めてバックスラッシュひとつになります。</strong>つまり<code>\\a</code>という文字を検索したい場合は<code>\\\\\\\\a</code>とする必要があります。</p>\n\n<div class=\"code-frame\" data-lang=\"bash\"><div class=\"highlight\"><pre><code><span class=\"nb\">cat</span> <span class=\"k\">${</span><span class=\"nv\">some_file</span><span class=\"k\">}</span> | <span class=\"nb\">grep</span> <span class=\"s2\">\"</span><span class=\"se\">\\\\\\\\</span><span class=\"s2\">\"</span>    <span class=\"c\"># バックスラッシュを含む行を抽出する</span>\n<span class=\"nb\">cat</span> <span class=\"k\">${</span><span class=\"nv\">some_file</span><span class=\"k\">}</span> | <span class=\"nb\">grep</span> <span class=\"s2\">\"</span><span class=\"se\">\\\\\\\\</span><span class=\"s2\">a\"</span>  <span class=\"c\"># \\aを含む行を抽出する</span>\n</code></pre></div></div>\n\n<p>次にシングルクオート(<code>'</code>)を利用する場合は<code>\\\\</code>が正解です。ダブルクオートによるリテラル文字列とは違い、<strong>バックスラッシュはふたつしか重ねる必要がありません。</strong>つまり<code>\\a</code>であれば<code>\\\\a</code>と書けば<code>grep</code>で検索することができます。</p>\n\n<div class=\"code-frame\" data-lang=\"bash\"><div class=\"highlight\"><pre><code><span class=\"nb\">cat</span> <span class=\"k\">${</span><span class=\"nv\">some_file</span><span class=\"k\">}</span> | <span class=\"nb\">grep</span> <span class=\"s1\">'\\\\'</span>     <span class=\"c\"># バックスラッシュを含む行を抽出する</span>\n<span class=\"nb\">cat</span> <span class=\"k\">${</span><span class=\"nv\">some_file</span><span class=\"k\">}</span> | <span class=\"nb\">grep</span> <span class=\"s1\">'\\\\a'</span>  <span class=\"c\"># \\aを含む行を抽出する</span>\n</code></pre></div></div>\n","body":"\n`grep`でバックスラッシュ(`\\`)を検索する機会があったのですが、意外にも「はまった」のでメモとして対応策を残しておきたいと思います。\n\nまず文字列の囲み文字/リテラルとしてダブルクオート(`\"`)を利用する場合は`\\\\\\\\`を利用します。わかりにくいですが、__バックスラッシュを4つ重ねて初めてバックスラッシュひとつになります。__つまり`\\a`という文字を検索したい場合は`\\\\\\\\a`とする必要があります。\n\n```bash\ncat ${some_file} | grep \"\\\\\\\\\"    # バックスラッシュを含む行を抽出する\ncat ${some_file} | grep \"\\\\\\\\a\"  # \\aを含む行を抽出する\n```\n\n次にシングルクオート(`'`)を利用する場合は`\\\\`が正解です。ダブルクオートによるリテラル文字列とは違い、__バックスラッシュはふたつしか重ねる必要がありません。__つまり`\\a`であれば`\\\\a`と書けば`grep`で検索することができます。\n\n```bash\ncat ${some_file} | grep '\\\\'     # バックスラッシュを含む行を抽出する\ncat ${some_file} | grep '\\\\a'  # \\aを含む行を抽出する\n```\n","coediting":false,"comments_count":0,"created_at":"2017-08-15T22:48:04+09:00","group":null,"id":"7e7dcae7dde8b8c3bb9f","likes_count":12,"private":false,"reactions_count":0,"stocks_count":8,"tags":[{"name":"Bash","versions":[]}],"title":"grepでバックスラッシュを含む行を検索したい","updated_at":"2017-08-15T22:49:49+09:00","url":"https://qiita.com/neko_the_shadow/items/7e7dcae7dde8b8c3bb9f","user":{"description":"IT業界の片隅でひっそり生きるシステムエンジニアです(´・ω・｀)","facebook_id":"","followees_count":0,"followers_count":36,"github_login_name":null,"id":"neko_the_shadow","items_count":211,"linkedin_id":"","location":"神奈川県川崎市","name":"","organization":"","permanent_id":105859,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/105859/profile-images/1473709753","team_only":false,"twitter_screen_name":"neko_the_shadow","website_url":"https://github.com/nekoTheShadow"},"page_views_count":9670,"team_membership":null,"organization_url_name":null}