{"rendered_body":"<p>必要になるたびググって、そのたびに忘れている気がするので、自分用にメモしておきたいと思います。</p>\n\n<p>正規表現にマッチした文字列すべてを取得したい場合、Java8以前であれば以下のようなイディオムとなります。</p>\n\n<div class=\"code-frame\" data-lang=\"java\"><div class=\"highlight\"><pre><code><span class=\"nc\">String</span> <span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"s\">\"111 AAA 222 BBB 333\"</span><span class=\"o\">;</span>\n<span class=\"nc\">Pattern</span> <span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"nc\">Pattern</span><span class=\"o\">.</span><span class=\"na\">compile</span><span class=\"o\">(</span><span class=\"s\">\"[0-9]{3}\"</span><span class=\"o\">);</span>\n<span class=\"nc\">Matcher</span> <span class=\"n\">m</span> <span class=\"o\">=</span> <span class=\"n\">p</span><span class=\"o\">.</span><span class=\"na\">matcher</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"o\">);</span>\n\n<span class=\"nc\">List</span><span class=\"o\">&lt;</span><span class=\"nc\">String</span><span class=\"o\">&gt;</span> <span class=\"n\">results</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nc\">ArrayList</span><span class=\"o\">&lt;&gt;();</span>\n<span class=\"k\">while</span> <span class=\"o\">(</span><span class=\"n\">m</span><span class=\"o\">.</span><span class=\"na\">find</span><span class=\"o\">())</span> <span class=\"o\">{</span>\n    <span class=\"n\">results</span><span class=\"o\">.</span><span class=\"na\">add</span><span class=\"o\">(</span><span class=\"n\">m</span><span class=\"o\">.</span><span class=\"na\">group</span><span class=\"o\">());</span>\n<span class=\"o\">}</span>\n<span class=\"nc\">System</span><span class=\"o\">.</span><span class=\"na\">out</span><span class=\"o\">.</span><span class=\"na\">println</span><span class=\"o\">(</span><span class=\"n\">results</span><span class=\"o\">);</span> <span class=\"c1\">//=&gt; [111, 222, 333]</span>\n</code></pre></div></div>\n\n<p>Java9以降であればStreamを使って、シンプルに書くこともできます。</p>\n\n<div class=\"code-frame\" data-lang=\"java\"><div class=\"highlight\"><pre><code><span class=\"nc\">String</span> <span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"s\">\"111 AAA 222 BBB 333\"</span><span class=\"o\">;</span>\n<span class=\"nc\">Pattern</span> <span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"nc\">Pattern</span><span class=\"o\">.</span><span class=\"na\">compile</span><span class=\"o\">(</span><span class=\"s\">\"[0-9]{3}\"</span><span class=\"o\">);</span>\n<span class=\"nc\">Matcher</span> <span class=\"n\">m</span> <span class=\"o\">=</span> <span class=\"n\">p</span><span class=\"o\">.</span><span class=\"na\">matcher</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"o\">);</span>\n\n<span class=\"nc\">List</span><span class=\"o\">&lt;</span><span class=\"nc\">String</span><span class=\"o\">&gt;</span> <span class=\"n\">results</span> <span class=\"o\">=</span> <span class=\"n\">m</span><span class=\"o\">.</span><span class=\"na\">results</span><span class=\"o\">().</span><span class=\"na\">map</span><span class=\"o\">(</span><span class=\"nl\">MatchResult:</span><span class=\"o\">:</span><span class=\"n\">group</span><span class=\"o\">).</span><span class=\"na\">toList</span><span class=\"o\">();</span>\n<span class=\"nc\">System</span><span class=\"o\">.</span><span class=\"na\">out</span><span class=\"o\">.</span><span class=\"na\">println</span><span class=\"o\">(</span><span class=\"n\">results</span><span class=\"o\">);</span>  <span class=\"c1\">//=&gt; [111, 222, 333]</span>\n</code></pre></div></div>\n","body":"必要になるたびググって、そのたびに忘れている気がするので、自分用にメモしておきたいと思います。\n\n正規表現にマッチした文字列すべてを取得したい場合、Java8以前であれば以下のようなイディオムとなります。\n\n```java\nString s = \"111 AAA 222 BBB 333\";\nPattern p = Pattern.compile(\"[0-9]{3}\");\nMatcher m = p.matcher(s);\n\nList<String> results = new ArrayList<>();\nwhile (m.find()) {\n    results.add(m.group());\n}\nSystem.out.println(results); //=> [111, 222, 333]\n```\n\nJava9以降であればStreamを使って、シンプルに書くこともできます。\n\n```java\nString s = \"111 AAA 222 BBB 333\";\nPattern p = Pattern.compile(\"[0-9]{3}\");\nMatcher m = p.matcher(s);\n\nList<String> results = m.results().map(MatchResult::group).toList();\nSystem.out.println(results);  //=> [111, 222, 333]\n```\n","coediting":false,"comments_count":0,"created_at":"2021-07-06T22:44:23+09:00","group":null,"id":"1e1f39d77db97a04edff","likes_count":0,"private":false,"reactions_count":0,"tags":[{"name":"Java","versions":[]}],"title":"正規表現にマッチした文字列すべてを取得したい","updated_at":"2021-07-06T22:44:23+09:00","url":"https://qiita.com/neko_the_shadow/items/1e1f39d77db97a04edff","user":{"description":"IT業界の片隅でひっそり生きるシステムエンジニアです(´・ω・｀)","facebook_id":"","followees_count":0,"followers_count":36,"github_login_name":null,"id":"neko_the_shadow","items_count":191,"linkedin_id":"","location":"神奈川県川崎市","name":"","organization":"","permanent_id":105859,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/105859/profile-images/1473709753","team_only":false,"twitter_screen_name":"neko_the_shadow","website_url":"https://nekotheshadow.github.io/"},"page_views_count":null,"team_membership":null}