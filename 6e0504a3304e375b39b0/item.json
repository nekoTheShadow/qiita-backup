{"rendered_body":"<p>Javaでzipファイルを解凍する機会があったため、そのときの技術メモになります(´・ω・｀) まずは次の手順でzipに格納する3つのファイル(<code>a.txt</code>, <code>dir1/b.txt</code>, <code>dir1/dir2/c.txt</code>)を作成します。</p>\n\n<div class=\"code-frame\" data-lang=\"bash\"><div class=\"highlight\"><pre><code><span class=\"nb\">mkdir</span> <span class=\"nt\">-p</span> dir1/dir2\n<span class=\"nb\">touch </span>a.txt dir1/b.txt dir1/dir2/c.txt\n<span class=\"nb\">echo</span> <span class=\"s2\">\"AAAAAAAAAA\"</span> <span class=\"o\">&gt;</span> a.txt\n<span class=\"nb\">echo</span> <span class=\"s2\">\"BBBBBBBBBB\"</span> <span class=\"o\">&gt;</span> dir1/b.txt\n<span class=\"nb\">echo</span> <span class=\"s2\">\"CCCCCCCCCC\"</span> <span class=\"o\">&gt;</span> dir1/dir2/c.txt\n</code></pre></div></div>\n\n<p>作成した内容については次のようなコマンドで確認することができます。</p>\n\n<div class=\"code-frame\" data-lang=\"bash\"><div class=\"highlight\"><pre><code>find <span class=\"nb\">.</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.txt\"</span> | <span class=\"k\">while </span><span class=\"nb\">read </span>path<span class=\"p\">;</span> <span class=\"k\">do\n  </span><span class=\"nb\">echo</span> <span class=\"s2\">\"---&gt; </span><span class=\"k\">${</span><span class=\"nv\">path</span><span class=\"k\">}</span><span class=\"s2\"> &lt;---\"</span>\n  <span class=\"nb\">cat</span> <span class=\"k\">${</span><span class=\"nv\">path</span><span class=\"k\">}</span>\n<span class=\"k\">done</span>\n<span class=\"nt\">---</span><span class=\"o\">&gt;</span> ./a.txt &lt;<span class=\"nt\">---</span>\nAAAAAAAAAA\n<span class=\"nt\">---</span><span class=\"o\">&gt;</span> ./dir1/b.txt &lt;<span class=\"nt\">---</span>\nBBBBBBBBBB\n<span class=\"nt\">---</span><span class=\"o\">&gt;</span> ./dir1/dir2/c.txt &lt;<span class=\"nt\">---</span>\nCCCCCCCCCC\n</code></pre></div></div>\n\n<p>想定通りに3つのファイルが作成されていることが確認できたので、これを<code>text.zip</code>ファイルとして圧縮します。</p>\n\n<div class=\"code-frame\" data-lang=\"bash\"><div class=\"highlight\"><pre><code><span class=\"nv\">$ </span>zip <span class=\"s2\">\"text.zip\"</span> <span class=\"si\">$(</span>find <span class=\"nb\">.</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.txt\"</span><span class=\"si\">)</span>\n  adding: a.txt <span class=\"o\">(</span>deflated 45%<span class=\"o\">)</span>\n  adding: dir1/b.txt <span class=\"o\">(</span>deflated 45%<span class=\"o\">)</span>\n  adding: dir1/dir2/c.txt <span class=\"o\">(</span>deflated 45%<span class=\"o\">)</span>\n</code></pre></div></div>\n\n<p>最後に<code>text.zip</code>ファイルが正常に作成できたことを確認しておきましょう。</p>\n\n<div class=\"code-frame\" data-lang=\"bash\"><div class=\"highlight\"><pre><code><span class=\"nv\">$ </span>unzip <span class=\"nt\">-l</span> text.zip\nArchive:  text.zip\n  Length      Date    Time    Name\n<span class=\"nt\">---------</span>  <span class=\"nt\">----------</span> <span class=\"nt\">-----</span>   <span class=\"nt\">----</span>\n       11  2018-08-24 23:17   a.txt\n       11  2018-08-24 23:17   dir1/b.txt\n       11  2018-08-24 23:17   dir1/dir2/c.txt\n<span class=\"nt\">---------</span>                     <span class=\"nt\">-------</span>\n       33                     3 files\n</code></pre></div></div>\n\n<p>前置きが長くなりましたが、<code>text.zip</code>ファイルを<code>text</code>ディレクトリに解凍したいという場合、それを実現するJavaコードは以下の通りになります。</p>\n\n<div class=\"code-frame\" data-lang=\"java\"><div class=\"highlight\"><pre><code><span class=\"kn\">import</span> <span class=\"nn\">java.io.IOException</span><span class=\"o\">;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">java.nio.file.Files</span><span class=\"o\">;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">java.nio.file.Paths</span><span class=\"o\">;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">java.util.zip.ZipEntry</span><span class=\"o\">;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">java.util.zip.ZipInputStream</span><span class=\"o\">;</span>\n\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">Main</span> <span class=\"o\">{</span>\n    <span class=\"kd\">public</span> <span class=\"kd\">static</span> <span class=\"kt\">void</span> <span class=\"nf\">main</span><span class=\"o\">(</span><span class=\"nc\">String</span><span class=\"o\">[]</span> <span class=\"n\">args</span><span class=\"o\">)</span> <span class=\"kd\">throws</span> <span class=\"nc\">IOException</span> <span class=\"o\">{</span>\n        <span class=\"kt\">var</span> <span class=\"n\">target</span> <span class=\"o\">=</span> <span class=\"nc\">Paths</span><span class=\"o\">.</span><span class=\"na\">get</span><span class=\"o\">(</span><span class=\"s\">\"text\"</span><span class=\"o\">);</span>\n        <span class=\"nc\">Files</span><span class=\"o\">.</span><span class=\"na\">createDirectories</span><span class=\"o\">(</span><span class=\"n\">target</span><span class=\"o\">);</span>\n\n        <span class=\"kt\">var</span> <span class=\"n\">zipfile</span> <span class=\"o\">=</span> <span class=\"nc\">Paths</span><span class=\"o\">.</span><span class=\"na\">get</span><span class=\"o\">(</span><span class=\"s\">\"text.zip\"</span><span class=\"o\">);</span>\n        <span class=\"k\">try</span> <span class=\"o\">(</span><span class=\"kt\">var</span> <span class=\"n\">in</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nc\">ZipInputStream</span><span class=\"o\">(</span><span class=\"nc\">Files</span><span class=\"o\">.</span><span class=\"na\">newInputStream</span><span class=\"o\">(</span><span class=\"n\">zipfile</span><span class=\"o\">)))</span> <span class=\"o\">{</span>\n            <span class=\"nc\">ZipEntry</span> <span class=\"n\">e</span><span class=\"o\">;</span>\n            <span class=\"k\">while</span> <span class=\"o\">((</span><span class=\"n\">e</span> <span class=\"o\">=</span> <span class=\"n\">in</span><span class=\"o\">.</span><span class=\"na\">getNextEntry</span><span class=\"o\">())</span> <span class=\"o\">!=</span> <span class=\"kc\">null</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n                <span class=\"kt\">var</span> <span class=\"n\">dst</span> <span class=\"o\">=</span> <span class=\"nc\">Paths</span><span class=\"o\">.</span><span class=\"na\">get</span><span class=\"o\">(</span><span class=\"n\">target</span><span class=\"o\">.</span><span class=\"na\">toString</span><span class=\"o\">(),</span> <span class=\"n\">e</span><span class=\"o\">.</span><span class=\"na\">getName</span><span class=\"o\">());</span>\n                <span class=\"nc\">Files</span><span class=\"o\">.</span><span class=\"na\">createDirectories</span><span class=\"o\">(</span><span class=\"n\">dst</span><span class=\"o\">.</span><span class=\"na\">getParent</span><span class=\"o\">());</span>\n                <span class=\"nc\">Files</span><span class=\"o\">.</span><span class=\"na\">write</span><span class=\"o\">(</span><span class=\"n\">dst</span><span class=\"o\">,</span> <span class=\"n\">in</span><span class=\"o\">.</span><span class=\"na\">readAllBytes</span><span class=\"o\">());</span>\n                <span class=\"nc\">System</span><span class=\"o\">.</span><span class=\"na\">out</span><span class=\"o\">.</span><span class=\"na\">printf</span><span class=\"o\">(</span><span class=\"s\">\"inflating: %s%n\"</span><span class=\"o\">,</span> <span class=\"n\">dst</span><span class=\"o\">);</span>\n            <span class=\"o\">}</span>\n        <span class=\"o\">}</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">}</span>\n</code></pre></div></div>\n\n<p>このJavaコードを実行すると、<code>text.zip</code>が<code>text</code>ディレクトリに解凍されると同時に、以下のようなログが標準出力に表示されるはずです。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>inflating: text\\a.txt\ninflating: text\\dir1\\b.txt\ninflating: text\\dir1\\dir2\\c.txt\n</code></pre></div></div>\n\n<p>では本当に<code>text.zip</code>ファイルが<code>text</code>ディレクトリ配下に解凍されたのか。これについては以下のようなコマンドで確かめることができます。</p>\n\n<div class=\"code-frame\" data-lang=\"bash\"><div class=\"highlight\"><pre><code><span class=\"nv\">$ </span>find ./text <span class=\"nt\">-name</span> <span class=\"s2\">\"*.txt\"</span> | <span class=\"k\">while </span><span class=\"nb\">read </span>path<span class=\"p\">;</span> <span class=\"k\">do</span>\n<span class=\"o\">&gt;</span>   <span class=\"nb\">echo</span> <span class=\"s2\">\"---&gt; </span><span class=\"k\">${</span><span class=\"nv\">path</span><span class=\"k\">}</span><span class=\"s2\"> &lt;---\"</span>\n<span class=\"o\">&gt;</span>   <span class=\"nb\">cat</span> <span class=\"k\">${</span><span class=\"nv\">path</span><span class=\"k\">}</span>\n<span class=\"o\">&gt;</span> <span class=\"k\">done</span>\n<span class=\"nt\">---</span><span class=\"o\">&gt;</span> ./text/a.txt &lt;<span class=\"nt\">---</span>\nAAAAAAAAAA\n<span class=\"nt\">---</span><span class=\"o\">&gt;</span> ./text/dir1/b.txt &lt;<span class=\"nt\">---</span>\nBBBBBBBBBB\n<span class=\"nt\">---</span><span class=\"o\">&gt;</span> ./text/dir1/dir2/c.txt &lt;<span class=\"nt\">---</span>\nCCCCCCCCCC\n</code></pre></div></div>\n","body":"Javaでzipファイルを解凍する機会があったため、そのときの技術メモになります(´・ω・｀) まずは次の手順でzipに格納する3つのファイル(`a.txt`, `dir1/b.txt`, `dir1/dir2/c.txt`)を作成します。\n\n```bash\nmkdir -p dir1/dir2\ntouch a.txt dir1/b.txt dir1/dir2/c.txt\necho \"AAAAAAAAAA\" > a.txt\necho \"BBBBBBBBBB\" > dir1/b.txt\necho \"CCCCCCCCCC\" > dir1/dir2/c.txt\n```\n\n作成した内容については次のようなコマンドで確認することができます。\n\n```bash\nfind . -name \"*.txt\" | while read path; do\n  echo \"---> ${path} <---\"\n  cat ${path}\ndone\n---> ./a.txt <---\nAAAAAAAAAA\n---> ./dir1/b.txt <---\nBBBBBBBBBB\n---> ./dir1/dir2/c.txt <---\nCCCCCCCCCC\n```\n\n想定通りに3つのファイルが作成されていることが確認できたので、これを`text.zip`ファイルとして圧縮します。\n\n```bash\n$ zip \"text.zip\" $(find . -name \"*.txt\")\n  adding: a.txt (deflated 45%)\n  adding: dir1/b.txt (deflated 45%)\n  adding: dir1/dir2/c.txt (deflated 45%)\n```\n\n最後に`text.zip`ファイルが正常に作成できたことを確認しておきましょう。\n\n```bash\n$ unzip -l text.zip\nArchive:  text.zip\n  Length      Date    Time    Name\n---------  ---------- -----   ----\n       11  2018-08-24 23:17   a.txt\n       11  2018-08-24 23:17   dir1/b.txt\n       11  2018-08-24 23:17   dir1/dir2/c.txt\n---------                     -------\n       33                     3 files\n```\n\n前置きが長くなりましたが、`text.zip`ファイルを`text`ディレクトリに解凍したいという場合、それを実現するJavaコードは以下の通りになります。\n\n```java\nimport java.io.IOException;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\nimport java.util.zip.ZipEntry;\nimport java.util.zip.ZipInputStream;\n\npublic class Main {\n    public static void main(String[] args) throws IOException {\n        var target = Paths.get(\"text\");\n        Files.createDirectories(target);\n        \n        var zipfile = Paths.get(\"text.zip\");\n        try (var in = new ZipInputStream(Files.newInputStream(zipfile))) {\n            ZipEntry e;\n            while ((e = in.getNextEntry()) != null) {\n                var dst = Paths.get(target.toString(), e.getName());\n                Files.createDirectories(dst.getParent());\n                Files.write(dst, in.readAllBytes());\n                System.out.printf(\"inflating: %s%n\", dst);\n            }\n        }\n    }\n}\n```\n\nこのJavaコードを実行すると、`text.zip`が`text`ディレクトリに解凍されると同時に、以下のようなログが標準出力に表示されるはずです。\n\n```\ninflating: text\\a.txt\ninflating: text\\dir1\\b.txt\ninflating: text\\dir1\\dir2\\c.txt\n```\n\nでは本当に`text.zip`ファイルが`text`ディレクトリ配下に解凍されたのか。これについては以下のようなコマンドで確かめることができます。\n\n```bash\n$ find ./text -name \"*.txt\" | while read path; do\n>   echo \"---> ${path} <---\"\n>   cat ${path}\n> done\n---> ./text/a.txt <---\nAAAAAAAAAA\n---> ./text/dir1/b.txt <---\nBBBBBBBBBB\n---> ./text/dir1/dir2/c.txt <---\nCCCCCCCCCC\n```\n","coediting":false,"comments_count":1,"created_at":"2018-08-24T23:38:50+09:00","group":null,"id":"6e0504a3304e375b39b0","likes_count":14,"private":false,"reactions_count":0,"stocks_count":9,"tags":[{"name":"Java","versions":[]}],"title":"Javaでzipファイルを解凍する","updated_at":"2018-08-24T23:39:36+09:00","url":"https://qiita.com/neko_the_shadow/items/6e0504a3304e375b39b0","user":{"description":"IT業界の片隅でひっそり生きるシステムエンジニアです(´・ω・｀)","facebook_id":"","followees_count":0,"followers_count":35,"github_login_name":null,"id":"neko_the_shadow","items_count":210,"linkedin_id":"","location":"神奈川県川崎市","name":"","organization":"","permanent_id":105859,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/105859/profile-images/1473709753","team_only":false,"twitter_screen_name":"neko_the_shadow","website_url":"https://nekotheshadow.github.io/"},"page_views_count":23469,"team_membership":null,"organization_url_name":null}