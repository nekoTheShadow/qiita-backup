[{"body":"zip ファイルの構造( PowerShell の Compress-Archive で圧縮した )によっては `java.nio.file.NoSuchFileException` が出てしまうことがあるみたいです.\n\n`e.isDirectory()` で分岐することによって解決しました\n\n```java\nimport java.io.IOException;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\nimport java.util.zip.ZipEntry;\nimport java.util.zip.ZipInputStream;\n\npublic class Main {\n    public static void main(String[] args) throws IOException {\n        var target = Paths.get(\"text\");\n        Files.createDirectories(target);\n\n        var zipfile = Paths.get(\"text.zip\");\n        try (var in = new ZipInputStream(Files.newInputStream(zipfile))) {\n            ZipEntry e;\n            while ((e = in.getNextEntry()) != null) {\n                var dst = Paths.get(target.toString(), e.getName());\n                if (e.isDirectory()) {\n                    Files.createDirectories(dst);\n                } else {\n                    Files.createDirectories(dst.getParent());\n                    Files.write(dst, in.readAllBytes());\n                }\n                System.out.printf(\"inflating: %s%n\", dst);\n            }\n        }\n    }\n}\n```\n","created_at":"2023-03-06T11:54:09+09:00","id":"8cec6579803ca1a2221a","rendered_body":"<p data-sourcepos=\"1:1-1:177\">zip ファイルの構造( PowerShell の Compress-Archive で圧縮した )によっては <code>java.nio.file.NoSuchFileException</code> が出てしまうことがあるみたいです.</p>\n<p data-sourcepos=\"3:1-3:69\"><code>e.isDirectory()</code> で分岐することによって解決しました</p>\n<div class=\"code-frame\" data-lang=\"java\" data-sourcepos=\"5:1-33:3\"><div class=\"highlight\"><pre><code><span class=\"kn\">import</span> <span class=\"nn\">java.io.IOException</span><span class=\"o\">;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">java.nio.file.Files</span><span class=\"o\">;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">java.nio.file.Paths</span><span class=\"o\">;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">java.util.zip.ZipEntry</span><span class=\"o\">;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">java.util.zip.ZipInputStream</span><span class=\"o\">;</span>\n\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">Main</span> <span class=\"o\">{</span>\n    <span class=\"kd\">public</span> <span class=\"kd\">static</span> <span class=\"kt\">void</span> <span class=\"nf\">main</span><span class=\"o\">(</span><span class=\"nc\">String</span><span class=\"o\">[]</span> <span class=\"n\">args</span><span class=\"o\">)</span> <span class=\"kd\">throws</span> <span class=\"nc\">IOException</span> <span class=\"o\">{</span>\n        <span class=\"kt\">var</span> <span class=\"n\">target</span> <span class=\"o\">=</span> <span class=\"nc\">Paths</span><span class=\"o\">.</span><span class=\"na\">get</span><span class=\"o\">(</span><span class=\"s\">\"text\"</span><span class=\"o\">);</span>\n        <span class=\"nc\">Files</span><span class=\"o\">.</span><span class=\"na\">createDirectories</span><span class=\"o\">(</span><span class=\"n\">target</span><span class=\"o\">);</span>\n\n        <span class=\"kt\">var</span> <span class=\"n\">zipfile</span> <span class=\"o\">=</span> <span class=\"nc\">Paths</span><span class=\"o\">.</span><span class=\"na\">get</span><span class=\"o\">(</span><span class=\"s\">\"text.zip\"</span><span class=\"o\">);</span>\n        <span class=\"k\">try</span> <span class=\"o\">(</span><span class=\"kt\">var</span> <span class=\"n\">in</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nc\">ZipInputStream</span><span class=\"o\">(</span><span class=\"nc\">Files</span><span class=\"o\">.</span><span class=\"na\">newInputStream</span><span class=\"o\">(</span><span class=\"n\">zipfile</span><span class=\"o\">)))</span> <span class=\"o\">{</span>\n            <span class=\"nc\">ZipEntry</span> <span class=\"n\">e</span><span class=\"o\">;</span>\n            <span class=\"k\">while</span> <span class=\"o\">((</span><span class=\"n\">e</span> <span class=\"o\">=</span> <span class=\"n\">in</span><span class=\"o\">.</span><span class=\"na\">getNextEntry</span><span class=\"o\">())</span> <span class=\"o\">!=</span> <span class=\"kc\">null</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n                <span class=\"kt\">var</span> <span class=\"n\">dst</span> <span class=\"o\">=</span> <span class=\"nc\">Paths</span><span class=\"o\">.</span><span class=\"na\">get</span><span class=\"o\">(</span><span class=\"n\">target</span><span class=\"o\">.</span><span class=\"na\">toString</span><span class=\"o\">(),</span> <span class=\"n\">e</span><span class=\"o\">.</span><span class=\"na\">getName</span><span class=\"o\">());</span>\n                <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">e</span><span class=\"o\">.</span><span class=\"na\">isDirectory</span><span class=\"o\">())</span> <span class=\"o\">{</span>\n                    <span class=\"nc\">Files</span><span class=\"o\">.</span><span class=\"na\">createDirectories</span><span class=\"o\">(</span><span class=\"n\">dst</span><span class=\"o\">);</span>\n                <span class=\"o\">}</span> <span class=\"k\">else</span> <span class=\"o\">{</span>\n                    <span class=\"nc\">Files</span><span class=\"o\">.</span><span class=\"na\">createDirectories</span><span class=\"o\">(</span><span class=\"n\">dst</span><span class=\"o\">.</span><span class=\"na\">getParent</span><span class=\"o\">());</span>\n                    <span class=\"nc\">Files</span><span class=\"o\">.</span><span class=\"na\">write</span><span class=\"o\">(</span><span class=\"n\">dst</span><span class=\"o\">,</span> <span class=\"n\">in</span><span class=\"o\">.</span><span class=\"na\">readAllBytes</span><span class=\"o\">());</span>\n                <span class=\"o\">}</span>\n                <span class=\"nc\">System</span><span class=\"o\">.</span><span class=\"na\">out</span><span class=\"o\">.</span><span class=\"na\">printf</span><span class=\"o\">(</span><span class=\"s\">\"inflating: %s%n\"</span><span class=\"o\">,</span> <span class=\"n\">dst</span><span class=\"o\">);</span>\n            <span class=\"o\">}</span>\n        <span class=\"o\">}</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">}</span>\n</code></pre></div></div>\n","updated_at":"2023-03-06T13:32:37+09:00","user":{"description":null,"facebook_id":null,"followees_count":1,"followers_count":1,"github_login_name":"narumincho","id":"narumincho","items_count":4,"linkedin_id":null,"location":null,"name":"","organization":null,"permanent_id":117764,"profile_image_url":"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/117764/profile-images/1653803321","team_only":false,"twitter_screen_name":null,"website_url":null}}]