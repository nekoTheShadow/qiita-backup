{"rendered_body":"<p><a href=\"https://codeiq.jp/q/3053\" rel=\"nofollow noopener\" target=\"_blank\">CodeIQ　「『スパイラル・ウォーク』問題」</a>の掲載期間が終わったということで、自分の提出コードを公開したいと思います。詳しい問題内容と解説は後日CodeIQMagazineあたりに掲載されると思うので、その際にリンクを張りたいと思います――覚えていたら(´・ω・`)</p>\n\n<p><strong>2016-12-29追記</strong>: <a href=\"https://codeiq.jp/magazine/2016/12/48446/\" rel=\"nofollow noopener\" target=\"_blank\">CodeIQMagazineに本問の解説記事</a>が掲載されていました。またほかの方が公開されたコードが<a href=\"https://togetter.com/li/1062323\" rel=\"nofollow noopener\" target=\"_blank\">Toggetter</a>にまとめられています。</p>\n\n<div class=\"code-frame\" data-lang=\"py\"><div class=\"highlight\"><pre><code><span class=\"c1\"># 問題文に従うと「進む距離m」は(格子点の数 - 1)となる。\n# (格子点の数) = (w + 1) * (h + 1) だから、F(m)は次を満たす(h,w)の組み合わせの総数である:\n#   (w + 1) * (h + 1) - 1 = m &lt;=&gt; (w + 1) * (h + 1) = m + 1\n# 言い換えるとF(m)は「m+1の約数のうち、1でもm+1でもないものの総数」とわかる。ｌ\n</span>\n<span class=\"c1\"># 以上の性質を利用すると「1&lt;=m&lt;=nとなるすべてのmに対するF(m)の和」G(n)は次のように考えることができる\n#   2&lt;=x&lt;=n+1となるすべてのxについて、「xを約数にもつがxではない、n+1以下の整数」の個数の和\n</span>\n<span class=\"k\">if</span> <span class=\"n\">__name__</span> <span class=\"o\">==</span> <span class=\"s\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">n</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"nb\">input</span><span class=\"p\">())</span>\n\n    <span class=\"n\">t</span> <span class=\"o\">=</span> <span class=\"n\">n</span> <span class=\"o\">+</span> <span class=\"mi\">1</span>\n    <span class=\"n\">answer</span> <span class=\"o\">=</span> <span class=\"nb\">sum</span><span class=\"p\">(</span><span class=\"n\">t</span> <span class=\"o\">//</span> <span class=\"n\">x</span> <span class=\"o\">-</span> <span class=\"mi\">1</span> <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">t</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">))</span>\n\n    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">answer</span><span class=\"p\">)</span>\n</code></pre></div></div>\n\n<p>コメントをのぞくと 実質的なコードは4行。それもやや冗長に書いて4行ですから、もっと短くすることもできそうですね。</p>\n\n<p>個人的には興味深い問題でした。「格子路をらせん状に歩くとき、その歩く距離の組み合わせの総数を求める」という、一見するときわめて複雑な問題提起ですが、よくよく考えていくと「x以下の自然数の約数の個数の総数を求める」というところにまで収れんします。<strong>要するに本問は「複雑そうに見えても、その本質はシンプル」というタイプの問題であり、解答者は周辺的な情報を一切無視して、単純な中核部分にだけ取り組めばよいということになります。</strong></p>\n\n<p>複雑な事象に対してその複雑さを維持したまま取り組むのは愚策です。複雑さの本質を直感し、その本質にアプローチする。それこそがシステム開発あるいはプログラミングの基本であり、パズルを解く楽しみのひとつでもあるとわたしは考えています。</p>\n","body":"[CodeIQ　「『スパイラル・ウォーク』問題」](https://codeiq.jp/q/3053)の掲載期間が終わったということで、自分の提出コードを公開したいと思います。詳しい問題内容と解説は後日CodeIQMagazineあたりに掲載されると思うので、その際にリンクを張りたいと思います――覚えていたら(´・ω・`)\n\n__2016-12-29追記__: [CodeIQMagazineに本問の解説記事](https://codeiq.jp/magazine/2016/12/48446/)が掲載されていました。またほかの方が公開されたコードが[Toggetter](https://togetter.com/li/1062323)にまとめられています。\n\n```py\n# 問題文に従うと「進む距離m」は(格子点の数 - 1)となる。\n# (格子点の数) = (w + 1) * (h + 1) だから、F(m)は次を満たす(h,w)の組み合わせの総数である:\n# \t(w + 1) * (h + 1) - 1 = m <=> (w + 1) * (h + 1) = m + 1\n# 言い換えるとF(m)は「m+1の約数のうち、1でもm+1でもないものの総数」とわかる。ｌ\n\n# 以上の性質を利用すると「1<=m<=nとなるすべてのmに対するF(m)の和」G(n)は次のように考えることができる\n# \t2<=x<=n+1となるすべてのxについて、「xを約数にもつがxではない、n+1以下の整数」の個数の和\n\nif __name__ == '__main__':\n\tn = int(input())\n\t\n\tt = n + 1\n\tanswer = sum(t // x - 1 for x in range(2, t + 1))\n\t\n\tprint(answer)\n```\n \nコメントをのぞくと 実質的なコードは4行。それもやや冗長に書いて4行ですから、もっと短くすることもできそうですね。\n \n 個人的には興味深い問題でした。「格子路をらせん状に歩くとき、その歩く距離の組み合わせの総数を求める」という、一見するときわめて複雑な問題提起ですが、よくよく考えていくと「x以下の自然数の約数の個数の総数を求める」というところにまで収れんします。__要するに本問は「複雑そうに見えても、その本質はシンプル」というタイプの問題であり、解答者は周辺的な情報を一切無視して、単純な中核部分にだけ取り組めばよいということになります。__\n \n 複雑な事象に対してその複雑さを維持したまま取り組むのは愚策です。複雑さの本質を直感し、その本質にアプローチする。それこそがシステム開発あるいはプログラミングの基本であり、パズルを解く楽しみのひとつでもあるとわたしは考えています。\n","coediting":false,"comments_count":0,"created_at":"2016-12-23T01:53:05+09:00","group":null,"id":"0adf3d3e9da58f0e6bb3","likes_count":0,"private":false,"reactions_count":0,"tags":[{"name":"codeiq","versions":[]},{"name":"Python3","versions":[]}],"title":"CodeIQ　「『スパイラル・ウォーク』問題」に参加しました。","updated_at":"2016-12-29T06:59:57+09:00","url":"https://qiita.com/neko_the_shadow/items/0adf3d3e9da58f0e6bb3","user":{"description":"IT業界の片隅でひっそり生きるシステムエンジニアです(´・ω・｀)","facebook_id":"","followees_count":0,"followers_count":36,"github_login_name":null,"id":"neko_the_shadow","items_count":196,"linkedin_id":"","location":"神奈川県川崎市","name":"","organization":"","permanent_id":105859,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/105859/profile-images/1473709753","team_only":false,"twitter_screen_name":"neko_the_shadow","website_url":"https://nekotheshadow.github.io/"},"page_views_count":null,"team_membership":null}