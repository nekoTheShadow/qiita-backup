{"rendered_body":"<p data-sourcepos=\"1:1-1:94\">Doma2でMergeを利用することがあったので、メモとして残しておきます。</p>\n<p data-sourcepos=\"3:1-3:108\">といってもそれほど難しいことはなく、まずはDaoインタフェースを用意します。</p>\n<div class=\"code-frame\" data-lang=\"java\" data-sourcepos=\"5:1-18:3\"><div class=\"highlight\"><pre><code><span class=\"nd\">@Dao</span>\n<span class=\"nd\">@ConfigAutowireable</span>\n<span class=\"kd\">public</span> <span class=\"kd\">interface</span> <span class=\"nc\">InventoryDao</span> <span class=\"o\">{</span>\n\t<span class=\"cm\">/**\n\t * 入荷予定をもとに在庫数を更新する。入荷予定に対する現在在庫が存在しない場合は、在庫データを作成する。\n\t * @param dt 入荷予定日\n\t * @return 挿入・更新件数\n\t */</span>\n\t<span class=\"nd\">@Update</span><span class=\"o\">(</span><span class=\"n\">sqlFile</span> <span class=\"o\">=</span> <span class=\"kc\">true</span><span class=\"o\">)</span>\n    <span class=\"kt\">int</span> <span class=\"nf\">mergeInventoryUsingReceipt</span><span class=\"o\">(</span><span class=\"nc\">LocalDate</span> <span class=\"n\">dt</span><span class=\"o\">);</span>\n<span class=\"o\">}</span>\n\n</code></pre></div></div>\n<p data-sourcepos=\"20:1-20:197\">ここで注意するのは、<code>@Update</code>アノテーションを付与すること、戻り値を<code>int</code>にすることです。この戻り値は更新・挿入・削除した件数になります。</p>\n<p data-sourcepos=\"22:1-22:98\">あとはこのDaoインターフェースに対応するMerge文を用意すればよいです。</p>\n<div class=\"code-frame\" data-lang=\"SQL\" data-sourcepos=\"24:1-34:3\"><div class=\"highlight\"><pre><code><span class=\"n\">MERGE</span> <span class=\"n\">inventory</span> <span class=\"k\">AS</span> <span class=\"n\">I</span>\n<span class=\"k\">USING</span> <span class=\"p\">(</span>\n  <span class=\"k\">SELECT</span> <span class=\"o\">*</span>\n  <span class=\"k\">FROM</span> <span class=\"n\">receipt</span>\n  <span class=\"k\">WHERE</span> <span class=\"n\">dt</span> <span class=\"o\">=</span> <span class=\"cm\">/* dt */</span><span class=\"s1\">'2022-04-23'</span>\n<span class=\"p\">)</span> <span class=\"n\">R</span>\n<span class=\"k\">ON</span> <span class=\"n\">I</span><span class=\"p\">.</span><span class=\"n\">item</span> <span class=\"o\">=</span> <span class=\"n\">R</span><span class=\"p\">.</span><span class=\"n\">item</span>\n<span class=\"k\">WHEN</span> <span class=\"n\">MATCHED</span> <span class=\"k\">THEN</span> <span class=\"k\">UPDATE</span> <span class=\"k\">SET</span> <span class=\"n\">I</span><span class=\"p\">.</span><span class=\"n\">qty</span> <span class=\"o\">=</span> <span class=\"n\">I</span><span class=\"p\">.</span><span class=\"n\">qty</span> <span class=\"o\">+</span> <span class=\"n\">R</span><span class=\"p\">.</span><span class=\"n\">qty</span>\n<span class=\"k\">WHEN</span> <span class=\"k\">NOT</span> <span class=\"n\">MATCHED</span> <span class=\"k\">THEN</span> <span class=\"k\">INSERT</span> <span class=\"p\">(</span><span class=\"n\">item</span><span class=\"p\">,</span> <span class=\"n\">qty</span><span class=\"p\">)</span> <span class=\"k\">VALUES</span> <span class=\"p\">(</span><span class=\"n\">R</span><span class=\"p\">.</span><span class=\"n\">item</span><span class=\"p\">,</span> <span class=\"n\">R</span><span class=\"p\">.</span><span class=\"n\">qty</span><span class=\"p\">);</span>\n</code></pre></div></div>\n<p data-sourcepos=\"36:1-36:39\"><strong>稼働確認環境(<code>pom.xml</code>抜粋)</strong></p>\n<div class=\"code-frame\" data-lang=\"xml\" data-sourcepos=\"38:1-70:3\"><div class=\"highlight\"><pre><code><span class=\"nt\">&lt;parent&gt;</span>\n  <span class=\"nt\">&lt;groupId&gt;</span>org.springframework.boot<span class=\"nt\">&lt;/groupId&gt;</span>\n  <span class=\"nt\">&lt;artifactId&gt;</span>spring-boot-starter-parent<span class=\"nt\">&lt;/artifactId&gt;</span>\n  <span class=\"nt\">&lt;version&gt;</span>2.6.7<span class=\"nt\">&lt;/version&gt;</span>\n  <span class=\"nt\">&lt;relativePath/&gt;</span> <span class=\"c\">&lt;!-- lookup parent from repository --&gt;</span>\n<span class=\"nt\">&lt;/parent&gt;</span>\n<span class=\"nt\">&lt;properties&gt;</span>\n  <span class=\"nt\">&lt;java.version&gt;</span>8<span class=\"nt\">&lt;/java.version&gt;</span>\n<span class=\"nt\">&lt;/properties&gt;</span>\n<span class=\"nt\">&lt;dependencies&gt;</span>\n  <span class=\"nt\">&lt;dependency&gt;</span>\n    <span class=\"nt\">&lt;groupId&gt;</span>org.springframework.boot<span class=\"nt\">&lt;/groupId&gt;</span>\n    <span class=\"nt\">&lt;artifactId&gt;</span>spring-boot-starter-batch<span class=\"nt\">&lt;/artifactId&gt;</span>\n  <span class=\"nt\">&lt;/dependency&gt;</span>\n  <span class=\"nt\">&lt;dependency&gt;</span>\n    <span class=\"nt\">&lt;groupId&gt;</span>org.seasar.doma.boot<span class=\"nt\">&lt;/groupId&gt;</span>\n    <span class=\"nt\">&lt;artifactId&gt;</span>doma-spring-boot-starter<span class=\"nt\">&lt;/artifactId&gt;</span>\n    <span class=\"nt\">&lt;version&gt;</span>1.6.0<span class=\"nt\">&lt;/version&gt;</span>\n  <span class=\"nt\">&lt;/dependency&gt;</span>\n  <span class=\"nt\">&lt;dependency&gt;</span>\n    <span class=\"nt\">&lt;groupId&gt;</span>org.seasar.doma<span class=\"nt\">&lt;/groupId&gt;</span>\n    <span class=\"nt\">&lt;artifactId&gt;</span>doma-processor<span class=\"nt\">&lt;/artifactId&gt;</span>\n    <span class=\"nt\">&lt;version&gt;</span>2.50.0<span class=\"nt\">&lt;/version&gt;</span>\n    <span class=\"nt\">&lt;optional&gt;</span>true<span class=\"nt\">&lt;/optional&gt;</span>\n  <span class=\"nt\">&lt;/dependency&gt;</span>\n  <span class=\"nt\">&lt;dependency&gt;</span>\n    <span class=\"nt\">&lt;groupId&gt;</span>com.microsoft.sqlserver<span class=\"nt\">&lt;/groupId&gt;</span>\n    <span class=\"nt\">&lt;artifactId&gt;</span>mssql-jdbc<span class=\"nt\">&lt;/artifactId&gt;</span>\n    <span class=\"nt\">&lt;scope&gt;</span>runtime<span class=\"nt\">&lt;/scope&gt;</span>\n  <span class=\"nt\">&lt;/dependency&gt;</span>\n<span class=\"nt\">&lt;/dependencies&gt;</span>\n</code></pre></div></div>\n","body":"Doma2でMergeを利用することがあったので、メモとして残しておきます。\n\nといってもそれほど難しいことはなく、まずはDaoインタフェースを用意します。\n\n```java\n@Dao\n@ConfigAutowireable\npublic interface InventoryDao {\n\t/**\n\t * 入荷予定をもとに在庫数を更新する。入荷予定に対する現在在庫が存在しない場合は、在庫データを作成する。\n\t * @param dt 入荷予定日\n\t * @return 挿入・更新件数\n\t */\n\t@Update(sqlFile = true)\n    int mergeInventoryUsingReceipt(LocalDate dt);\n}\n\n```\n\nここで注意するのは、`@Update`アノテーションを付与すること、戻り値を`int`にすることです。この戻り値は更新・挿入・削除した件数になります。\n\nあとはこのDaoインターフェースに対応するMerge文を用意すればよいです。\n\n```SQL\nMERGE inventory AS I\nUSING (\n  SELECT *\n  FROM receipt\n  WHERE dt = /* dt */'2022-04-23'\n) R\nON I.item = R.item\nWHEN MATCHED THEN UPDATE SET I.qty = I.qty + R.qty\nWHEN NOT MATCHED THEN INSERT (item, qty) VALUES (R.item, R.qty);\n```\n\n**稼働確認環境(`pom.xml`抜粋)**\n\n```xml\n<parent>\n  <groupId>org.springframework.boot</groupId>\n  <artifactId>spring-boot-starter-parent</artifactId>\n  <version>2.6.7</version>\n  <relativePath/> <!-- lookup parent from repository -->\n</parent>\n<properties>\n  <java.version>8</java.version>\n</properties>\n<dependencies>\n  <dependency>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-batch</artifactId>\n  </dependency>\n  <dependency>\n    <groupId>org.seasar.doma.boot</groupId>\n    <artifactId>doma-spring-boot-starter</artifactId>\n    <version>1.6.0</version>\n  </dependency>\n  <dependency>\n    <groupId>org.seasar.doma</groupId>\n    <artifactId>doma-processor</artifactId>\n    <version>2.50.0</version>\n    <optional>true</optional>\n  </dependency>\n  <dependency>\n    <groupId>com.microsoft.sqlserver</groupId>\n    <artifactId>mssql-jdbc</artifactId>\n    <scope>runtime</scope>\n  </dependency>\n</dependencies>\n```\n\n","coediting":false,"comments_count":0,"created_at":"2022-05-06T22:37:42+09:00","group":null,"id":"6014faca49622832cec7","likes_count":0,"private":false,"reactions_count":0,"stocks_count":0,"tags":[{"name":"Java","versions":[]},{"name":"Doma","versions":[]}],"title":"Doma2でMergeを利用する","updated_at":"2022-05-06T22:37:42+09:00","url":"https://qiita.com/neko_the_shadow/items/6014faca49622832cec7","user":{"description":"IT業界の片隅でひっそり生きるシステムエンジニアです(´・ω・｀)","facebook_id":"","followees_count":0,"followers_count":36,"github_login_name":null,"id":"neko_the_shadow","items_count":211,"linkedin_id":"","location":"神奈川県川崎市","name":"","organization":"","permanent_id":105859,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/105859/profile-images/1473709753","team_only":false,"twitter_screen_name":"neko_the_shadow","website_url":"https://github.com/nekoTheShadow"},"page_views_count":1250,"team_membership":null,"organization_url_name":null}