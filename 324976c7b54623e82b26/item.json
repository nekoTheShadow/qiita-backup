{"rendered_body":"<p>ちょっとしたPython3スクリプトでjsonをPOSTしたいということがよくあると思います(適当)。</p>\n\n<p>まずはサンプルコード。</p>\n\n<div class=\"code-frame\" data-lang=\"py3\"><div class=\"highlight\"><pre class=\"with-code\"><code><span class=\"kn\">import</span> <span class=\"nn\">urllib.request</span><span class=\"p\">,</span> <span class=\"n\">json</span>\n\n<span class=\"k\">if</span> <span class=\"n\">__name__</span> <span class=\"o\">==</span> <span class=\"s\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">url</span> <span class=\"o\">=</span> <span class=\"s\">\"http://xxxx/xxxx\"</span> \n    <span class=\"n\">method</span> <span class=\"o\">=</span> <span class=\"s\">\"POST\"</span>\n    <span class=\"n\">headers</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s\">\"Content-Type\"</span> <span class=\"p\">:</span> <span class=\"s\">\"application/json\"</span><span class=\"p\">}</span>\n\n    <span class=\"c1\"># PythonオブジェクトをJSONに変換する\n</span>    <span class=\"n\">obj</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s\">\"xxx\"</span> <span class=\"p\">:</span> <span class=\"s\">\"xxxx\"</span><span class=\"p\">,</span> <span class=\"mi\">123</span> <span class=\"p\">:</span> <span class=\"mi\">123</span><span class=\"p\">}</span> \n    <span class=\"n\">json_data</span> <span class=\"o\">=</span> <span class=\"n\">json</span><span class=\"p\">.</span><span class=\"n\">dumps</span><span class=\"p\">(</span><span class=\"n\">obj</span><span class=\"p\">).</span><span class=\"n\">encode</span><span class=\"p\">(</span><span class=\"s\">\"utf-8\"</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># httpリクエストを準備してPOST\n</span>    <span class=\"n\">request</span> <span class=\"o\">=</span> <span class=\"n\">urllib</span><span class=\"p\">.</span><span class=\"n\">request</span><span class=\"p\">.</span><span class=\"n\">Request</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"o\">=</span><span class=\"n\">json_data</span><span class=\"p\">,</span> <span class=\"n\">method</span><span class=\"o\">=</span><span class=\"n\">method</span><span class=\"p\">,</span> <span class=\"n\">headers</span><span class=\"o\">=</span><span class=\"n\">headers</span><span class=\"p\">)</span>\n    <span class=\"k\">with</span> <span class=\"n\">urllib</span><span class=\"p\">.</span><span class=\"n\">request</span><span class=\"p\">.</span><span class=\"n\">urlopen</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">response</span><span class=\"p\">:</span>\n        <span class=\"n\">response_body</span> <span class=\"o\">=</span> <span class=\"n\">response</span><span class=\"p\">.</span><span class=\"n\">read</span><span class=\"p\">().</span><span class=\"n\">decode</span><span class=\"p\">(</span><span class=\"s\">\"utf-8\"</span><span class=\"p\">)</span>\n</code></pre></div></div>\n\n<p>次に簡単な実例として<a href=\"search.nicovideo.jp/docs/api/snapshot.html\">「ニコニコ動画 『スナップショット検索API』」</a>を利用して、「結月ゆかり」の検索結果のうち、再生数が多い30個の動画を取得してみたいと思います。</p>\n\n<div class=\"code-frame\" data-lang=\"py3\"><div class=\"highlight\"><pre class=\"with-code\"><code><span class=\"kn\">import</span> <span class=\"nn\">urllib.request</span><span class=\"p\">,</span> <span class=\"n\">json</span>\n\n<span class=\"k\">if</span> <span class=\"n\">__name__</span> <span class=\"o\">==</span> <span class=\"s\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">url</span> <span class=\"o\">=</span> <span class=\"s\">\"http://api.search.nicovideo.jp/api/snapshot/\"</span>\n    <span class=\"n\">method</span> <span class=\"o\">=</span> <span class=\"s\">\"POST\"</span>\n    <span class=\"n\">obj</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"s\">\"query\"</span> <span class=\"p\">:</span> <span class=\"s\">\"結月ゆかり\"</span><span class=\"p\">,</span>\n        <span class=\"s\">\"service\"</span> <span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s\">\"video\"</span><span class=\"p\">],</span>\n        <span class=\"s\">\"search\"</span> <span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s\">\"title\"</span><span class=\"p\">,</span> <span class=\"s\">\"description\"</span><span class=\"p\">,</span> <span class=\"s\">\"tags\"</span><span class=\"p\">],</span>\n        <span class=\"s\">\"join\"</span> <span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s\">\"title\"</span><span class=\"p\">,</span> <span class=\"s\">\"view_counter\"</span><span class=\"p\">],</span>\n        <span class=\"s\">\"sort_by\"</span> <span class=\"p\">:</span> <span class=\"s\">\"view_counter\"</span><span class=\"p\">,</span>\n        <span class=\"s\">\"order\"</span> <span class=\"p\">:</span> <span class=\"s\">\"desc\"</span><span class=\"p\">,</span>\n        <span class=\"s\">\"size\"</span> <span class=\"p\">:</span> <span class=\"mi\">30</span><span class=\"p\">,</span>\n        <span class=\"s\">\"issuer\"</span> <span class=\"p\">:</span> <span class=\"s\">\"xxxxxxxxxxxxxxxxxxxxx\"</span>\n    <span class=\"p\">}</span>\n    <span class=\"n\">json_data</span> <span class=\"o\">=</span> <span class=\"n\">json</span><span class=\"p\">.</span><span class=\"n\">dumps</span><span class=\"p\">(</span><span class=\"n\">obj</span><span class=\"p\">).</span><span class=\"n\">encode</span><span class=\"p\">(</span><span class=\"s\">\"utf-8\"</span><span class=\"p\">)</span>\n    <span class=\"n\">headers</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s\">\"Content-Type\"</span> <span class=\"p\">:</span> <span class=\"s\">\"application/json\"</span><span class=\"p\">}</span>\n\n    <span class=\"n\">request</span> <span class=\"o\">=</span> <span class=\"n\">urllib</span><span class=\"p\">.</span><span class=\"n\">request</span><span class=\"p\">.</span><span class=\"n\">Request</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"o\">=</span><span class=\"n\">json_data</span><span class=\"p\">,</span> <span class=\"n\">headers</span><span class=\"o\">=</span><span class=\"n\">headers</span><span class=\"p\">,</span> <span class=\"n\">method</span><span class=\"o\">=</span><span class=\"n\">method</span><span class=\"p\">)</span>\n    <span class=\"k\">with</span> <span class=\"n\">urllib</span><span class=\"p\">.</span><span class=\"n\">request</span><span class=\"p\">.</span><span class=\"n\">urlopen</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">response</span><span class=\"p\">:</span>\n        <span class=\"n\">response_body</span> <span class=\"o\">=</span> <span class=\"n\">response</span><span class=\"p\">.</span><span class=\"n\">read</span><span class=\"p\">().</span><span class=\"n\">decode</span><span class=\"p\">(</span><span class=\"s\">\"utf-8\"</span><span class=\"p\">)</span>\n\n        <span class=\"n\">result_objs</span> <span class=\"o\">=</span> <span class=\"n\">json</span><span class=\"p\">.</span><span class=\"n\">loads</span><span class=\"p\">(</span><span class=\"n\">response_body</span><span class=\"p\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s\">'</span><span class=\"se\">\\n</span><span class=\"s\">'</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n        <span class=\"k\">for</span> <span class=\"n\">result_obj</span> <span class=\"ow\">in</span> <span class=\"n\">result_objs</span><span class=\"p\">[</span><span class=\"s\">\"values\"</span><span class=\"p\">]:</span>\n            <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"{0:&lt;10}{1}\"</span><span class=\"p\">.</span><span class=\"nb\">format</span><span class=\"p\">(</span><span class=\"n\">result_obj</span><span class=\"p\">[</span><span class=\"s\">\"view_counter\"</span><span class=\"p\">],</span> <span class=\"n\">result_obj</span><span class=\"p\">[</span><span class=\"s\">\"title\"</span><span class=\"p\">]))</span>\n\n<span class=\"c1\"># 2903887   【初音ミク】こちら、幸福安心委員会です。【オリジナル】\n# 2331059   みwなwぎwっwてwきwたwww（篠笛禁断症状L5）\n# 1979283   【Minecraft】ゲリラクラフト 周囲に防衛線を築き地雷を張り巡らせるんだ#1\n# 1896978   【Minecraft】ゲリラクラフト 周囲に防衛線を築き地雷を張り巡らせるんだ#5\n# 1805589   【Minecraft】ゆかり「メイジタワー爆破しましょう」part1【VOICEROID+実況】\n# 1662622   【結月ゆかり】名前のない怪物を歌ってもらった【PSYCHO-PASS】\n# 1617931   【Minecraft】ゲリラクラフト 周囲に防衛線を築き地雷を張り巡らせるんだ#3\n# 1587257   【初音ミク】永遠に幸せになる方法、見つけました。【オリジナル】\n# 1531263   【結月ゆかり】幸せになれる隠しコマンドがあるらしい【オリジナル】\n# 1499237   【Minecraft】ゲリラクラフト 周囲に防衛線を築き地雷を張り巡らせるんだ#2\n# 1424024   【結月ゆかりの】チュルリラ・チュルリラ・ダッダッダ！\n# 1391173   【Minecraft】ゲリラクラフト 周囲に防衛線を築き地雷を張り巡らせるんだ#7\n# 1356847   【Minecraft】ゲリラクラフト 周囲に防衛線を築き地雷を張り巡らせるんだ#6\n# 1354592   【Minecraft】ゆかり「メイジタワー爆破しましょう」part3【VOICEROID+実況】\n# 1261669   【Minecraft】ゆかり「メイジタワー爆破しましょう」part2【VOICEROID+実況】\n# 1241053   【Minecraft】ゲリラクラフト 周囲に防衛線を築き地雷を張り巡らせるんだ#8\n# 1223469   【Minecraft】ゲリラクラフト 周囲に防衛線を築き地雷を張り巡らせるんだ#4\n# 1201715   【Minecraft】ゆかり「メイジタワー爆破しましょう」part4【VOICEROID+実況】\n# 1182955   【Minecraft】ゲリラクラフト 周囲に防衛線を築き地雷を張り巡らせるんだ#9\n# 1177519   【Minecraft】ゆかり「メイジタワー爆破しましょう」part9【VOICEROID+実況】\n# 1069852   【MAYU】一途な片思い、実らせたい小さな幸せ。【オリジナル】\n# 1045793   【Minecraft】ゲリラクラフト 周囲に防衛線を築き地雷を張り巡らせるんだ⑩\n# 1040149   【Minecraft】ゆかり「メイジタワー爆破しましょう」part5【VOICEROID+実況】\n# 1008825   【Minecraft】ゆかり「メイジタワー爆破しましょう」part6【VOICEROID+実況】\n# 993675    【結月ゆかりの】サヨナラチェーンソー\n# 963262    【Minecraft】ゆかり「メイジタワー爆破しましょう」part7【VOICEROID+実況】\n# 927444    【Minecraft】ゆかり「メイジタワー爆破しましょう」part8【VOICEROID+実況】\n# 895328    【Minecraft】ゲリラクラフト 周囲に防衛線を築き地雷を張り巡らせるんだ⑫\n# 892567    【Minecraft】ゆかり「メイジタワー爆破しましょう」最終回【VOICEROID+実況】\n# 878046    【Minecraft】ゲリラクラフト 周囲に防衛線を築き地雷を張り巡らせるんだ⑪\n</span></code></pre></div></div>\n\n<p>いくつか注意点があるので、それも簡単に紹介しておきますね。</p>\n\n<ul>\n<li>POSTするデータ、つまり<code>urllib.request.Request()</code>の<code>data</code>に指定する引数は<code>bytes</code>型である必要があります。要するに<code>str</code>ではだめで、<code>encode()</code>|などを使って変換してやる必要があります。\n\n<ul>\n<li>レスポンスの結果を取得する<code>http.client.HTTPResponse#read()</code>の戻り値も<code>bytes</code>型なので、<code>str</code>に変換する場合は<code>decode()</code>などを利用します。</li>\n</ul>\n</li>\n<li>\n<code>json.dupms()</code>はPythonオブジェクトをjson文字列(<code>str</code>)に変換してくれます。<code>json.dump()</code>という似たような名前のメソッドもありますが、これは別物です。\n\n<ul>\n<li>同様に<code>json.loads()</code>と<code>json.load()</code>も別物です。</li>\n</ul>\n</li>\n<li>\n<code>urllib.request.urlopen()</code>の戻り値は<code>http.client.HTTPResponse</code>です。</li>\n</ul>\n","body":"ちょっとしたPython3スクリプトでjsonをPOSTしたいということがよくあると思います(適当)。\n\nまずはサンプルコード。\n\n```py3\nimport urllib.request, json\n\nif __name__ == '__main__':\n    url = \"http://xxxx/xxxx\" \n    method = \"POST\"\n    headers = {\"Content-Type\" : \"application/json\"}\n\n    # PythonオブジェクトをJSONに変換する\n    obj = {\"xxx\" : \"xxxx\", 123 : 123} \n    json_data = json.dumps(obj).encode(\"utf-8\")\n\n    # httpリクエストを準備してPOST\n    request = urllib.request.Request(url, data=json_data, method=method, headers=headers)\n    with urllib.request.urlopen(request) as response:\n        response_body = response.read().decode(\"utf-8\")\n```\n\n次に簡単な実例として[「ニコニコ動画 『スナップショット検索API』」](search.nicovideo.jp/docs/api/snapshot.html)を利用して、「結月ゆかり」の検索結果のうち、再生数が多い30個の動画を取得してみたいと思います。\n\n```py3\nimport urllib.request, json\n\nif __name__ == '__main__':\n    url = \"http://api.search.nicovideo.jp/api/snapshot/\"\n    method = \"POST\"\n    obj = {\n        \"query\" : \"結月ゆかり\",\n        \"service\" : [\"video\"],\n        \"search\" : [\"title\", \"description\", \"tags\"],\n        \"join\" : [\"title\", \"view_counter\"],\n        \"sort_by\" : \"view_counter\",\n        \"order\" : \"desc\",\n        \"size\" : 30,\n        \"issuer\" : \"xxxxxxxxxxxxxxxxxxxxx\"\n    }\n    json_data = json.dumps(obj).encode(\"utf-8\")\n    headers = {\"Content-Type\" : \"application/json\"}\n\n    request = urllib.request.Request(url, data=json_data, headers=headers, method=method)\n    with urllib.request.urlopen(request) as response:\n        response_body = response.read().decode(\"utf-8\")\n        \n        result_objs = json.loads(response_body.split('\\n')[0])\n        for result_obj in result_objs[\"values\"]:\n            print(\"{0:<10}{1}\".format(result_obj[\"view_counter\"], result_obj[\"title\"]))\n\n# 2903887   【初音ミク】こちら、幸福安心委員会です。【オリジナル】\n# 2331059   みwなwぎwっwてwきwたwww（篠笛禁断症状L5）\n# 1979283   【Minecraft】ゲリラクラフト 周囲に防衛線を築き地雷を張り巡らせるんだ#1\n# 1896978   【Minecraft】ゲリラクラフト 周囲に防衛線を築き地雷を張り巡らせるんだ#5\n# 1805589   【Minecraft】ゆかり「メイジタワー爆破しましょう」part1【VOICEROID+実況】\n# 1662622   【結月ゆかり】名前のない怪物を歌ってもらった【PSYCHO-PASS】\n# 1617931   【Minecraft】ゲリラクラフト 周囲に防衛線を築き地雷を張り巡らせるんだ#3\n# 1587257   【初音ミク】永遠に幸せになる方法、見つけました。【オリジナル】\n# 1531263   【結月ゆかり】幸せになれる隠しコマンドがあるらしい【オリジナル】\n# 1499237   【Minecraft】ゲリラクラフト 周囲に防衛線を築き地雷を張り巡らせるんだ#2\n# 1424024   【結月ゆかりの】チュルリラ・チュルリラ・ダッダッダ！\n# 1391173   【Minecraft】ゲリラクラフト 周囲に防衛線を築き地雷を張り巡らせるんだ#7\n# 1356847   【Minecraft】ゲリラクラフト 周囲に防衛線を築き地雷を張り巡らせるんだ#6\n# 1354592   【Minecraft】ゆかり「メイジタワー爆破しましょう」part3【VOICEROID+実況】\n# 1261669   【Minecraft】ゆかり「メイジタワー爆破しましょう」part2【VOICEROID+実況】\n# 1241053   【Minecraft】ゲリラクラフト 周囲に防衛線を築き地雷を張り巡らせるんだ#8\n# 1223469   【Minecraft】ゲリラクラフト 周囲に防衛線を築き地雷を張り巡らせるんだ#4\n# 1201715   【Minecraft】ゆかり「メイジタワー爆破しましょう」part4【VOICEROID+実況】\n# 1182955   【Minecraft】ゲリラクラフト 周囲に防衛線を築き地雷を張り巡らせるんだ#9\n# 1177519   【Minecraft】ゆかり「メイジタワー爆破しましょう」part9【VOICEROID+実況】\n# 1069852   【MAYU】一途な片思い、実らせたい小さな幸せ。【オリジナル】\n# 1045793   【Minecraft】ゲリラクラフト 周囲に防衛線を築き地雷を張り巡らせるんだ⑩\n# 1040149   【Minecraft】ゆかり「メイジタワー爆破しましょう」part5【VOICEROID+実況】\n# 1008825   【Minecraft】ゆかり「メイジタワー爆破しましょう」part6【VOICEROID+実況】\n# 993675    【結月ゆかりの】サヨナラチェーンソー\n# 963262    【Minecraft】ゆかり「メイジタワー爆破しましょう」part7【VOICEROID+実況】\n# 927444    【Minecraft】ゆかり「メイジタワー爆破しましょう」part8【VOICEROID+実況】\n# 895328    【Minecraft】ゲリラクラフト 周囲に防衛線を築き地雷を張り巡らせるんだ⑫\n# 892567    【Minecraft】ゆかり「メイジタワー爆破しましょう」最終回【VOICEROID+実況】\n# 878046    【Minecraft】ゲリラクラフト 周囲に防衛線を築き地雷を張り巡らせるんだ⑪\n```\n\nいくつか注意点があるので、それも簡単に紹介しておきますね。\n\n- POSTするデータ、つまり`urllib.request.Request()`の`data`に指定する引数は`bytes`型である必要があります。要するに`str`ではだめで、`encode()`|などを使って変換してやる必要があります。\n    - レスポンスの結果を取得する`http.client.HTTPResponse#read()`の戻り値も`bytes`型なので、`str`に変換する場合は`decode()`などを利用します。\n- `json.dupms()`はPythonオブジェクトをjson文字列(`str`)に変換してくれます。`json.dump()`という似たような名前のメソッドもありますが、これは別物です。\n    - 同様に`json.loads()`と`json.load()`も別物です。\n- `urllib.request.urlopen()`の戻り値は`http.client.HTTPResponse`です。\n","coediting":false,"comments_count":0,"created_at":"2016-07-28T21:03:11+09:00","group":null,"id":"324976c7b54623e82b26","likes_count":87,"private":false,"reactions_count":0,"tags":[{"name":"Python","versions":[]},{"name":"Python3","versions":[]}],"title":"Python3のスクリプトでjsonをPOSTする","updated_at":"2016-07-28T21:03:11+09:00","url":"https://qiita.com/neko_the_shadow/items/324976c7b54623e82b26","user":{"description":"IT業界の片隅でひっそり生きるシステムエンジニアです(´・ω・｀)","facebook_id":"","followees_count":0,"followers_count":35,"github_login_name":null,"id":"neko_the_shadow","items_count":186,"linkedin_id":"","location":"神奈川県川崎市","name":"","organization":"","permanent_id":105859,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/105859/profile-images/1473709753","team_only":false,"twitter_screen_name":"neko_the_shadow","website_url":"https://nekotheshadow.github.io/"},"page_views_count":null,"team_membership":null}