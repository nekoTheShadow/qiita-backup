{"rendered_body":"\n<h1>\n<span id=\"関数を評価した後の値が欲しい\" class=\"fragment\"></span><a href=\"#%E9%96%A2%E6%95%B0%E3%82%92%E8%A9%95%E4%BE%A1%E3%81%97%E3%81%9F%E5%BE%8C%E3%81%AE%E5%80%A4%E3%81%8C%E6%AC%B2%E3%81%97%E3%81%84\"><i class=\"fa fa-link\"></i></a>関数を評価した後の値が欲しい</h1>\n\n<p>Apache POIでセルの値を取得する際、「セルに関数が含まれている場合は関数を評価した後の値が欲しい」とします。書き方はいろいろあるのですが、おおよそ以下のようにすればよいです。</p>\n\n<div class=\"code-frame\" data-lang=\"java\"><div class=\"highlight\"><pre><code><span class=\"c1\">// WorkBookオブジェクトからFormulaEvaluatorを生成する。</span>\n<span class=\"nc\">FormulaEvaluator</span> <span class=\"n\">formulaEvaluator</span> <span class=\"o\">=</span> <span class=\"n\">book</span><span class=\"o\">.</span><span class=\"na\">getCreationHelper</span><span class=\"o\">().</span><span class=\"na\">createFormulaEvaluator</span><span class=\"o\">();</span>\n\n<span class=\"c1\">// CellのCellTypeを取得する。Cellが関数を含む場合は関数の評価後のCellTypeを取得する。</span>\n<span class=\"nc\">CellType</span> <span class=\"n\">cellType</span> <span class=\"o\">=</span> <span class=\"o\">(</span><span class=\"n\">cell</span><span class=\"o\">.</span><span class=\"na\">getCellType</span><span class=\"o\">()</span> <span class=\"o\">==</span> <span class=\"nc\">CellType</span><span class=\"o\">.</span><span class=\"na\">FORMULA</span><span class=\"o\">)</span> <span class=\"o\">?</span> <span class=\"n\">formulaEvaluator</span><span class=\"o\">.</span><span class=\"na\">evaluateFormulaCell</span><span class=\"o\">(</span><span class=\"n\">cell</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">cell</span><span class=\"o\">.</span><span class=\"na\">getCellType</span><span class=\"o\">();</span>\n\n<span class=\"c1\">// CellTypeにあわせて値を取得する。ここではサンプルとして文字列型を取得している。</span>\n<span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">cellType</span> <span class=\"o\">==</span> <span class=\"nc\">CellType</span><span class=\"o\">.</span><span class=\"na\">STRING</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n    <span class=\"nc\">String</span> <span class=\"n\">stringCellValue</span> <span class=\"o\">=</span> <span class=\"n\">cell</span><span class=\"o\">.</span><span class=\"na\">getStringCellValue</span><span class=\"o\">();</span>\n    <span class=\"n\">doSomething</span><span class=\"o\">(</span><span class=\"n\">stringCellValue</span><span class=\"o\">);</span>\n<span class=\"o\">}</span>\n</code></pre></div></div>\n\n<h1>\n<span id=\"関数を評価する前の値が欲しい--関数そのものが欲しい\" class=\"fragment\"></span><a href=\"#%E9%96%A2%E6%95%B0%E3%82%92%E8%A9%95%E4%BE%A1%E3%81%99%E3%82%8B%E5%89%8D%E3%81%AE%E5%80%A4%E3%81%8C%E6%AC%B2%E3%81%97%E3%81%84--%E9%96%A2%E6%95%B0%E3%81%9D%E3%81%AE%E3%82%82%E3%81%AE%E3%81%8C%E6%AC%B2%E3%81%97%E3%81%84\"><i class=\"fa fa-link\"></i></a>関数を評価する前の値が欲しい / 関数そのものが欲しい</h1>\n\n<p>上とは違って、セルに含まれている関数そのものが欲しい場合は、<code>Cell::getCellFormula</code>を利用します。</p>\n\n<div class=\"code-frame\" data-lang=\"java\"><div class=\"highlight\"><pre><code><span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">cell</span><span class=\"o\">.</span><span class=\"na\">getCellType</span><span class=\"o\">()</span> <span class=\"o\">==</span> <span class=\"nc\">CellType</span><span class=\"o\">.</span><span class=\"na\">FORMULA</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n    <span class=\"nc\">String</span> <span class=\"n\">cellFormula</span> <span class=\"o\">=</span> <span class=\"n\">cell</span><span class=\"o\">.</span><span class=\"na\">getCellFormula</span><span class=\"o\">();</span>\n    <span class=\"n\">doSomething</span><span class=\"o\">(</span><span class=\"n\">cellFormula</span><span class=\"o\">);</span>\n<span class=\"o\">}</span>\n</code></pre></div></div>\n\n<h1>\n<span id=\"動作確認環境-pomxmlより抜粋\" class=\"fragment\"></span><a href=\"#%E5%8B%95%E4%BD%9C%E7%A2%BA%E8%AA%8D%E7%92%B0%E5%A2%83-pomxml%E3%82%88%E3%82%8A%E6%8A%9C%E7%B2%8B\"><i class=\"fa fa-link\"></i></a>動作確認環境 (pom.xmlより抜粋)</h1>\n\n<div class=\"code-frame\" data-lang=\"xml\"><div class=\"highlight\"><pre><code><span class=\"c\">&lt;!-- https://mvnrepository.com/artifact/org.apache.poi/poi --&gt;</span>\n<span class=\"nt\">&lt;dependency&gt;</span>\n    <span class=\"nt\">&lt;groupId&gt;</span>org.apache.poi<span class=\"nt\">&lt;/groupId&gt;</span>\n    <span class=\"nt\">&lt;artifactId&gt;</span>poi<span class=\"nt\">&lt;/artifactId&gt;</span>\n    <span class=\"nt\">&lt;version&gt;</span>5.0.0<span class=\"nt\">&lt;/version&gt;</span>\n<span class=\"nt\">&lt;/dependency&gt;</span>\n<span class=\"c\">&lt;!-- https://mvnrepository.com/artifact/org.apache.poi/poi-ooxml --&gt;</span>\n<span class=\"nt\">&lt;dependency&gt;</span>\n    <span class=\"nt\">&lt;groupId&gt;</span>org.apache.poi<span class=\"nt\">&lt;/groupId&gt;</span>\n    <span class=\"nt\">&lt;artifactId&gt;</span>poi-ooxml<span class=\"nt\">&lt;/artifactId&gt;</span>\n    <span class=\"nt\">&lt;version&gt;</span>5.0.0<span class=\"nt\">&lt;/version&gt;</span>\n<span class=\"nt\">&lt;/dependency&gt;</span>\n</code></pre></div></div>\n","body":"# 関数を評価した後の値が欲しい\n\nApache POIでセルの値を取得する際、「セルに関数が含まれている場合は関数を評価した後の値が欲しい」とします。書き方はいろいろあるのですが、おおよそ以下のようにすればよいです。\n\n```java\n// WorkBookオブジェクトからFormulaEvaluatorを生成する。\nFormulaEvaluator formulaEvaluator = book.getCreationHelper().createFormulaEvaluator();\n\n// CellのCellTypeを取得する。Cellが関数を含む場合は関数の評価後のCellTypeを取得する。\nCellType cellType = (cell.getCellType() == CellType.FORMULA) ? formulaEvaluator.evaluateFormulaCell(cell) : cell.getCellType();\n\n// CellTypeにあわせて値を取得する。ここではサンプルとして文字列型を取得している。\nif (cellType == CellType.STRING) {\n    String stringCellValue = cell.getStringCellValue();\n    doSomething(stringCellValue);\n}\n```\n\n# 関数を評価する前の値が欲しい / 関数そのものが欲しい\n\n上とは違って、セルに含まれている関数そのものが欲しい場合は、`Cell::getCellFormula`を利用します。\n\n```java\nif (cell.getCellType() == CellType.FORMULA) {\n    String cellFormula = cell.getCellFormula();\n    doSomething(cellFormula);\n}\n```\n\n# 動作確認環境 (pom.xmlより抜粋)\n\n```xml\n<!-- https://mvnrepository.com/artifact/org.apache.poi/poi -->\n<dependency>\n    <groupId>org.apache.poi</groupId>\n    <artifactId>poi</artifactId>\n    <version>5.0.0</version>\n</dependency>\n<!-- https://mvnrepository.com/artifact/org.apache.poi/poi-ooxml -->\n<dependency>\n    <groupId>org.apache.poi</groupId>\n    <artifactId>poi-ooxml</artifactId>\n    <version>5.0.0</version>\n</dependency>\n```\n\n","coediting":false,"comments_count":0,"created_at":"2021-05-16T17:30:21+09:00","group":null,"id":"92c1d73c157a724d18bd","likes_count":1,"private":false,"reactions_count":0,"tags":[{"name":"Java","versions":[]},{"name":"POI","versions":[]}],"title":"関数を評価する前もしくは評価した後のセルの値が欲しい","updated_at":"2021-05-16T17:30:21+09:00","url":"https://qiita.com/neko_the_shadow/items/92c1d73c157a724d18bd","user":{"description":"IT業界の片隅でひっそり生きるシステムエンジニアです(´・ω・｀)","facebook_id":"","followees_count":0,"followers_count":36,"github_login_name":null,"id":"neko_the_shadow","items_count":198,"linkedin_id":"","location":"神奈川県川崎市","name":"","organization":"","permanent_id":105859,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/105859/profile-images/1473709753","team_only":false,"twitter_screen_name":"neko_the_shadow","website_url":"https://nekotheshadow.github.io/"},"page_views_count":null,"team_membership":null}