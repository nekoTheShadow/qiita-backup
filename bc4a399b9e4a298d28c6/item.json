{"rendered_body":"<p>Python3で整数型の最大値は<code>sys.maxsize</code>として定義されています(URL: <a href=\"https://docs.python.jp/3/library/sys.html#sys.maxsize\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">https://docs.python.jp/3/library/sys.html#sys.maxsize</a> )。たとえばC言語風のforループがサポートされている言語で、以下のように書く処理があるとします。</p>\n\n<div class=\"code-frame\" data-lang=\"java\"><div class=\"highlight\"><pre><code><span class=\"k\">for</span> <span class=\"o\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"o\">;</span> <span class=\"o\">;</span> <span class=\"n\">i</span><span class=\"o\">++)</span> <span class=\"o\">{</span>\n    <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">isOK</span><span class=\"o\">(</span><span class=\"n\">i</span><span class=\"o\">))</span> <span class=\"o\">{</span>\n        <span class=\"k\">break</span><span class=\"o\">;</span>\n    <span class=\"o\">}</span>\n    <span class=\"n\">do_someting</span><span class=\"o\">(</span><span class=\"n\">i</span><span class=\"o\">);</span>\n<span class=\"o\">}</span>\n</code></pre></div></div>\n\n<p>これと同じ処理をPython3で実装する、かつ<code>for</code>と<code>range</code>を利用する場合は、以下のようになるはずです。</p>\n\n<div class=\"code-frame\" data-lang=\"python\"><div class=\"highlight\"><pre><code><span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">sys</span><span class=\"p\">.</span><span class=\"n\">maxsize</span><span class=\"p\">):</span>\n    <span class=\"k\">if</span> <span class=\"n\">is_ok</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">):</span>\n        <span class=\"k\">break</span>\n    <span class=\"n\">do_something</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span>\n</code></pre></div></div>\n\n<p><code>sys.maxsize</code>を利用しない場合は次のような書き方になりますが、<strong>iのインクリメント(<code>i += 1</code>)を忘れて大変な目にあいがち</strong>なので、個人的には好きではありません(´・ω・｀)</p>\n\n<div class=\"code-frame\" data-lang=\"python\"><div class=\"highlight\"><pre><code><span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"k\">while</span> <span class=\"ow\">not</span> <span class=\"n\">is_ok</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">):</span>\n    <span class=\"n\">do_something</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span>\n    <span class=\"n\">i</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n</code></pre></div></div>\n\n<hr>\n\n<p>わたしの思いつく限り、Python3でよく利用される数値型としては以下のものがあげられます。</p>\n\n<ul>\n<li><code>float</code></li>\n<li><code>decimal.Decimal</code></li>\n<li><code>fractions.Fraction</code></li>\n</ul>\n\n<p><code>float</code>と<code>Decimal</code>については「無限大」がサポートされています。「最大値」も取得できなくはないようですが、基本的には「無限大」で事足りるように思います。</p>\n\n<div class=\"code-frame\" data-lang=\"python\"><div class=\"highlight\"><pre><code><span class=\"kn\">import</span> <span class=\"nn\">decimal</span>\n\n<span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"s\">'inf'</span><span class=\"p\">)</span>\n<span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"s\">'infinity'</span><span class=\"p\">)</span>\n<span class=\"n\">decimal</span><span class=\"p\">.</span><span class=\"n\">Decimal</span><span class=\"p\">(</span><span class=\"s\">'inf'</span><span class=\"p\">)</span>\n<span class=\"n\">decimal</span><span class=\"p\">.</span><span class=\"n\">Decimal</span><span class=\"p\">(</span><span class=\"s\">'infinity'</span><span class=\"p\">)</span>\n</code></pre></div></div>\n\n<p><code>fraction.Fractions</code>は有理数を扱うクラスです。その性質から「最大値」や「無限大」という概念はサポート外になっているようです(´・ω・｀)</p>\n","body":"Python3で整数型の最大値は`sys.maxsize`として定義されています(URL: https://docs.python.jp/3/library/sys.html#sys.maxsize )。たとえばC言語風のforループがサポートされている言語で、以下のように書く処理があるとします。\n\n```java\nfor (int i = 1; ; i++) {\n    if (isOK(i)) {\n        break;\n    }\n    do_someting(i);\n}\n```\n\nこれと同じ処理をPython3で実装する、かつ`for`と`range`を利用する場合は、以下のようになるはずです。\n\n```python\nimport sys\n\nfor i in range(1, sys.maxsize):\n    if is_ok(i):\n        break\n    do_something(i)\n```\n\n`sys.maxsize`を利用しない場合は次のような書き方になりますが、__iのインクリメント(`i += 1`)を忘れて大変な目にあいがち__なので、個人的には好きではありません(´・ω・｀)\n\n```python\ni = 1\nwhile not is_ok(i):\n    do_something(i)\n    i += 1\n```\n\n***\n\nわたしの思いつく限り、Python3でよく利用される数値型としては以下のものがあげられます。\n\n- `float`\n- `decimal.Decimal`\n- `fractions.Fraction`\n\n`float`と`Decimal`については「無限大」がサポートされています。「最大値」も取得できなくはないようですが、基本的には「無限大」で事足りるように思います。\n\n```python\nimport decimal\n\nfloat('inf')\nfloat('infinity')\ndecimal.Decimal('inf')\ndecimal.Decimal('infinity')\n```\n\n`fraction.Fractions`は有理数を扱うクラスです。その性質から「最大値」や「無限大」という概念はサポート外になっているようです(´・ω・｀)\n","coediting":false,"comments_count":2,"created_at":"2018-03-04T23:36:31+09:00","group":null,"id":"bc4a399b9e4a298d28c6","likes_count":8,"private":false,"reactions_count":0,"tags":[{"name":"Python","versions":[]},{"name":"Python3","versions":[]}],"title":"Python3で整数の最大値や小数の無限大を扱いたい","updated_at":"2018-03-04T23:45:29+09:00","url":"https://qiita.com/neko_the_shadow/items/bc4a399b9e4a298d28c6","user":{"description":"IT業界の片隅でひっそり生きるシステムエンジニアです(´・ω・｀)","facebook_id":"","followees_count":0,"followers_count":36,"github_login_name":null,"id":"neko_the_shadow","items_count":199,"linkedin_id":"","location":"神奈川県川崎市","name":"","organization":"","permanent_id":105859,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/105859/profile-images/1473709753","team_only":false,"twitter_screen_name":"neko_the_shadow","website_url":"https://nekotheshadow.github.io/"},"page_views_count":null,"team_membership":null}