{"rendered_body":"\n<h1>\n<span id=\"1-javautilloggingconfigfileを利用する\" class=\"fragment\"></span><a href=\"#1-javautilloggingconfigfile%E3%82%92%E5%88%A9%E7%94%A8%E3%81%99%E3%82%8B\"><i class=\"fa fa-link\"></i></a>1. java.util.logging.config.fileを利用する</h1>\n\n<p>Doma2ではログ出力にJDBCLoggerインターフェースを利用し、その実装の一例として<code>UtilLoggingJdbcLogger</code>が提供されています。この<code>UtilLoggingJdbcLogger</code>はログ出力にJUL(<code>java.util.logging</code>)を採用しているため、ログ出力に関する設定はシステムプロパティ<code>java.util.logging.config.file</code>が利用できます。</p>\n\n<div class=\"code-frame\" data-lang=\"properties\">\n<div class=\"code-lang\"><span class=\"bold\">logging.properties</span></div>\n<div class=\"highlight\"><pre><code><span class=\"py\">handlers</span><span class=\"p\">=</span> <span class=\"s\">java.util.logging.ConsoleHandler, java.util.logging.FileHandler</span>\n\n<span class=\"py\">java.util.logging.FileHandler.level</span> <span class=\"p\">=</span> <span class=\"s\">INFO</span>\n<span class=\"py\">java.util.logging.FileHandler.pattern</span> <span class=\"p\">=</span> <span class=\"s\">logging_by_propertiesfile.log</span>\n<span class=\"py\">java.util.logging.FileHandler.formatter</span> <span class=\"p\">=</span> <span class=\"s\">java.util.logging.SimpleFormatter</span>\n\n<span class=\"py\">java.util.logging.ConsoleHandler.level</span> <span class=\"p\">=</span> <span class=\"s\">INFO</span>\n<span class=\"py\">java.util.logging.ConsoleHandler.formatter</span> <span class=\"p\">=</span> <span class=\"s\">java.util.logging.SimpleFormatter</span>\n</code></pre></div>\n</div>\n\n<p>たとえば上記のような<code>logging.properties</code>があって、これを<code>UtilLoggingJdbcLogger</code>の設定としたい場合、<code>-Djava.util.logging.config.file=\\path\\to\\logging.properties</code>とすればよいです。</p>\n\n<h1>\n<span id=\"2-javautilloggingconfigfileを利用する\" class=\"fragment\"></span><a href=\"#2-javautilloggingconfigfile%E3%82%92%E5%88%A9%E7%94%A8%E3%81%99%E3%82%8B\"><i class=\"fa fa-link\"></i></a>2. java.util.logging.config.fileを利用する</h1>\n\n<p>システムプロパティファイルを使わず、自分で<code>UtilLoggingJdbcLogger</code>を拡張することもできます。</p>\n\n<p>まず<code>UtilLoggingJdbcLogger</code>を継承したクラスを作成します。このときログ出力の設定は<code>super.logger</code> (JULのインスタンス) に対して実施します。</p>\n\n<div class=\"code-frame\" data-lang=\"java\">\n<div class=\"code-lang\"><span class=\"bold\">MyUtilLoggingJdbcLogger.java</span></div>\n<div class=\"highlight\"><pre><code><span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">MyUtilLoggingJdbcLogger</span> <span class=\"kd\">extends</span> <span class=\"nc\">UtilLoggingJdbcLogger</span> <span class=\"o\">{</span>\n    <span class=\"kd\">public</span> <span class=\"nf\">MyUtilLoggingJdbcLogger</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n        <span class=\"k\">try</span> <span class=\"o\">{</span>\n            <span class=\"nc\">Formatter</span> <span class=\"n\">formatter</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nc\">SimpleFormatter</span><span class=\"o\">();</span>\n\n            <span class=\"nc\">Handler</span> <span class=\"n\">consoleHandler</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nc\">ConsoleHandler</span><span class=\"o\">();</span>\n            <span class=\"n\">consoleHandler</span><span class=\"o\">.</span><span class=\"na\">setFormatter</span><span class=\"o\">(</span><span class=\"n\">formatter</span><span class=\"o\">);</span>\n            <span class=\"n\">consoleHandler</span><span class=\"o\">.</span><span class=\"na\">setLevel</span><span class=\"o\">(</span><span class=\"nc\">Level</span><span class=\"o\">.</span><span class=\"na\">INFO</span><span class=\"o\">);</span>\n\n            <span class=\"nc\">Handler</span> <span class=\"n\">fileHandler</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nc\">FileHandler</span><span class=\"o\">(</span><span class=\"s\">\"logging_by_class.log\"</span><span class=\"o\">);</span>\n            <span class=\"n\">fileHandler</span><span class=\"o\">.</span><span class=\"na\">setFormatter</span><span class=\"o\">(</span><span class=\"n\">formatter</span><span class=\"o\">);</span>\n            <span class=\"n\">fileHandler</span><span class=\"o\">.</span><span class=\"na\">setLevel</span><span class=\"o\">(</span><span class=\"nc\">Level</span><span class=\"o\">.</span><span class=\"na\">INFO</span><span class=\"o\">);</span>\n\n            <span class=\"kd\">super</span><span class=\"o\">.</span><span class=\"na\">logger</span><span class=\"o\">.</span><span class=\"na\">addHandler</span><span class=\"o\">(</span><span class=\"n\">consoleHandler</span><span class=\"o\">);</span>\n            <span class=\"kd\">super</span><span class=\"o\">.</span><span class=\"na\">logger</span><span class=\"o\">.</span><span class=\"na\">addHandler</span><span class=\"o\">(</span><span class=\"n\">fileHandler</span><span class=\"o\">);</span>\n        <span class=\"o\">}</span> <span class=\"k\">catch</span> <span class=\"o\">(</span><span class=\"nc\">SecurityException</span> <span class=\"o\">|</span> <span class=\"nc\">IOException</span> <span class=\"n\">e</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n            <span class=\"n\">e</span><span class=\"o\">.</span><span class=\"na\">printStackTrace</span><span class=\"o\">();</span>\n        <span class=\"o\">}</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">}</span>\n</code></pre></div>\n</div>\n\n<p>あとはDoma2のConfigクラスに作成した<code>MyUtilLoggingJdbcLogger</code>を使うよう設定します。具体的には<code>getJdbcLogger</code>メソッドをオーバライドして、<code>MyUtilLoggingJdbcLogger</code>インスタンスを戻り値とするだけです。</p>\n\n<div class=\"code-frame\" data-lang=\"java\">\n<div class=\"code-lang\"><span class=\"bold\">AppConfig.java</span></div>\n<div class=\"highlight\"><pre><code><span class=\"nd\">@SingletonConfig</span>\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">AppConfig</span> <span class=\"kd\">implements</span> <span class=\"nc\">Config</span> <span class=\"o\">{</span>\n    <span class=\"kd\">private</span> <span class=\"kd\">final</span> <span class=\"nc\">JdbcLogger</span> <span class=\"n\">logger</span><span class=\"o\">;</span>\n\n    <span class=\"kd\">private</span> <span class=\"nf\">AppConfig</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n        <span class=\"n\">logger</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nc\">MyUtilLoggingJdbcLogger</span><span class=\"o\">();</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"nd\">@Override</span>\n    <span class=\"kd\">public</span> <span class=\"nc\">JdbcLogger</span> <span class=\"nf\">getJdbcLogger</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n        <span class=\"k\">return</span> <span class=\"n\">logger</span><span class=\"o\">;</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">}</span>\n\n</code></pre></div>\n</div>\n\n<h1>\n<span id=\"環境情報\" class=\"fragment\"></span><a href=\"#%E7%92%B0%E5%A2%83%E6%83%85%E5%A0%B1\"><i class=\"fa fa-link\"></i></a>環境情報</h1>\n\n<ul>\n<li>java: openjdk version \"11.0.3\" 2019-04-16</li>\n<li>doma: 2.42.0</li>\n</ul>\n","body":"# 1. java.util.logging.config.fileを利用する\n\nDoma2ではログ出力にJDBCLoggerインターフェースを利用し、その実装の一例として`UtilLoggingJdbcLogger`が提供されています。この`UtilLoggingJdbcLogger`はログ出力にJUL(`java.util.logging`)を採用しているため、ログ出力に関する設定はシステムプロパティ`java.util.logging.config.file`が利用できます。\n\n```properties:logging.properties\nhandlers= java.util.logging.ConsoleHandler, java.util.logging.FileHandler\n\njava.util.logging.FileHandler.level = INFO\njava.util.logging.FileHandler.pattern = logging_by_propertiesfile.log\njava.util.logging.FileHandler.formatter = java.util.logging.SimpleFormatter\n\njava.util.logging.ConsoleHandler.level = INFO\njava.util.logging.ConsoleHandler.formatter = java.util.logging.SimpleFormatter\n```\n\nたとえば上記のような`logging.properties`があって、これを`UtilLoggingJdbcLogger`の設定としたい場合、`-Djava.util.logging.config.file=\\path\\to\\logging.properties`とすればよいです。\n\n# 2. java.util.logging.config.fileを利用する\n\nシステムプロパティファイルを使わず、自分で`UtilLoggingJdbcLogger`を拡張することもできます。\n\nまず`UtilLoggingJdbcLogger`を継承したクラスを作成します。このときログ出力の設定は`super.logger` (JULのインスタンス) に対して実施します。\n\n```java:MyUtilLoggingJdbcLogger.java\npublic class MyUtilLoggingJdbcLogger extends UtilLoggingJdbcLogger {\n    public MyUtilLoggingJdbcLogger() {\n        try {\n            Formatter formatter = new SimpleFormatter();\n\n            Handler consoleHandler = new ConsoleHandler();\n            consoleHandler.setFormatter(formatter);\n            consoleHandler.setLevel(Level.INFO);\n\n            Handler fileHandler = new FileHandler(\"logging_by_class.log\");\n            fileHandler.setFormatter(formatter);\n            fileHandler.setLevel(Level.INFO);\n\n            super.logger.addHandler(consoleHandler);\n            super.logger.addHandler(fileHandler);\n        } catch (SecurityException | IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n```\n\nあとはDoma2のConfigクラスに作成した`MyUtilLoggingJdbcLogger`を使うよう設定します。具体的には`getJdbcLogger`メソッドをオーバライドして、`MyUtilLoggingJdbcLogger`インスタンスを戻り値とするだけです。\n\n```java:AppConfig.java\n@SingletonConfig\npublic class AppConfig implements Config {\n    private final JdbcLogger logger;\n\n    private AppConfig() {\n        logger = new MyUtilLoggingJdbcLogger();\n    }\n\n    @Override\n    public JdbcLogger getJdbcLogger() {\n        return logger;\n    }\n}\n\n```\n\n# 環境情報\n\n- java: openjdk version \"11.0.3\" 2019-04-16\n- doma: 2.42.0\n","coediting":false,"comments_count":0,"created_at":"2020-11-07T17:49:08+09:00","group":null,"id":"5d2189340f26c25b1eed","likes_count":0,"private":false,"reactions_count":0,"tags":[{"name":"Java","versions":[]},{"name":"doma2","versions":[]}],"title":"UtilLoggingJdbcLoggerのログ出力設定を変更したい","updated_at":"2020-11-07T18:03:59+09:00","url":"https://qiita.com/neko_the_shadow/items/5d2189340f26c25b1eed","user":{"description":"IT業界の片隅でひっそり生きるシステムエンジニアです(´・ω・｀)","facebook_id":"","followees_count":0,"followers_count":36,"github_login_name":null,"id":"neko_the_shadow","items_count":197,"linkedin_id":"","location":"神奈川県川崎市","name":"","organization":"","permanent_id":105859,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/105859/profile-images/1473709753","team_only":false,"twitter_screen_name":"neko_the_shadow","website_url":"https://nekotheshadow.github.io/"},"page_views_count":null,"team_membership":null}