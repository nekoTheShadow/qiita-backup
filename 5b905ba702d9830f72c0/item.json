{"rendered_body":"<p>以下のクエリはPostgreSQLで動作確認を行っています。</p>\n\n<div class=\"code-frame\" data-lang=\"sql\"><div class=\"highlight\"><pre><code><span class=\"n\">postgres</span><span class=\"o\">=#</span> <span class=\"k\">select</span> <span class=\"k\">version</span><span class=\"p\">();</span>\n                           <span class=\"k\">version</span>\n<span class=\"c1\">-------------------------------------------------------------</span>\n <span class=\"n\">PostgreSQL</span> <span class=\"mi\">9</span><span class=\"p\">.</span><span class=\"mi\">6</span><span class=\"p\">.</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">compiled</span> <span class=\"k\">by</span> <span class=\"n\">Visual</span> <span class=\"k\">C</span><span class=\"o\">++</span> <span class=\"n\">build</span> <span class=\"mi\">1800</span><span class=\"p\">,</span> <span class=\"mi\">64</span><span class=\"o\">-</span><span class=\"nb\">bit</span>\n<span class=\"p\">(</span><span class=\"mi\">1</span> <span class=\"err\">行</span><span class=\"p\">)</span>\n</code></pre></div></div>\n\n<hr>\n\n<p>再帰呼び出しの課題としてよく利用されるのが<a href=\"https://ja.wikipedia.org/wiki/%E3%83%95%E3%82%A3%E3%83%9C%E3%83%8A%E3%83%83%E3%83%81%E6%95%B0\" rel=\"nofollow noopener\" target=\"_blank\">フィボナッチ数列</a>。DBMSにもよりますが、SQLでも再帰呼び出し(再帰クエリ)はサポートされているので、SQLでフィボナッチ数列を書いてみました。</p>\n\n<div class=\"code-frame\" data-lang=\"sql\"><div class=\"highlight\"><pre><code><span class=\"k\">with</span> <span class=\"k\">recursive</span> <span class=\"n\">fib</span> <span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"p\">(</span>\n        <span class=\"k\">select</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"k\">cast</span><span class=\"p\">(</span><span class=\"mi\">0</span> <span class=\"k\">as</span> <span class=\"nb\">decimal</span><span class=\"p\">),</span> <span class=\"k\">cast</span><span class=\"p\">(</span><span class=\"mi\">1</span> <span class=\"k\">as</span> <span class=\"nb\">decimal</span><span class=\"p\">)</span> \n    <span class=\"k\">union</span> <span class=\"k\">all</span>\n        <span class=\"k\">select</span> <span class=\"n\">x</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">,</span> <span class=\"n\">a</span> <span class=\"o\">+</span> <span class=\"n\">b</span> <span class=\"k\">from</span> <span class=\"n\">fib</span> <span class=\"k\">where</span> <span class=\"n\">x</span> <span class=\"o\">&lt;</span> <span class=\"mi\">100</span>\n<span class=\"p\">)</span> <span class=\"k\">select</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">a</span> <span class=\"k\">from</span> <span class=\"n\">fib</span><span class=\"p\">;</span>\n\n<span class=\"cm\">/*\n  x  |           a\n-----+-----------------------\n   0 |                     0\n   1 |                     1\n   2 |                     1\n   3 |                     2\n   4 |                     3\n   5 |                     5\n   6 |                     8\n   7 |                    13\n   8 |                    21\n   9 |                    34\n  10 |                    55\n  11 |                    89\n  12 |                   144\n  13 |                   233\n  14 |                   377\n  15 |                   610\n  16 |                   987\n  17 |                  1597\n  18 |                  2584\n  19 |                  4181\n  20 |                  6765\n  21 |                 10946\n  22 |                 17711\n  23 |                 28657\n  24 |                 46368\n  25 |                 75025\n  26 |                121393\n  27 |                196418\n  28 |                317811\n  29 |                514229\n  30 |                832040\n  31 |               1346269\n  32 |               2178309\n  33 |               3524578\n  34 |               5702887\n  35 |               9227465\n  36 |              14930352\n  37 |              24157817\n  38 |              39088169\n  39 |              63245986\n  40 |             102334155\n  41 |             165580141\n  42 |             267914296\n  43 |             433494437\n  44 |             701408733\n  45 |            1134903170\n  46 |            1836311903\n  47 |            2971215073\n  48 |            4807526976\n  49 |            7778742049\n  50 |           12586269025\n  51 |           20365011074\n  52 |           32951280099\n  53 |           53316291173\n  54 |           86267571272\n  55 |          139583862445\n  56 |          225851433717\n  57 |          365435296162\n  58 |          591286729879\n  59 |          956722026041\n  60 |         1548008755920\n  61 |         2504730781961\n  62 |         4052739537881\n  63 |         6557470319842\n  64 |        10610209857723\n  65 |        17167680177565\n  66 |        27777890035288\n  67 |        44945570212853\n  68 |        72723460248141\n  69 |       117669030460994\n  70 |       190392490709135\n  71 |       308061521170129\n  72 |       498454011879264\n  73 |       806515533049393\n  74 |      1304969544928657\n  75 |      2111485077978050\n  76 |      3416454622906707\n  77 |      5527939700884757\n  78 |      8944394323791464\n  79 |     14472334024676221\n  80 |     23416728348467685\n  81 |     37889062373143906\n  82 |     61305790721611591\n  83 |     99194853094755497\n  84 |    160500643816367088\n  85 |    259695496911122585\n  86 |    420196140727489673\n  87 |    679891637638612258\n  88 |   1100087778366101931\n  89 |   1779979416004714189\n  90 |   2880067194370816120\n  91 |   4660046610375530309\n  92 |   7540113804746346429\n  93 |  12200160415121876738\n  94 |  19740274219868223167\n  95 |  31940434634990099905\n  96 |  51680708854858323072\n  97 |  83621143489848422977\n  98 | 135301852344706746049\n  99 | 218922995834555169026\n 100 | 354224848179261915075\n*/</span>\n</code></pre></div></div>\n\n<p>フィボナッチ数列はその性質上、爆発的に大きくなるため、<code>integer</code>ではあっという間に桁あふれを起こします。つまり最初に<code>decimal</code>へ型変換を行い、桁あふれを防いでいるというわけですね。</p>\n","body":"\n以下のクエリはPostgreSQLで動作確認を行っています。\n\n```sql\npostgres=# select version();\n                           version\n-------------------------------------------------------------\n PostgreSQL 9.6.1, compiled by Visual C++ build 1800, 64-bit\n(1 行)\n```\n\n***\n\n再帰呼び出しの課題としてよく利用されるのが[フィボナッチ数列](https://ja.wikipedia.org/wiki/%E3%83%95%E3%82%A3%E3%83%9C%E3%83%8A%E3%83%83%E3%83%81%E6%95%B0)。DBMSにもよりますが、SQLでも再帰呼び出し(再帰クエリ)はサポートされているので、SQLでフィボナッチ数列を書いてみました。\n\n```sql\nwith recursive fib (x, a, b) as (\n        select 0, cast(0 as decimal), cast(1 as decimal) \n    union all\n        select x + 1, b, a + b from fib where x < 100\n) select x, a from fib;\n\n/*\n  x  |           a\n-----+-----------------------\n   0 |                     0\n   1 |                     1\n   2 |                     1\n   3 |                     2\n   4 |                     3\n   5 |                     5\n   6 |                     8\n   7 |                    13\n   8 |                    21\n   9 |                    34\n  10 |                    55\n  11 |                    89\n  12 |                   144\n  13 |                   233\n  14 |                   377\n  15 |                   610\n  16 |                   987\n  17 |                  1597\n  18 |                  2584\n  19 |                  4181\n  20 |                  6765\n  21 |                 10946\n  22 |                 17711\n  23 |                 28657\n  24 |                 46368\n  25 |                 75025\n  26 |                121393\n  27 |                196418\n  28 |                317811\n  29 |                514229\n  30 |                832040\n  31 |               1346269\n  32 |               2178309\n  33 |               3524578\n  34 |               5702887\n  35 |               9227465\n  36 |              14930352\n  37 |              24157817\n  38 |              39088169\n  39 |              63245986\n  40 |             102334155\n  41 |             165580141\n  42 |             267914296\n  43 |             433494437\n  44 |             701408733\n  45 |            1134903170\n  46 |            1836311903\n  47 |            2971215073\n  48 |            4807526976\n  49 |            7778742049\n  50 |           12586269025\n  51 |           20365011074\n  52 |           32951280099\n  53 |           53316291173\n  54 |           86267571272\n  55 |          139583862445\n  56 |          225851433717\n  57 |          365435296162\n  58 |          591286729879\n  59 |          956722026041\n  60 |         1548008755920\n  61 |         2504730781961\n  62 |         4052739537881\n  63 |         6557470319842\n  64 |        10610209857723\n  65 |        17167680177565\n  66 |        27777890035288\n  67 |        44945570212853\n  68 |        72723460248141\n  69 |       117669030460994\n  70 |       190392490709135\n  71 |       308061521170129\n  72 |       498454011879264\n  73 |       806515533049393\n  74 |      1304969544928657\n  75 |      2111485077978050\n  76 |      3416454622906707\n  77 |      5527939700884757\n  78 |      8944394323791464\n  79 |     14472334024676221\n  80 |     23416728348467685\n  81 |     37889062373143906\n  82 |     61305790721611591\n  83 |     99194853094755497\n  84 |    160500643816367088\n  85 |    259695496911122585\n  86 |    420196140727489673\n  87 |    679891637638612258\n  88 |   1100087778366101931\n  89 |   1779979416004714189\n  90 |   2880067194370816120\n  91 |   4660046610375530309\n  92 |   7540113804746346429\n  93 |  12200160415121876738\n  94 |  19740274219868223167\n  95 |  31940434634990099905\n  96 |  51680708854858323072\n  97 |  83621143489848422977\n  98 | 135301852344706746049\n  99 | 218922995834555169026\n 100 | 354224848179261915075\n*/\n```\n\nフィボナッチ数列はその性質上、爆発的に大きくなるため、`integer`ではあっという間に桁あふれを起こします。つまり最初に`decimal`へ型変換を行い、桁あふれを防いでいるというわけですね。\n","coediting":false,"comments_count":0,"created_at":"2017-01-19T00:40:36+09:00","group":null,"id":"5b905ba702d9830f72c0","likes_count":8,"private":false,"reactions_count":0,"stocks_count":1,"tags":[{"name":"SQL","versions":[]},{"name":"PostgreSQL","versions":[]}],"title":"SQLでフィボナッチ数列を書いた","updated_at":"2017-01-19T00:41:03+09:00","url":"https://qiita.com/neko_the_shadow/items/5b905ba702d9830f72c0","user":{"description":"IT業界の片隅でひっそり生きるシステムエンジニアです(´・ω・｀)","facebook_id":"","followees_count":0,"followers_count":37,"github_login_name":null,"id":"neko_the_shadow","items_count":216,"linkedin_id":"","location":"神奈川県川崎市","name":"","organization":"","permanent_id":105859,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/105859/profile-images/1473709753","team_only":false,"twitter_screen_name":"neko_the_shadow","website_url":"https://github.com/nekoTheShadow"},"page_views_count":2593,"team_membership":null,"organization_url_name":null,"slide":false}