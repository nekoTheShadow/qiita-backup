{"rendered_body":"<p>正の整数が格納された配列があり、その最小値を求めることを考えます。まずawk厨のわたしとしては、awkを利用する方法が思いつきます。</p>\n\n<div class=\"code-frame\" data-lang=\"bash\"><div class=\"highlight\"><pre><code><span class=\"nv\">numbers</span><span class=\"o\">=(</span>34 65 112 98 11<span class=\"o\">)</span>\n<span class=\"nb\">echo</span> <span class=\"k\">${</span><span class=\"nv\">numbers</span><span class=\"p\">[@]</span><span class=\"k\">}</span> | <span class=\"nb\">awk</span> <span class=\"s1\">'{\n    min = $1\n    for(i = 2; i &lt;= NF; i++) min = $i &lt; min ? $i : min;\n    print min\n}'</span>\n\n<span class=\"c\">#=&gt; 11</span>\n</code></pre></div></div>\n\n<p>この書き方のよいところは<strong>「配列を先頭からなめていき、最小値を見つけるたびに更新する」という処理の中身が見えやすい</strong>ところでしょうか。フローの見えやすさは応用のしやすさにもつながります。ただしやや冗長なのは欠点でしょう。</p>\n\n<p>次に<code>sort</code>コマンドを利用する場合は以下のようになります。</p>\n\n<div class=\"code-frame\" data-lang=\"bash\"><div class=\"highlight\"><pre><code><span class=\"nv\">numbers</span><span class=\"o\">=(</span>34 65 112 98 11<span class=\"o\">)</span>\n<span class=\"k\">for </span>number <span class=\"k\">in</span> <span class=\"k\">${</span><span class=\"nv\">numbers</span><span class=\"p\">[@]</span><span class=\"k\">}</span><span class=\"p\">;</span> <span class=\"k\">do\n    </span><span class=\"nb\">echo</span> <span class=\"nv\">$number</span>\n<span class=\"k\">done</span> | <span class=\"nb\">sort</span> <span class=\"nt\">-n</span> | <span class=\"nb\">head</span> <span class=\"nt\">-n</span> 1\n\n<span class=\"c\"># =&gt; 11</span>\n</code></pre></div></div>\n\n<p><strong>空白区切りの数字を改行区切りに並び替えたあと、昇順に並び替え、最後にその先頭だけを取り出しています。</strong>最初の例に比べるとシェルスクリプト感はぐっと強くなりますが、冗長さはあまり変わっていません。awkに依存しないため、awkを可能な限り避けたい人にはお勧めです。</p>\n\n<p>なお上記の例において「空白区切りの数字を改行区切りに並べ替え」る処理をawkに担わせることもできます。</p>\n\n<div class=\"code-frame\" data-lang=\"bash\"><div class=\"highlight\"><pre><code><span class=\"nv\">numbers</span><span class=\"o\">=(</span>34 65 112 98 11<span class=\"o\">)</span>\n<span class=\"nb\">echo</span> <span class=\"k\">${</span><span class=\"nv\">numbers</span><span class=\"p\">[@]</span><span class=\"k\">}</span> | <span class=\"nb\">awk</span> <span class=\"s1\">'{while(++i &lt;= NF) print $i;}'</span> | <span class=\"nb\">sort</span> <span class=\"nt\">-n</span> | <span class=\"nb\">head</span> <span class=\"nt\">-n</span> 1\n\n<span class=\"c\">#=&gt; 11</span>\n</code></pre></div></div>\n\n<p>可読性はかなり悪くなりますが、全体としてはかなり短くなります。一行野郎も満足できるはず(´・ω・`)</p>\n","body":"\n正の整数が格納された配列があり、その最小値を求めることを考えます。まずawk厨のわたしとしては、awkを利用する方法が思いつきます。\n\n```bash\nnumbers=(34 65 112 98 11)\necho ${numbers[@]} | awk '{\n\tmin = $1\n\tfor(i = 2; i <= NF; i++) min = $i < min ? $i : min;\n\tprint min\n}'\n\n#=> 11\n```\n\nこの書き方のよいところは__「配列を先頭からなめていき、最小値を見つけるたびに更新する」という処理の中身が見えやすい__ところでしょうか。フローの見えやすさは応用のしやすさにもつながります。ただしやや冗長なのは欠点でしょう。\n\n次に`sort`コマンドを利用する場合は以下のようになります。\n\n```bash\nnumbers=(34 65 112 98 11)\nfor number in ${numbers[@]}; do\n\techo $number\ndone | sort -n | head -n 1\n\n# => 11\n```\n\n__空白区切りの数字を改行区切りに並び替えたあと、昇順に並び替え、最後にその先頭だけを取り出しています。__最初の例に比べるとシェルスクリプト感はぐっと強くなりますが、冗長さはあまり変わっていません。awkに依存しないため、awkを可能な限り避けたい人にはお勧めです。\n\nなお上記の例において「空白区切りの数字を改行区切りに並べ替え」る処理をawkに担わせることもできます。\n\n```bash\nnumbers=(34 65 112 98 11)\necho ${numbers[@]} | awk '{while(++i <= NF) print $i;}' | sort -n | head -n 1\n\n#=> 11\n```\n\n可読性はかなり悪くなりますが、全体としてはかなり短くなります。一行野郎も満足できるはず(´・ω・`)\n","coediting":false,"comments_count":1,"created_at":"2016-12-07T00:25:19+09:00","group":null,"id":"0ab9fc8bbe8dacd4bddf","likes_count":7,"private":false,"reactions_count":0,"stocks_count":7,"tags":[{"name":"ShellScript","versions":[]},{"name":"Bash","versions":[]},{"name":"AWK","versions":[]}],"title":"配列の最小値を求める","updated_at":"2016-12-07T00:25:19+09:00","url":"https://qiita.com/neko_the_shadow/items/0ab9fc8bbe8dacd4bddf","user":{"description":"IT業界の片隅でひっそり生きるシステムエンジニアです(´・ω・｀)","facebook_id":"","followees_count":0,"followers_count":38,"github_login_name":"nekoTheShadow","id":"neko_the_shadow","items_count":224,"linkedin_id":"","location":"神奈川県川崎市","name":"","organization":"","permanent_id":105859,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/105859/profile-images/1473709753","team_only":false,"twitter_screen_name":"neko_the_shadow","website_url":"https://github.com/nekoTheShadow"},"page_views_count":8906,"team_membership":null,"organization_url_name":null,"slide":false}