{"rendered_body":"<p>完全に自分用の技術メモ(´・ω・｀) </p>\n\n<p><a href=\"https://unofficial-google-music-api.readthedocs.io/en/latest/\" rel=\"nofollow noopener\" target=\"_blank\">gmusicapi</a>はPythonからGoogle Play Musicを操作するGoogle非公認のライブラリです。Google Play Musicを操作するにあたっては認証が不可欠なのですが、その認証APIがやや複雑というか、少なくとも自分は時間を溶かしたので、サンプルを供養がてらQiitaに残しておきたいと思います。<strong>ちなみに稼働を確認した環境については、Pythonのバージョンは3.7、gmusicapiのバージョンは12.1.1になります。</strong></p>\n\n<div class=\"code-frame\" data-lang=\"python\"><div class=\"highlight\"><pre><code><span class=\"kn\">import</span> <span class=\"nn\">gmusicapi</span>\n\n<span class=\"c1\"># 前提: このファイルは初回起動時には存在しない。\n</span><span class=\"n\">CREDENTIAL_FILE</span> <span class=\"o\">=</span> <span class=\"s\">'/path/to/mobileclient.cred'</span>\n\n<span class=\"n\">api</span> <span class=\"o\">=</span> <span class=\"n\">gmusicapi</span><span class=\"p\">.</span><span class=\"n\">Mobileclient</span><span class=\"p\">()</span>\n<span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">os</span><span class=\"p\">.</span><span class=\"n\">path</span><span class=\"p\">.</span><span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"n\">CREDENTIAL_FILE</span><span class=\"p\">):</span>\n    <span class=\"n\">api</span><span class=\"p\">.</span><span class=\"n\">perform_oauth</span><span class=\"p\">(</span><span class=\"n\">CREDENTIAL_FILE</span><span class=\"p\">)</span>\n<span class=\"n\">api</span><span class=\"p\">.</span><span class=\"n\">oauth_login</span><span class=\"p\">(</span><span class=\"n\">gmusicapi</span><span class=\"p\">.</span><span class=\"n\">Mobileclient</span><span class=\"p\">.</span><span class=\"n\">FROM_MAC_ADDRESS</span><span class=\"p\">,</span> <span class=\"n\">CREDENTIAL_FILE</span><span class=\"p\">)</span>\n</code></pre></div></div>\n\n<h1>\n<span id=\"初回起動時に必要な作業について\" class=\"fragment\"></span><a href=\"#%E5%88%9D%E5%9B%9E%E8%B5%B7%E5%8B%95%E6%99%82%E3%81%AB%E5%BF%85%E8%A6%81%E3%81%AA%E4%BD%9C%E6%A5%AD%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6\"><i class=\"fa fa-link\"></i></a>初回起動時に必要な作業について</h1>\n\n<p>初回起動時、すなわち<code>CREDENTIAL_FILE</code>が存在しない場合、次のようなメッセージがコンソール(標準出力)に表示されると思います (セキュリティ上の関係から、一部マスキングしています)</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>Visit the following url:\n https://accounts.google.com/o/oauth2/v2/auth?client_id=XXX&amp;redirect_uri=XXX&amp;scope=XXX&amp;access_type=offline&amp;response_type=code\nFollow the prompts, then paste the auth code here and hit enter: \n</code></pre></div></div>\n\n<p>このURLではアクセスコードの発行を行います。ブラウザを起動し、処理を進めていくと、最終的に以下のような画面でアクセスコードが発行されます。このトークン文字列をコピーして、先ほどのコンソールに入力すると、処理が先に進んでいくはずです。</p>\n\n<p><a href=\"https://camo.qiitausercontent.com/6188b1701bc97fc55fbdbfef71a03323074b4042/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3130353835392f65323136343531622d376164612d363731622d326432312d3230326261646461356461612e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F105859%2Fe216451b-7ada-671b-2d21-202badda5daa.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=877df6867ebcccdb72888c0f30452a57\" alt=\"image.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/105859/e216451b-7ada-671b-2d21-202badda5daa.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F105859%2Fe216451b-7ada-671b-2d21-202badda5daa.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=af2ef9c480c60a449a88a6851d22ad29 1x\" loading=\"lazy\"></a></p>\n\n<h1>\n<span id=\"解説\" class=\"fragment\"></span><a href=\"#%E8%A7%A3%E8%AA%AC\"><i class=\"fa fa-link\"></i></a>解説</h1>\n\n<p>初回起動時、つまり<code>CREDENTIAL_FILE</code>が存在しない状態で、サンプルを実行すると、<code>api.perform_oauth</code>が実行されます。上記の対話型メッセージを出力しているのがこのAPIで、標準入力経由でアクセスコードを受け取ると、第1引数のファイル(ここでは<code>CREDENTIAL_FILE</code>)に情報を記録します。</p>\n\n<p><code>api.oauth_login</code>は第2引数のファイル(ここでは<code>CREDENTIAL_FILE</code>)から情報を受け取り、認証を実施します。初回起動以降、つまり<code>CREDENTIAL_FILE</code>が存在する状態では、<code>api.perform_oauth</code>は実行されず、<code>api.oauth_login</code>が直接実行されますが、認証情報は初回起動時に<code>CREDENTIAL_FILE</code>に記録済み。したがって、初回起動以降は、上述したようなブラウザ作業を実施する必要はありません。</p>\n","body":"完全に自分用の技術メモ(´・ω・｀) \n\n[gmusicapi](https://unofficial-google-music-api.readthedocs.io/en/latest/)はPythonからGoogle Play Musicを操作するGoogle非公認のライブラリです。Google Play Musicを操作するにあたっては認証が不可欠なのですが、その認証APIがやや複雑というか、少なくとも自分は時間を溶かしたので、サンプルを供養がてらQiitaに残しておきたいと思います。__ちなみに稼働を確認した環境については、Pythonのバージョンは3.7、gmusicapiのバージョンは12.1.1になります。__\n\n```python\nimport gmusicapi\n\n# 前提: このファイルは初回起動時には存在しない。\nCREDENTIAL_FILE = '/path/to/mobileclient.cred'\n\napi = gmusicapi.Mobileclient()\nif not os.path.exists(CREDENTIAL_FILE):\n    api.perform_oauth(CREDENTIAL_FILE)\napi.oauth_login(gmusicapi.Mobileclient.FROM_MAC_ADDRESS, CREDENTIAL_FILE)\n```\n\n# 初回起動時に必要な作業について\n\n初回起動時、すなわち`CREDENTIAL_FILE`が存在しない場合、次のようなメッセージがコンソール(標準出力)に表示されると思います (セキュリティ上の関係から、一部マスキングしています)\n\n```\nVisit the following url:\n https://accounts.google.com/o/oauth2/v2/auth?client_id=XXX&redirect_uri=XXX&scope=XXX&access_type=offline&response_type=code\nFollow the prompts, then paste the auth code here and hit enter: \n```\n\nこのURLではアクセスコードの発行を行います。ブラウザを起動し、処理を進めていくと、最終的に以下のような画面でアクセスコードが発行されます。このトークン文字列をコピーして、先ほどのコンソールに入力すると、処理が先に進んでいくはずです。\n\n![image.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/105859/e216451b-7ada-671b-2d21-202badda5daa.png)\n\n# 解説\n\n初回起動時、つまり`CREDENTIAL_FILE`が存在しない状態で、サンプルを実行すると、`api.perform_oauth`が実行されます。上記の対話型メッセージを出力しているのがこのAPIで、標準入力経由でアクセスコードを受け取ると、第1引数のファイル(ここでは`CREDENTIAL_FILE`)に情報を記録します。\n\n`api.oauth_login`は第2引数のファイル(ここでは`CREDENTIAL_FILE`)から情報を受け取り、認証を実施します。初回起動以降、つまり`CREDENTIAL_FILE`が存在する状態では、`api.perform_oauth`は実行されず、`api.oauth_login`が直接実行されますが、認証情報は初回起動時に`CREDENTIAL_FILE`に記録済み。したがって、初回起動以降は、上述したようなブラウザ作業を実施する必要はありません。\n","coediting":false,"comments_count":0,"created_at":"2019-12-01T23:25:37+09:00","group":null,"id":"2ab0e7137bf703ff0d21","likes_count":1,"private":false,"reactions_count":0,"stocks_count":0,"tags":[{"name":"Python3","versions":[]},{"name":"gmusicapi","versions":[]}],"title":"gmusicapiの認証サンプル","updated_at":"2019-12-01T23:25:37+09:00","url":"https://qiita.com/neko_the_shadow/items/2ab0e7137bf703ff0d21","user":{"description":"IT業界の片隅でひっそり生きるシステムエンジニアです(´・ω・｀)","facebook_id":"","followees_count":0,"followers_count":35,"github_login_name":null,"id":"neko_the_shadow","items_count":210,"linkedin_id":"","location":"神奈川県川崎市","name":"","organization":"","permanent_id":105859,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/105859/profile-images/1473709753","team_only":false,"twitter_screen_name":"neko_the_shadow","website_url":"https://nekotheshadow.github.io/"},"page_views_count":890,"team_membership":null,"organization_url_name":null}