{"rendered_body":"<p><code>time.Time</code>型のSliceを昇順ソートするにはどのようにすればよいでしょうか? </p>\n\n<p><strong>まずGoのバージョンが1.8以降の場合は<code>sort.Slice</code>を使うのがもっとも簡単です。</strong></p>\n\n<div class=\"code-frame\" data-lang=\"go\">\n<div class=\"code-lang\"><span class=\"bold\">main.go</span></div>\n<div class=\"highlight\"><pre><code><span class=\"k\">package</span> <span class=\"n\">main</span>\n\n<span class=\"k\">import</span> <span class=\"p\">(</span>\n    <span class=\"s\">\"sort\"</span>\n    <span class=\"s\">\"time\"</span>\n    <span class=\"s\">\"fmt\"</span>\n<span class=\"p\">)</span>\n\n<span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"n\">times</span> <span class=\"o\">:=</span> <span class=\"p\">[]</span><span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Time</span><span class=\"p\">{</span>\n        <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Date</span><span class=\"p\">(</span><span class=\"m\">2020</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"m\">4</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Local</span><span class=\"p\">),</span>\n        <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Date</span><span class=\"p\">(</span><span class=\"m\">2020</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Local</span><span class=\"p\">),</span>\n        <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Date</span><span class=\"p\">(</span><span class=\"m\">2020</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"m\">5</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Local</span><span class=\"p\">),</span>\n        <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Date</span><span class=\"p\">(</span><span class=\"m\">2020</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"m\">2</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Local</span><span class=\"p\">),</span>\n        <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Date</span><span class=\"p\">(</span><span class=\"m\">2020</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Local</span><span class=\"p\">),</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"n\">sort</span><span class=\"o\">.</span><span class=\"n\">Slice</span><span class=\"p\">(</span><span class=\"n\">times</span><span class=\"p\">,</span> <span class=\"k\">func</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span> <span class=\"kt\">int</span><span class=\"p\">)</span> <span class=\"kt\">bool</span> <span class=\"p\">{</span>\n        <span class=\"k\">return</span> <span class=\"n\">times</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">Before</span><span class=\"p\">(</span><span class=\"n\">times</span><span class=\"p\">[</span><span class=\"n\">j</span><span class=\"p\">])</span>\n    <span class=\"p\">})</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">t</span> <span class=\"o\">:=</span> <span class=\"k\">range</span> <span class=\"n\">times</span> <span class=\"p\">{</span>\n        <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n</div>\n\n<p>これを実行すると、確かに昇順ソートできていることが確認できます。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>$ go run main.go\n2020-01-01 00:00:00 +0900 JST\n2020-01-02 00:00:00 +0900 JST\n2020-01-03 00:00:00 +0900 JST\n2020-01-04 00:00:00 +0900 JST\n2020-01-05 00:00:00 +0900 JST\n</code></pre></div></div>\n\n<p><strong>ただし、お使いのGoのバージョンが1.8未満の場合は、<code>sort.Slice</code>は利用できません。すこしまどろっこしいのですが、この場合は<code>sort.Interface</code>を実装した型を利用する必要があります。</strong></p>\n\n<p>サンプルコードは次の通りです。</p>\n\n<div class=\"code-frame\" data-lang=\"go\">\n<div class=\"code-lang\"><span class=\"bold\">main.go</span></div>\n<div class=\"highlight\"><pre><code><span class=\"k\">package</span> <span class=\"n\">main</span>\n\n<span class=\"k\">import</span> <span class=\"p\">(</span>\n    <span class=\"s\">\"fmt\"</span>\n    <span class=\"s\">\"sort\"</span>\n    <span class=\"s\">\"time\"</span>\n<span class=\"p\">)</span>\n\n<span class=\"k\">type</span> <span class=\"n\">Times</span> <span class=\"p\">[]</span><span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Time</span>\n\n<span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"n\">t</span> <span class=\"n\">Times</span><span class=\"p\">)</span> <span class=\"n\">Len</span><span class=\"p\">()</span> <span class=\"kt\">int</span> <span class=\"p\">{</span>\n    <span class=\"k\">return</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"n\">t</span> <span class=\"n\">Times</span><span class=\"p\">)</span> <span class=\"n\">Less</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span> <span class=\"kt\">int</span><span class=\"p\">)</span> <span class=\"kt\">bool</span> <span class=\"p\">{</span>\n    <span class=\"k\">return</span> <span class=\"n\">t</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">Before</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">[</span><span class=\"n\">j</span><span class=\"p\">])</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"n\">t</span> <span class=\"n\">Times</span><span class=\"p\">)</span> <span class=\"n\">Swap</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span> <span class=\"kt\">int</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"n\">t</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">],</span> <span class=\"n\">t</span><span class=\"p\">[</span><span class=\"n\">j</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">t</span><span class=\"p\">[</span><span class=\"n\">j</span><span class=\"p\">],</span> <span class=\"n\">t</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"n\">times</span> <span class=\"o\">:=</span> <span class=\"p\">[]</span><span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Time</span><span class=\"p\">{</span>\n        <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Date</span><span class=\"p\">(</span><span class=\"m\">2020</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"m\">4</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Local</span><span class=\"p\">),</span>\n        <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Date</span><span class=\"p\">(</span><span class=\"m\">2020</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Local</span><span class=\"p\">),</span>\n        <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Date</span><span class=\"p\">(</span><span class=\"m\">2020</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"m\">5</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Local</span><span class=\"p\">),</span>\n        <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Date</span><span class=\"p\">(</span><span class=\"m\">2020</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"m\">2</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Local</span><span class=\"p\">),</span>\n        <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Date</span><span class=\"p\">(</span><span class=\"m\">2020</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">Local</span><span class=\"p\">),</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"n\">sort</span><span class=\"o\">.</span><span class=\"n\">Sort</span><span class=\"p\">(</span><span class=\"n\">Times</span><span class=\"p\">(</span><span class=\"n\">times</span><span class=\"p\">))</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">t</span> <span class=\"o\">:=</span> <span class=\"k\">range</span> <span class=\"n\">times</span> <span class=\"p\">{</span>\n        <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Println</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n</div>\n\n<p>これを実行すると、<code>sort.Slice</code>と同じように昇順ソートされていることがわかります。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>$ go run main.go\n2020-01-01 00:00:00 +0900 JST\n2020-01-02 00:00:00 +0900 JST\n2020-01-03 00:00:00 +0900 JST\n2020-01-04 00:00:00 +0900 JST\n2020-01-05 00:00:00 +0900 JST\n</code></pre></div></div>\n","body":"`time.Time`型のSliceを昇順ソートするにはどのようにすればよいでしょうか? \n\n__まずGoのバージョンが1.8以降の場合は`sort.Slice`を使うのがもっとも簡単です。__\n\n```go:main.go\npackage main\n\nimport (\n\t\"sort\"\n\t\"time\"\n\t\"fmt\"\n)\n\nfunc main() {\n\ttimes := []time.Time{\n\t\ttime.Date(2020, 1, 4, 0, 0, 0, 0, time.Local),\n\t\ttime.Date(2020, 1, 1, 0, 0, 0, 0, time.Local),\n\t\ttime.Date(2020, 1, 5, 0, 0, 0, 0, time.Local),\n\t\ttime.Date(2020, 1, 2, 0, 0, 0, 0, time.Local),\n\t\ttime.Date(2020, 1, 3, 0, 0, 0, 0, time.Local),\n\t}\n\n\tsort.Slice(times, func(i, j int) bool {\n\t\treturn times[i].Before(times[j])\n\t})\n\n\tfor _, t := range times {\n\t\tfmt.Println(t)\n\t}\n}\n```\n\nこれを実行すると、確かに昇順ソートできていることが確認できます。\n\n```\n$ go run main.go\n2020-01-01 00:00:00 +0900 JST\n2020-01-02 00:00:00 +0900 JST\n2020-01-03 00:00:00 +0900 JST\n2020-01-04 00:00:00 +0900 JST\n2020-01-05 00:00:00 +0900 JST\n```\n\n__ただし、お使いのGoのバージョンが1.8未満の場合は、`sort.Slice`は利用できません。すこしまどろっこしいのですが、この場合は`sort.Interface`を実装した型を利用する必要があります。__\n\nサンプルコードは次の通りです。\n\n```go:main.go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"sort\"\n\t\"time\"\n)\n\ntype Times []time.Time\n\nfunc (t Times) Len() int {\n\treturn len(t)\n}\n\nfunc (t Times) Less(i, j int) bool {\n\treturn t[i].Before(t[j])\n}\n\nfunc (t Times) Swap(i, j int) {\n\tt[i], t[j] = t[j], t[i]\n}\n\nfunc main() {\n\ttimes := []time.Time{\n\t\ttime.Date(2020, 1, 4, 0, 0, 0, 0, time.Local),\n\t\ttime.Date(2020, 1, 1, 0, 0, 0, 0, time.Local),\n\t\ttime.Date(2020, 1, 5, 0, 0, 0, 0, time.Local),\n\t\ttime.Date(2020, 1, 2, 0, 0, 0, 0, time.Local),\n\t\ttime.Date(2020, 1, 3, 0, 0, 0, 0, time.Local),\n\t}\n\n\tsort.Sort(Times(times))\n\n\tfor _, t := range times {\n\t\tfmt.Println(t)\n\t}\n}\n```\n\nこれを実行すると、`sort.Slice`と同じように昇順ソートされていることがわかります。\n\n```\n$ go run main.go\n2020-01-01 00:00:00 +0900 JST\n2020-01-02 00:00:00 +0900 JST\n2020-01-03 00:00:00 +0900 JST\n2020-01-04 00:00:00 +0900 JST\n2020-01-05 00:00:00 +0900 JST\n```\n","coediting":false,"comments_count":0,"created_at":"2020-01-08T21:20:40+09:00","group":null,"id":"9dc6e479e76918e6f8a8","likes_count":1,"private":false,"reactions_count":0,"stocks_count":0,"tags":[{"name":"Go","versions":[]}],"title":"time.Time型のSliceを昇順ソートしたい","updated_at":"2020-01-08T21:20:40+09:00","url":"https://qiita.com/neko_the_shadow/items/9dc6e479e76918e6f8a8","user":{"description":"IT業界の片隅でひっそり生きるシステムエンジニアです(´・ω・｀)","facebook_id":"","followees_count":0,"followers_count":36,"github_login_name":null,"id":"neko_the_shadow","items_count":204,"linkedin_id":"","location":"神奈川県川崎市","name":"","organization":"","permanent_id":105859,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/105859/profile-images/1473709753","team_only":false,"twitter_screen_name":"neko_the_shadow","website_url":"https://nekotheshadow.github.io/"},"page_views_count":1340,"team_membership":null}