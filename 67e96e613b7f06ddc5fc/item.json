{"rendered_body":"<p><strong>元ネタ:</strong></p>\n\n<ul>\n<li><a href=\"https://qiita.com/higuyume/items/7d3c03ddbbd6f4ad7aa1\" id=\"reference-e63ac12b9ac9175f1bff\">ずんだの縦読み問題</a></li>\n<li><a href=\"https://qiita.com/tbpgr/items/90abccf8297be0e42f8c\" id=\"reference-f03c40d8a93362c8c0ce\">ずんだの縦読み問題 php編</a></li>\n</ul>\n\n<hr>\n\n<p>他言語ではヒアドキュメントなどと呼ばれる機能がJavaでは長らくサポートされておらず、ソースコード内に複数行にわたる文字列を記述したい場合</p>\n\n<ul>\n<li>ひたすら<code>+</code>で結合する。</li>\n<li>\n<code>String::join</code>を活用する。</li>\n<li>何かしらの外部ライブラリを使う</li>\n</ul>\n\n<p>などの対応を取る必要があり、コードをわかりづらくする原因になってきました。そういう批判・要望を受けてなのか、Project AmberではRaw String Literalという機能が提案されており、2018-09-28現在、JDK12のEarly-Access版に実装されています。</p>\n\n<p>Early-Accessといっても、試すにあたってはさほど難しい手順はなく、<a href=\"http://jdk.java.net/12/\" rel=\"nofollow noopener\" target=\"_blank\">JDK 12 Early-Access Builds</a>に用意されている、プラットフォームごとにビルドされたtar-ballを解凍するだけです。わたしはLinux用のtar-ballを利用しました。</p>\n\n<div class=\"code-frame\" data-lang=\"bash\"><div class=\"highlight\"><pre><code><span class=\"nb\">tar </span>xvf openjdk-12-ea+12_linux-x64_bin.tar.gz\n</code></pre></div></div>\n\n<p>すると<code>jdk-12</code>というディレクトリができるので、そのディレクトリと同じ階層に以下のような<code>Main.java</code>を用意します。</p>\n\n<div class=\"code-frame\" data-lang=\"java\">\n<div class=\"code-lang\"><span class=\"bold\">Main.java</span></div>\n<div class=\"highlight\"><pre><code><span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">Main</span> <span class=\"o\">{</span>\n    <span class=\"kd\">public</span> <span class=\"kd\">static</span> <span class=\"kt\">void</span> <span class=\"nf\">main</span><span class=\"o\">(</span><span class=\"nc\">String</span><span class=\"o\">[]</span> <span class=\"n\">args</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"kt\">var</span> <span class=\"n\">tweet</span> <span class=\"o\">=</span> <span class=\"err\">`</span>\n            <span class=\"n\">忙しくてついったいじれない</span>\n            <span class=\"n\">さみしい</span>\n            <span class=\"n\">つらい</span>\n        <span class=\"err\">`</span><span class=\"o\">;</span>\n        <span class=\"n\">tweet</span><span class=\"o\">.</span><span class=\"na\">align</span><span class=\"o\">().</span><span class=\"na\">lines</span><span class=\"o\">().</span><span class=\"na\">map</span><span class=\"o\">(</span><span class=\"n\">line</span> <span class=\"o\">-&gt;</span> <span class=\"n\">line</span><span class=\"o\">.</span><span class=\"na\">substring</span><span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"mi\">1</span><span class=\"o\">)).</span><span class=\"na\">forEach</span><span class=\"o\">(</span><span class=\"nc\">System</span><span class=\"o\">.</span><span class=\"na\">out</span><span class=\"o\">::</span><span class=\"n\">println</span><span class=\"o\">);</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">}</span>\n</code></pre></div>\n</div>\n\n<p>あとは以下の要領でコンパイルし、実行すると、想定通りの結果を得ることができました(´・ω・｀)</p>\n\n<div class=\"code-frame\" data-lang=\"bash\"><div class=\"highlight\"><pre><code><span class=\"nv\">$ </span>./jdk-12/bin/javac <span class=\"nt\">--enable-preview</span> <span class=\"nt\">--release</span> 12 Main.java\nNote: Main.java uses preview language features.\nNote: Recompile with <span class=\"nt\">-Xlint</span>:preview <span class=\"k\">for </span>details.\n<span class=\"nv\">$ </span>./jdk-12/bin/java <span class=\"nt\">--enable-preview</span> Main\n忙\nさ\nつ\n</code></pre></div></div>\n\n<p>なお詳細なバージョン情報は以下の通りでした。</p>\n\n<div class=\"code-frame\" data-lang=\"bash\"><div class=\"highlight\"><pre><code><span class=\"nv\">$ </span>./jdk-12/bin/java <span class=\"nt\">--version</span>\nopenjdk 12-ea 2019-03-19\nOpenJDK Runtime Environment 19.3 <span class=\"o\">(</span>build 12-ea+12<span class=\"o\">)</span>\nOpenJDK 64-Bit Server VM 19.3 <span class=\"o\">(</span>build 12-ea+12, mixed mode<span class=\"o\">)</span>\n</code></pre></div></div>\n\n<hr>\n\n<p><strong>参考:</strong></p>\n\n<ul>\n<li><a href=\"http://jdk.java.net/12/\" rel=\"nofollow noopener\" target=\"_blank\">JDK 12 Early-Access Builds</a></li>\n<li><a href=\"http://openjdk.java.net/jeps/326\" rel=\"nofollow noopener\" target=\"_blank\">JEP 326: Raw String Literals (Preview)</a></li>\n<li><a href=\"http://d.hatena.ne.jp/nowokay/20180926\" rel=\"nofollow noopener\" target=\"_blank\">Java11、JavaFX11リリース！Java12EAにはRSLが入った</a></li>\n</ul>\n","body":"__元ネタ:__\n\n- [ずんだの縦読み問題](https://qiita.com/higuyume/items/7d3c03ddbbd6f4ad7aa1)\n- [ずんだの縦読み問題 php編](https://qiita.com/tbpgr/items/90abccf8297be0e42f8c)\n\n*** \n\n他言語ではヒアドキュメントなどと呼ばれる機能がJavaでは長らくサポートされておらず、ソースコード内に複数行にわたる文字列を記述したい場合\n\n- ひたすら`+`で結合する。\n- `String::join`を活用する。\n- 何かしらの外部ライブラリを使う\n\nなどの対応を取る必要があり、コードをわかりづらくする原因になってきました。そういう批判・要望を受けてなのか、Project AmberではRaw String Literalという機能が提案されており、2018-09-28現在、JDK12のEarly-Access版に実装されています。\n\nEarly-Accessといっても、試すにあたってはさほど難しい手順はなく、[JDK 12 Early-Access Builds](http://jdk.java.net/12/)に用意されている、プラットフォームごとにビルドされたtar-ballを解凍するだけです。わたしはLinux用のtar-ballを利用しました。\n\n```bash\ntar xvf openjdk-12-ea+12_linux-x64_bin.tar.gz\n```\n\nすると`jdk-12`というディレクトリができるので、そのディレクトリと同じ階層に以下のような`Main.java`を用意します。\n\n```Main.java\npublic class Main {\n    public static void main(String[] args) {\n        var tweet = `\n            忙しくてついったいじれない\n            さみしい\n            つらい\n        `;\n        tweet.align().lines().map(line -> line.substring(0, 1)).forEach(System.out::println);\n    }\n}\n```\n\nあとは以下の要領でコンパイルし、実行すると、想定通りの結果を得ることができました(´・ω・｀)\n\n```bash\n$ ./jdk-12/bin/javac --enable-preview --release 12 Main.java\nNote: Main.java uses preview language features.\nNote: Recompile with -Xlint:preview for details.\n$ ./jdk-12/bin/java --enable-preview Main\n忙\nさ\nつ\n```\n\nなお詳細なバージョン情報は以下の通りでした。\n\n```bash\n$ ./jdk-12/bin/java --version\nopenjdk 12-ea 2019-03-19\nOpenJDK Runtime Environment 19.3 (build 12-ea+12)\nOpenJDK 64-Bit Server VM 19.3 (build 12-ea+12, mixed mode)\n```\n\n\n***\n\n__参考:__\n\n- [JDK 12 Early-Access Builds](http://jdk.java.net/12/)\n- [JEP 326: Raw String Literals (Preview)](http://openjdk.java.net/jeps/326)\n- [Java11、JavaFX11リリース！Java12EAにはRSLが入った](http://d.hatena.ne.jp/nowokay/20180926)\n","coediting":false,"comments_count":0,"created_at":"2018-09-28T00:39:09+09:00","group":null,"id":"67e96e613b7f06ddc5fc","likes_count":3,"private":false,"reactions_count":0,"stocks_count":0,"tags":[{"name":"Java","versions":[]}],"title":"ずんだの縦読み問題 Java 12 Early-Access 版","updated_at":"2018-09-28T00:46:30+09:00","url":"https://qiita.com/neko_the_shadow/items/67e96e613b7f06ddc5fc","user":{"description":"IT業界の片隅でひっそり生きるシステムエンジニアです(´・ω・｀)","facebook_id":"","followees_count":0,"followers_count":36,"github_login_name":null,"id":"neko_the_shadow","items_count":211,"linkedin_id":"","location":"神奈川県川崎市","name":"","organization":"","permanent_id":105859,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/105859/profile-images/1473709753","team_only":false,"twitter_screen_name":"neko_the_shadow","website_url":"https://github.com/nekoTheShadow"},"page_views_count":2494,"team_membership":null,"organization_url_name":null}