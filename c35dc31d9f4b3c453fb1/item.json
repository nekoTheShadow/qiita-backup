{"rendered_body":"<p>残業続きで眠いです……。誤字脱字は勘弁してね(´・ω・`)</p>\n\n<p>クライアントからPOSTされたJSONを受け取って、JSONを返すようなコントローラの開発中、POSTされるJSONを何かしらのBeanにマッピングさせ、かつBeanValidationを機能させたいとします。</p>\n\n<div class=\"code-frame\" data-lang=\"java\"><div class=\"highlight\"><pre><span class=\"nd\">@Controller</span>\n<span class=\"kd\">public</span> <span class=\"nc\">HogeController</span> <span class=\"o\">{</span>\n\n    <span class=\"nd\">@RequestMapping</span><span class=\"o\">(</span><span class=\"n\">path</span><span class=\"o\">=</span><span class=\"s\">\"/hoge\"</span><span class=\"o\">,</span> \n                    <span class=\"n\">method</span><span class=\"o\">=</span><span class=\"nc\">RequestMethod</span><span class=\"o\">.</span><span class=\"na\">POST</span><span class=\"o\">,</span>\n                    <span class=\"n\">consumes</span><span class=\"o\">=</span><span class=\"nc\">MediaType</span><span class=\"o\">.</span><span class=\"na\">APPLICATION_JSON_VALUE</span><span class=\"o\">)</span>\n    <span class=\"nd\">@ResponseBody</span>\n    <span class=\"kd\">public</span> <span class=\"nc\">Map</span><span class=\"o\">&lt;</span><span class=\"nc\">String</span><span class=\"o\">,</span> <span class=\"nc\">String</span><span class=\"o\">&gt;</span> <span class=\"nf\">hoge</span><span class=\"o\">(</span><span class=\"nd\">@RequestBody</span> <span class=\"nd\">@Valid</span> <span class=\"nc\">JsonBean</span> <span class=\"n\">jsonBean</span><span class=\"o\">)</span>\n        <span class=\"c1\">// do something</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">}</span>\n\n</pre></div></div>\n\n<p>このとき<code>JsonBean</code>に設定されたBean Validatorが機能して、JSONがBeanにマッピングされない場合、そのメソッドの中(上記の例では<code>hoge</code>メソッドの中)には入っていきません。つまりクライアント側にはJSONが返されず、次のようなエラーメッセージを持ったHTMLが返されてしまうのです。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>Error 400 The request sent by the client was syntactically incorrect\n</pre></div></div>\n\n<p>対処法としては<strong><code>MethodArgumentNotValidException</code>を受けるExceptionHandlerを設定する</strong>ことです。</p>\n\n<div class=\"code-frame\" data-lang=\"java\"><div class=\"highlight\"><pre>\n<span class=\"nd\">@Controller</span>\n<span class=\"kd\">public</span> <span class=\"nc\">HogeController</span> <span class=\"o\">{</span>\n\n    <span class=\"nd\">@RequestMapping</span><span class=\"o\">(</span><span class=\"n\">path</span><span class=\"o\">=</span><span class=\"s\">\"/hoge\"</span><span class=\"o\">,</span> \n                    <span class=\"n\">method</span><span class=\"o\">=</span><span class=\"nc\">RequestMethod</span><span class=\"o\">.</span><span class=\"na\">POST</span><span class=\"o\">,</span>\n                    <span class=\"n\">consumes</span><span class=\"o\">=</span><span class=\"nc\">MediaType</span><span class=\"o\">.</span><span class=\"na\">APPLICATION_JSON_VALUE</span><span class=\"o\">)</span>\n    <span class=\"nd\">@ResponseBody</span>\n    <span class=\"kd\">public</span> <span class=\"nc\">Map</span><span class=\"o\">&lt;</span><span class=\"nc\">String</span><span class=\"o\">,</span> <span class=\"nc\">String</span><span class=\"o\">&gt;</span> <span class=\"nf\">hoge</span><span class=\"o\">(</span><span class=\"nd\">@RequestBody</span> <span class=\"nd\">@Valid</span> <span class=\"nc\">JsonBean</span> <span class=\"n\">jsonBean</span><span class=\"o\">)</span>\n        <span class=\"c1\">// do something</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"nd\">@ExceptionHandler</span><span class=\"o\">(</span><span class=\"nc\">MethodArgumentNotValidException</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">)</span>\n    <span class=\"nd\">@ResponseBody</span>\n    <span class=\"kd\">public</span> <span class=\"nc\">Map</span><span class=\"o\">&lt;</span><span class=\"nc\">String</span><span class=\"o\">,</span> <span class=\"nc\">String</span><span class=\"o\">&gt;</span> <span class=\"nf\">hogeHandler</span><span class=\"o\">(</span><span class=\"nc\">MethodArgumentNotValidException</span> <span class=\"n\">e</span><span class=\"o\">){</span>\n        <span class=\"c1\">// do something</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">}</span>\n</pre></div></div>\n\n<p>こうすることにより、POSTされたJSONがBeanにマッピングされない場合は、<code>MethodArgumentNotValidException</code>を受けるExceptionHandler(上記の例では<code>hogeHandler</code>)が実行されます。つまりマッピングされない場合にクライアントに返したいJSONをこのExceptionHandlerの戻り値にしてやればよいということになります。</p>\n","body":"残業続きで眠いです……。誤字脱字は勘弁してね(´・ω・`)\n\nクライアントからPOSTされたJSONを受け取って、JSONを返すようなコントローラの開発中、POSTされるJSONを何かしらのBeanにマッピングさせ、かつBeanValidationを機能させたいとします。\n\n\n```java\n@Controller\npublic HogeController {\n\n    @RequestMapping(path=\"/hoge\", \n                    method=RequestMethod.POST,\n                    consumes=MediaType.APPLICATION_JSON_VALUE)\n    @ResponseBody\n    public Map<String, String> hoge(@RequestBody @Valid JsonBean jsonBean)\n        // do something\n    }\n}\n\n```\nこのとき`JsonBean`に設定されたBean Validatorが機能して、JSONがBeanにマッピングされない場合、そのメソッドの中(上記の例では`hoge`メソッドの中)には入っていきません。つまりクライアント側にはJSONが返されず、次のようなエラーメッセージを持ったHTMLが返されてしまうのです。\n\n```\nError 400 The request sent by the client was syntactically incorrect\n```\n\n対処法としては__`MethodArgumentNotValidException`を受けるExceptionHandlerを設定する__ことです。\n\n```java\n\n@Controller\npublic HogeController {\n\n    @RequestMapping(path=\"/hoge\", \n                    method=RequestMethod.POST,\n                    consumes=MediaType.APPLICATION_JSON_VALUE)\n    @ResponseBody\n    public Map<String, String> hoge(@RequestBody @Valid JsonBean jsonBean)\n        // do something\n    }\n\n    @ExceptionHandler(MethodArgumentNotValidException.class)\n    @ResponseBody\n    public Map<String, String> hogeHandler(MethodArgumentNotValidException e){\n        // do something\n    }\n}\n```\n\nこうすることにより、POSTされたJSONがBeanにマッピングされない場合は、`MethodArgumentNotValidException`を受けるExceptionHandler(上記の例では`hogeHandler`)が実行されます。つまりマッピングされない場合にクライアントに返したいJSONをこのExceptionHandlerの戻り値にしてやればよいということになります。\n\n\n\n","coediting":false,"comments_count":0,"created_at":"2016-09-10T23:39:03+09:00","group":null,"id":"c35dc31d9f4b3c453fb1","likes_count":2,"private":false,"reactions_count":0,"tags":[{"name":"Java","versions":[]},{"name":"spring","versions":[]}],"title":"@RequestBodyと@Validの両方を利用時に\"The request sent by the client was syntactically incorrect\"が出る","updated_at":"2016-09-10T23:39:03+09:00","url":"https://qiita.com/neko_the_shadow/items/c35dc31d9f4b3c453fb1","user":{"description":"IT業界の片隅でひっそり生きるシステムエンジニアです(´・ω・｀)","facebook_id":"","followees_count":0,"followers_count":35,"github_login_name":null,"id":"neko_the_shadow","items_count":178,"linkedin_id":"","location":"神奈川県川崎市","name":"","organization":"","permanent_id":105859,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/105859/profile-images/1473709753","team_only":false,"twitter_screen_name":"neko_the_shadow","website_url":"https://nekotheshadow.github.io/"},"page_views_count":null}