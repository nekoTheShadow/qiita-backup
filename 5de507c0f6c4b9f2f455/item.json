{"rendered_body":"<p>ページネーションの実装など、テーブルのN行目から(N + M)行目を取得したい場合、どのようなSQL文を発行すべきでしょうか。まず一番手っ取り早いのは、<code>LIMIT-OFFSET</code>が実装されている場合はそれを使うことです。</p>\n\n<div class=\"code-frame\" data-lang=\"sql\"><div class=\"highlight\"><pre><span class=\"k\">SELECT</span> <span class=\"o\">*</span>\n<span class=\"k\">FROM</span> <span class=\"k\">table</span>\n<span class=\"k\">ORDER</span> <span class=\"k\">BY</span> <span class=\"n\">sort_cond</span>\n<span class=\"k\">LIMIT</span> <span class=\"mi\">20</span> <span class=\"k\">OFFSET</span> <span class=\"mi\">10</span>\n</pre></div></div>\n\n<p>あるいは次のような構文(<code>LIMIT 開始位置, 取得行数</code>)も許容されていたような気がします(記憶があいまい)。</p>\n\n<div class=\"code-frame\" data-lang=\"sql\"><div class=\"highlight\"><pre><span class=\"k\">SELECT</span> <span class=\"o\">*</span>\n<span class=\"k\">FROM</span> <span class=\"k\">table</span>\n<span class=\"k\">ORDER</span> <span class=\"k\">BY</span> <span class=\"n\">sort_cond</span>\n<span class=\"k\">LIMIT</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">20</span>\n</pre></div></div>\n\n<p><code>LIMIT</code>が実装されていない場合は、次のように<code>FETCH</code>で代用します。</p>\n\n<div class=\"code-frame\" data-lang=\"sql\"><div class=\"highlight\"><pre><span class=\"k\">SELECT</span> <span class=\"o\">*</span>\n<span class=\"k\">FROM</span> <span class=\"k\">table</span>\n<span class=\"k\">ORDER</span> <span class=\"k\">BY</span> <span class=\"n\">sort_cond</span>\n<span class=\"k\">OFFSET</span> <span class=\"mi\">10</span> <span class=\"k\">ROWS</span> \n<span class=\"k\">FETCH</span> <span class=\"k\">FIRST</span> <span class=\"mi\">20</span> <span class=\"k\">ROWS</span> <span class=\"k\">ONLY</span>\n</pre></div></div>\n\n<p><code>LIMIT</code>も<code>OFFSET</code>も利用できない場合はまず<code>ROWNUM</code>疑似列の使用を検討します。これは確かOracleで有効だったような……(記憶があいまい)</p>\n\n<div class=\"code-frame\" data-lang=\"sql\"><div class=\"highlight\"><pre><span class=\"k\">SELECT</span> <span class=\"o\">*</span>\n<span class=\"k\">FROM</span> <span class=\"k\">table</span>\n<span class=\"k\">WHERE</span> <span class=\"n\">ROWNUM</span> <span class=\"k\">BETWEEN</span> <span class=\"mi\">10</span> <span class=\"k\">AND</span> <span class=\"mi\">30</span>\n<span class=\"k\">ORDER</span> <span class=\"k\">BY</span> <span class=\"n\">sort_cond</span>\n</pre></div></div>\n\n<p>これもだめなら最終手段。ウィンドウ関数の<code>ROW_NUMBER()</code>を利用して、無理やり疑似的な行番号を振ってやることになります。</p>\n\n<div class=\"code-frame\" data-lang=\"sql\"><div class=\"highlight\"><pre><span class=\"k\">SELECT</span> <span class=\"o\">*</span> \n<span class=\"k\">FROM</span> \n    <span class=\"p\">(</span><span class=\"k\">SELECT</span>\n        <span class=\"n\">col1</span><span class=\"p\">,</span>\n        <span class=\"n\">col2</span><span class=\"p\">,</span>\n        <span class=\"n\">ROW_NUMBER</span><span class=\"p\">()</span> <span class=\"n\">OVER</span><span class=\"p\">(</span><span class=\"k\">ORDER</span> <span class=\"k\">BY</span> <span class=\"n\">sort_cond</span><span class=\"p\">)</span> <span class=\"k\">AS</span> <span class=\"n\">rownum</span>\n    <span class=\"k\">FROM</span> <span class=\"k\">table</span><span class=\"p\">)</span>\n<span class=\"k\">WHERE</span> <span class=\"n\">rownum</span> <span class=\"k\">BETWEEN</span> <span class=\"mi\">10</span> <span class=\"k\">AND</span> <span class=\"mi\">30</span>\n<span class=\"k\">ORDER</span> <span class=\"k\">BY</span> <span class=\"n\">sor_cond</span>\n</pre></div></div>\n\n<p><del>パフォーマンス? 知ったこっちゃねえや</del></p>\n","body":"\nページネーションの実装など、テーブルのN行目から(N + M)行目を取得したい場合、どのようなSQL文を発行すべきでしょうか。まず一番手っ取り早いのは、`LIMIT-OFFSET`が実装されている場合はそれを使うことです。\n\n```sql\nSELECT *\nFROM table\nORDER BY sort_cond\nLIMIT 20 OFFSET 10\n```\n\nあるいは次のような構文(`LIMIT 開始位置, 取得行数`)も許容されていたような気がします(記憶があいまい)。\n\n```sql\nSELECT *\nFROM table\nORDER BY sort_cond\nLIMIT 10, 20\n```\n\n`LIMIT`が実装されていない場合は、次のように`FETCH`で代用します。\n\n```sql\nSELECT *\nFROM table\nORDER BY sort_cond\nOFFSET 10 ROWS \nFETCH FIRST 20 ROWS ONLY\n```\n\n`LIMIT`も`OFFSET`も利用できない場合はまず`ROWNUM`疑似列の使用を検討します。これは確かOracleで有効だったような……(記憶があいまい)\n\n```sql\nSELECT *\nFROM table\nWHERE ROWNUM BETWEEN 10 AND 30\nORDER BY sort_cond\n```\n\nこれもだめなら最終手段。ウィンドウ関数の`ROW_NUMBER()`を利用して、無理やり疑似的な行番号を振ってやることになります。\n\n```sql\nSELECT * \nFROM \n    (SELECT\n        col1,\n        col2,\n        ROW_NUMBER() OVER(ORDER BY sort_cond) AS rownum\n    FROM table)\nWHERE rownum BETWEEN 10 AND 30\nORDER BY sor_cond\n```\n\n~~パフォーマンス? 知ったこっちゃねえや~~\n\n\n\n\n","coediting":false,"comments_count":0,"created_at":"2016-10-22T19:32:43+09:00","group":null,"id":"5de507c0f6c4b9f2f455","likes_count":1,"private":false,"reactions_count":0,"tags":[{"name":"SQL","versions":[]}],"title":"テーブルの途中のN行を取得するいくつかのSQL文","updated_at":"2016-10-22T19:32:43+09:00","url":"https://qiita.com/neko_the_shadow/items/5de507c0f6c4b9f2f455","user":{"description":"IT業界の片隅でひっそり生きるシステムエンジニアです(´・ω・｀)","facebook_id":"","followees_count":0,"followers_count":33,"github_login_name":null,"id":"neko_the_shadow","items_count":168,"linkedin_id":"","location":"神奈川県川崎市","name":"","organization":"","permanent_id":105859,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/105859/profile-images/1473709753","team_only":false,"twitter_screen_name":"neko_the_shadow","website_url":"https://nekotheshadow.github.io/"},"page_views_count":null}