{"rendered_body":"\n<h1>\n<span id=\"問題\" class=\"fragment\"></span><a href=\"#%E5%95%8F%E9%A1%8C\"><i class=\"fa fa-link\"></i></a>問題</h1>\n\n<p>すでにRMagickが導入されている環境において、既存の画像ファイルを別のフォーマットに変換したい場合は、どのようにすれば良いでしょうか? </p>\n\n<h1>\n<span id=\"解決策\" class=\"fragment\"></span><a href=\"#%E8%A7%A3%E6%B1%BA%E7%AD%96\"><i class=\"fa fa-link\"></i></a>解決策</h1>\n\n<p>以下はローカルに存在するpngファイルをwebp形式に変換するサンプルコードになります。</p>\n\n<div class=\"code-frame\" data-lang=\"ruby\"><div class=\"highlight\"><pre><code><span class=\"nb\">require</span> <span class=\"s1\">'rmagick'</span>\n\n<span class=\"n\">image</span> <span class=\"o\">=</span> <span class=\"no\">Magick</span><span class=\"o\">::</span><span class=\"no\">ImageList</span><span class=\"p\">.</span><span class=\"nf\">new</span><span class=\"p\">(</span><span class=\"s1\">'xxx.png'</span><span class=\"p\">)</span>\n<span class=\"n\">image</span><span class=\"p\">.</span><span class=\"nf\">write</span><span class=\"p\">(</span><span class=\"s1\">'xxx.webp'</span><span class=\"p\">)</span>\n</code></pre></div></div>\n\n<h1>\n<span id=\"rmagickの導入\" class=\"fragment\"></span><a href=\"#rmagick%E3%81%AE%E5%B0%8E%E5%85%A5\"><i class=\"fa fa-link\"></i></a>RMagickの導入</h1>\n\n<p>ここからはRMagickの導入方法を示します。</p>\n\n<h2>\n<span id=\"imagemagickの導入\" class=\"fragment\"></span><a href=\"#imagemagick%E3%81%AE%E5%B0%8E%E5%85%A5\"><i class=\"fa fa-link\"></i></a>ImageMagickの導入</h2>\n\n<p>RMagickは前提ソフトウェアとしてImageMagickを必要とします。インストール方法は環境ごとに<a href=\"https://github.com/rmagick/rmagick/blob/master/README.md\" rel=\"nofollow noopener\" target=\"_blank\">RMagickのREADME.md</a>を参考にインストールしてください。わたしの環境はmacOSで、かつ、パッケージマネージャHomebrew導入済みなので、非常に簡単でした。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>brew update\nbrew upgrade\nbrew install imagemagick\n</code></pre></div></div>\n\n<h2>\n<span id=\"rmagickの導入-1\" class=\"fragment\"></span><a href=\"#rmagick%E3%81%AE%E5%B0%8E%E5%85%A5-1\"><i class=\"fa fa-link\"></i></a>RMagickの導入</h2>\n\n<p>Imagemagickの導入後はRubyGem経由で、rmagickをインストールします。これについても<a href=\"https://github.com/rmagick/rmagick/blob/master/README.md\" rel=\"nofollow noopener\" target=\"_blank\">RMagickのREADME.md</a>が参考になります。ちなみにわたしは<code>bundler</code>を利用しました。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>bundle init\nvi Gemfile     #=&gt; gem 'rmagick' を追記\nbundle install\n</code></pre></div></div>\n\n<p>ちなみにRMagickの導入は結構トラブルが多いようなので、なにか困った場合は<a href=\"https://github.com/rmagick/rmagick/blob/master/README.md\" rel=\"nofollow noopener\" target=\"_blank\">RMagickのREADME.mdの\"Things that can go wrong\"</a>を参考にするとよいと思います。</p>\n\n<p>わたしの環境でも<code>bundle install</code>の際に以下のようなエラーが発生。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>Gem::Ext::BuildError: ERROR: Failed to build gem native extension.\nERROR: Can't install RMagick 4.1.2. Can't find pkg-config in\n</code></pre></div></div>\n\n<p>このトラブルについても\"Things that can go wrong\"の対応方法を元に解消することができました。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>brew install pkg-config\n</code></pre></div></div>\n\n<h1>\n<span id=\"環境情報\" class=\"fragment\"></span><a href=\"#%E7%92%B0%E5%A2%83%E6%83%85%E5%A0%B1\"><i class=\"fa fa-link\"></i></a>環境情報</h1>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>$ brew -v\nHomebrew 2.5.1\nHomebrew/homebrew-core (git revision a2bbe; last commit 2020-09-16)\nHomebrew/homebrew-cask (git revision dfa88; last commit 2020-09-16)\n$ ruby -v\nruby 2.7.1p83 (2020-03-31 revision a0c7c23c9c) [x86_64-darwin18]\n$ bundle -v\nBundler version 2.1.2\n</code></pre></div></div>\n","body":"# 問題\n\nすでにRMagickが導入されている環境において、既存の画像ファイルを別のフォーマットに変換したい場合は、どのようにすれば良いでしょうか? \n\n# 解決策\n\n以下はローカルに存在するpngファイルをwebp形式に変換するサンプルコードになります。\n\n```ruby\nrequire 'rmagick'\n\nimage = Magick::ImageList.new('xxx.png')\nimage.write('xxx.webp')\n```\n\n# RMagickの導入\n\nここからはRMagickの導入方法を示します。\n\n## ImageMagickの導入\n\nRMagickは前提ソフトウェアとしてImageMagickを必要とします。インストール方法は環境ごとに[RMagickのREADME.md](https://github.com/rmagick/rmagick/blob/master/README.md)を参考にインストールしてください。わたしの環境はmacOSで、かつ、パッケージマネージャHomebrew導入済みなので、非常に簡単でした。\n\n```\nbrew update\nbrew upgrade\nbrew install imagemagick\n```\n\n## RMagickの導入\n\nImagemagickの導入後はRubyGem経由で、rmagickをインストールします。これについても[RMagickのREADME.md](https://github.com/rmagick/rmagick/blob/master/README.md)が参考になります。ちなみにわたしは`bundler`を利用しました。\n\n```\nbundle init\nvi Gemfile     #=> gem 'rmagick' を追記\nbundle install\n```\n\nちなみにRMagickの導入は結構トラブルが多いようなので、なにか困った場合は[RMagickのREADME.mdの\"Things that can go wrong\"](https://github.com/rmagick/rmagick/blob/master/README.md)を参考にするとよいと思います。\n\nわたしの環境でも`bundle install`の際に以下のようなエラーが発生。\n\n```\nGem::Ext::BuildError: ERROR: Failed to build gem native extension.\nERROR: Can't install RMagick 4.1.2. Can't find pkg-config in\n```\n\nこのトラブルについても\"Things that can go wrong\"の対応方法を元に解消することができました。\n\n```\nbrew install pkg-config\n```\n\n# 環境情報\n\n```\n$ brew -v\nHomebrew 2.5.1\nHomebrew/homebrew-core (git revision a2bbe; last commit 2020-09-16)\nHomebrew/homebrew-cask (git revision dfa88; last commit 2020-09-16)\n$ ruby -v\nruby 2.7.1p83 (2020-03-31 revision a0c7c23c9c) [x86_64-darwin18]\n$ bundle -v\nBundler version 2.1.2\n```\n","coediting":false,"comments_count":0,"created_at":"2020-09-17T18:47:53+09:00","group":null,"id":"a38c9a055590b2c61497","likes_count":0,"private":false,"reactions_count":0,"stocks_count":0,"tags":[{"name":"Ruby","versions":[]}],"title":"RMagickを導入して、既存の既存の画像ファイルを別のフォーマットに変換する","updated_at":"2020-09-17T18:49:50+09:00","url":"https://qiita.com/neko_the_shadow/items/a38c9a055590b2c61497","user":{"description":"IT業界の片隅でひっそり生きるシステムエンジニアです(´・ω・｀)","facebook_id":"","followees_count":0,"followers_count":38,"github_login_name":"nekoTheShadow","id":"neko_the_shadow","items_count":224,"linkedin_id":"","location":"神奈川県川崎市","name":"","organization":"","permanent_id":105859,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/105859/profile-images/1473709753","team_only":false,"twitter_screen_name":"neko_the_shadow","website_url":"https://github.com/nekoTheShadow"},"page_views_count":3362,"team_membership":null,"organization_url_name":null,"slide":false}