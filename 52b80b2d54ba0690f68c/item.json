{"rendered_body":"<p data-sourcepos=\"1:1-1:615\">SQLServerには削除したり更新したりしたデータを返す<a href=\"https://docs.microsoft.com/ja-jp/sql/t-sql/queries/output-clause-transact-sql?view=sql-server-ver16\" rel=\"nofollow noopener\" target=\"_blank\">OUTPUT句</a>というものがあります。OUTPUT句の結果をJavaアプリケーション上で受け取りたい場合は<code>PreparedStatement::executeQuery</code>を利用して、SQLを発行すれば良いです。OUTPUT句はDELETE文やUPDATE文で利用しますが、通常DELETE文やUPDATE文の発行に利用する<code>PreparedStatement::executeUpdate</code>ではOUTPUT句の結果を受け取れないことに注意する必要があります。</p>\n<p data-sourcepos=\"3:1-3:249\">未検証ですが、データベース接続に何らかのライブラリを使う場合は、通常SELECT文を発行するためのAPIを用いて、OUTPUT句を含むDELETE文なりUPDATE文なりを発行すればよいかと思われます。</p>\n<p data-sourcepos=\"5:1-5:203\">以下は従業員の情報を格納する<code>employees</code>テーブルからidが2と4の従業員を削除しつつ、その削除した従業員のidと名前と入社日を取得するサンプルです。</p>\n<div class=\"code-frame\" data-lang=\"java\" data-sourcepos=\"7:1-29:3\"><div class=\"highlight\"><pre><code><span class=\"nc\">String</span> <span class=\"n\">sql</span> <span class=\"o\">=</span> <span class=\"sh\">\"\"\" \n    DELETE FROM employees\n    OUTPUT DELETED.id, DELETED.name, DELETED.hiredate\n    WHERE id IN (2, 4)\n\"\"\"</span><span class=\"o\">;</span>\n\n<span class=\"nc\">String</span> <span class=\"n\">url</span> <span class=\"o\">=</span> <span class=\"s\">\"jdbc:sqlserver://localhost;encrypt=false\"</span><span class=\"o\">;</span>\n<span class=\"nc\">String</span> <span class=\"n\">username</span> <span class=\"o\">=</span> <span class=\"s\">\"sa\"</span><span class=\"o\">;</span>\n<span class=\"nc\">String</span> <span class=\"n\">password</span> <span class=\"o\">=</span> <span class=\"s\">\"1234@Hoge\"</span><span class=\"o\">;</span>\n<span class=\"k\">try</span> <span class=\"o\">(</span><span class=\"nc\">Connection</span> <span class=\"n\">con</span> <span class=\"o\">=</span> <span class=\"nc\">DriverManager</span><span class=\"o\">.</span><span class=\"na\">getConnection</span><span class=\"o\">(</span><span class=\"n\">url</span><span class=\"o\">,</span> <span class=\"n\">username</span><span class=\"o\">,</span> <span class=\"n\">password</span><span class=\"o\">))</span> <span class=\"o\">{</span>\n    <span class=\"nc\">PreparedStatement</span> <span class=\"n\">pstmt</span> <span class=\"o\">=</span> <span class=\"n\">con</span><span class=\"o\">.</span><span class=\"na\">prepareStatement</span><span class=\"o\">(</span><span class=\"n\">sql</span><span class=\"o\">);</span>\n    <span class=\"nc\">ResultSet</span> <span class=\"n\">rs</span> <span class=\"o\">=</span> <span class=\"n\">pstmt</span><span class=\"o\">.</span><span class=\"na\">executeQuery</span><span class=\"o\">();</span>\n    <span class=\"k\">while</span> <span class=\"o\">(</span><span class=\"n\">rs</span><span class=\"o\">.</span><span class=\"na\">next</span><span class=\"o\">())</span> <span class=\"o\">{</span>\n        <span class=\"kt\">int</span> <span class=\"n\">id</span> <span class=\"o\">=</span> <span class=\"n\">rs</span><span class=\"o\">.</span><span class=\"na\">getInt</span><span class=\"o\">(</span><span class=\"s\">\"id\"</span><span class=\"o\">);</span>\n        <span class=\"nc\">String</span> <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">rs</span><span class=\"o\">.</span><span class=\"na\">getString</span><span class=\"o\">(</span><span class=\"s\">\"name\"</span><span class=\"o\">);</span>\n        <span class=\"nc\">Date</span> <span class=\"n\">age</span> <span class=\"o\">=</span> <span class=\"n\">rs</span><span class=\"o\">.</span><span class=\"na\">getDate</span><span class=\"o\">(</span><span class=\"s\">\"hiredate\"</span><span class=\"o\">);</span>\n        <span class=\"n\">doSomething</span><span class=\"o\">(</span><span class=\"n\">id</span><span class=\"o\">,</span> <span class=\"n\">name</span><span class=\"o\">,</span> <span class=\"n\">age</span><span class=\"o\">);</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">}</span> <span class=\"k\">catch</span> <span class=\"o\">(</span><span class=\"nc\">SQLException</span> <span class=\"n\">e</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n    <span class=\"n\">e</span><span class=\"o\">.</span><span class=\"na\">printStackTrace</span><span class=\"o\">();</span>\n<span class=\"o\">}</span>\n</code></pre></div></div>\n<p data-sourcepos=\"31:1-31:16\"><strong>環境情報</strong></p>\n<ul data-sourcepos=\"33:1-35:0\">\n<li data-sourcepos=\"33:1-33:8\">Java17</li>\n<li data-sourcepos=\"34:1-35:0\">mssql-jdbc-10.2.1.jre17.jar</li>\n</ul>\n<p data-sourcepos=\"36:1-36:135\"><a href=\"https://hub.docker.com/_/microsoft-mssql-server\" rel=\"nofollow noopener\" target=\"_blank\">SQLServerはDockerを利用して起動</a>。詳細なバージョンは以下の通り</p>\n<div class=\"code-frame\" data-lang=\"text\" data-sourcepos=\"38:1-43:3\"><div class=\"highlight\"><pre><code>Microsoft SQL Server 2019 (RTM-CU9) (KB5000642) - 15.0.4102.2 (X64) \n\tJan 25 2021 20:16:12 \n\tCopyright (C) 2019 Microsoft Corporation\n\tDeveloper Edition (64-bit) on Linux (Ubuntu 18.04.5 LTS) &lt;X64&gt;\n</code></pre></div></div>\n","body":"SQLServerには削除したり更新したりしたデータを返す[OUTPUT句](https://docs.microsoft.com/ja-jp/sql/t-sql/queries/output-clause-transact-sql?view=sql-server-ver16)というものがあります。OUTPUT句の結果をJavaアプリケーション上で受け取りたい場合は`PreparedStatement::executeQuery`を利用して、SQLを発行すれば良いです。OUTPUT句はDELETE文やUPDATE文で利用しますが、通常DELETE文やUPDATE文の発行に利用する`PreparedStatement::executeUpdate`ではOUTPUT句の結果を受け取れないことに注意する必要があります。\n\n未検証ですが、データベース接続に何らかのライブラリを使う場合は、通常SELECT文を発行するためのAPIを用いて、OUTPUT句を含むDELETE文なりUPDATE文なりを発行すればよいかと思われます。\n\n以下は従業員の情報を格納する`employees`テーブルからidが2と4の従業員を削除しつつ、その削除した従業員のidと名前と入社日を取得するサンプルです。\n\n```java\nString sql = \"\"\" \n    DELETE FROM employees\n    OUTPUT DELETED.id, DELETED.name, DELETED.hiredate\n    WHERE id IN (2, 4)\n\"\"\";\n\nString url = \"jdbc:sqlserver://localhost;encrypt=false\";\nString username = \"sa\";\nString password = \"1234@Hoge\";\ntry (Connection con = DriverManager.getConnection(url, username, password)) {\n    PreparedStatement pstmt = con.prepareStatement(sql);\n    ResultSet rs = pstmt.executeQuery();\n    while (rs.next()) {\n        int id = rs.getInt(\"id\");\n        String name = rs.getString(\"name\");\n        Date age = rs.getDate(\"hiredate\");\n        doSomething(id, name, age);\n    }\n} catch (SQLException e) {\n    e.printStackTrace();\n}\n```\n\n**環境情報**\n\n- Java17\n- mssql-jdbc-10.2.1.jre17.jar\n\n[SQLServerはDockerを利用して起動](https://hub.docker.com/_/microsoft-mssql-server)。詳細なバージョンは以下の通り\n\n```\nMicrosoft SQL Server 2019 (RTM-CU9) (KB5000642) - 15.0.4102.2 (X64) \n\tJan 25 2021 20:16:12 \n\tCopyright (C) 2019 Microsoft Corporation\n\tDeveloper Edition (64-bit) on Linux (Ubuntu 18.04.5 LTS) <X64>\n```\n","coediting":false,"comments_count":0,"created_at":"2022-07-18T21:19:43+09:00","group":null,"id":"52b80b2d54ba0690f68c","likes_count":0,"private":false,"reactions_count":0,"stocks_count":0,"tags":[{"name":"Java","versions":[]},{"name":"SQLServer","versions":[]}],"title":"OUTPUT句の結果をJavaアプリケーション上で受け取りたい","updated_at":"2022-07-18T21:19:43+09:00","url":"https://qiita.com/neko_the_shadow/items/52b80b2d54ba0690f68c","user":{"description":"IT業界の片隅でひっそり生きるシステムエンジニアです(´・ω・｀)","facebook_id":"","followees_count":0,"followers_count":36,"github_login_name":null,"id":"neko_the_shadow","items_count":214,"linkedin_id":"","location":"神奈川県川崎市","name":"","organization":"","permanent_id":105859,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/105859/profile-images/1473709753","team_only":false,"twitter_screen_name":"neko_the_shadow","website_url":"https://github.com/nekoTheShadow"},"page_views_count":848,"team_membership":null,"organization_url_name":null}