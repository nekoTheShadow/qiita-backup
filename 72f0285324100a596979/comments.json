[{"body":"@chocolamintさんのコメントはおそらく[この辺り](https://msdn.microsoft.com/library/system.random(v=vs.110).aspx)から拾ってきた内容だと思いますが、その文章の次に書かれている以下の内容も重要です。\n\n>However, the Random class isn't thread safe. If you call Random methods from multiple threads, follow the guidelines discussed in the next section.\n\nスレッドセーフではないので使い方に気を付けようという話ですね。\n\n例えば、Webのリクエスト毎にランダムな値を生成して使いたいと言った場合などに、シングルトンにしてRandomインスタンスを使いまわすと大惨事になるので注意が必要です。\n","created_at":"2018-01-18T22:05:31+09:00","id":"b3e172fd483b008dbea5","rendered_body":"<p><a href=\"/chocolamint\" class=\"user-mention js-hovercard\" title=\"chocolamint\" data-hovercard-target-type=\"user\" data-hovercard-target-name=\"chocolamint\">@chocolamint</a>さんのコメントはおそらく<a href=\"https://msdn.microsoft.com/library/system.random(v=vs.110).aspx\" rel=\"nofollow noopener\" target=\"_blank\">この辺り</a>から拾ってきた内容だと思いますが、その文章の次に書かれている以下の内容も重要です。</p>\n\n<blockquote>\n<p>However, the Random class isn't thread safe. If you call Random methods from multiple threads, follow the guidelines discussed in the next section.</p>\n</blockquote>\n\n<p>スレッドセーフではないので使い方に気を付けようという話ですね。</p>\n\n<p>例えば、Webのリクエスト毎にランダムな値を生成して使いたいと言った場合などに、シングルトンにしてRandomインスタンスを使いまわすと大惨事になるので注意が必要です。</p>\n","updated_at":"2018-01-18T22:05:31+09:00","user":{"description":null,"facebook_id":null,"followees_count":2,"followers_count":1,"github_login_name":"evin101","id":"evin_101","items_count":0,"linkedin_id":null,"location":null,"name":"","organization":null,"permanent_id":28867,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/28867/profile-images/1473760152","team_only":false,"twitter_screen_name":"evin_101","website_url":null}},{"body":"> ### Avoiding multiple instantiations\n> Initializing two random number generators in a tight loop or in rapid succession creates two random number generators that can produce identical sequences of random numbers. In most cases, this is not the developer's intent and can lead to performance issues, because instantiating and initializing a random number generator is a relatively expensive process.\n> \n> Both to improve performance and to avoid inadvertently creating separate random number generators that generate identical numeric sequences, **we recommend that you create one Random object to generate many random numbers over time, instead of creating new Random objects to generate one random number.**\n\n（強調は私によります）\n\nとあるので\n\n> 不用意にSystem.Randomインスタンスを生成せずに使いまわすというのが手っ取り早そうです。\n> そう悪くない戦略だと思います。\n\nで正解だと思います。\n","created_at":"2018-01-18T00:12:40+09:00","id":"785c9c75f9a49fc4292d","rendered_body":"<blockquote>\n\n<h3>\n<span id=\"avoiding-multiple-instantiations\" class=\"fragment\"></span><a href=\"#avoiding-multiple-instantiations\"><i class=\"fa fa-link\"></i></a>Avoiding multiple instantiations</h3>\n\n<p>Initializing two random number generators in a tight loop or in rapid succession creates two random number generators that can produce identical sequences of random numbers. In most cases, this is not the developer's intent and can lead to performance issues, because instantiating and initializing a random number generator is a relatively expensive process.</p>\n\n<p>Both to improve performance and to avoid inadvertently creating separate random number generators that generate identical numeric sequences, <strong>we recommend that you create one Random object to generate many random numbers over time, instead of creating new Random objects to generate one random number.</strong></p>\n</blockquote>\n\n<p>（強調は私によります）</p>\n\n<p>とあるので</p>\n\n<blockquote>\n<p>不用意にSystem.Randomインスタンスを生成せずに使いまわすというのが手っ取り早そうです。<br>\nそう悪くない戦略だと思います。</p>\n</blockquote>\n\n<p>で正解だと思います。</p>\n","updated_at":"2018-01-18T00:12:40+09:00","user":{"description":"GitHub の使い方がわからない情弱です。\r\n主に C# とか JavaScript とか TypeScript とか。\r\n\r\n","facebook_id":"","followees_count":37,"followers_count":87,"github_login_name":"chocolamint","id":"chocolamint","items_count":45,"linkedin_id":"","location":"","name":"","organization":"","permanent_id":11978,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/11978/profile-images/1473682231","team_only":false,"twitter_screen_name":"chocolamint","website_url":""}}]