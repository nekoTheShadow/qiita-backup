[{"body":"Java11には[String#repeat(int)](https://download.java.net/java/early_access/jdk11/docs/api/java.base/java/lang/String.html#repeat(int))が追加される予定です。今年の9月リリース予定ですから、もうすぐです。\nあとこんなのもあります。\n\n```java\npublic static String repeat(String s, int n) {\n    return new String(new char[n]).replace(\"\\0\", s);\n}\n```\n","created_at":"2018-05-14T03:09:30+09:00","id":"677721c7f23b65341c73","rendered_body":"<p>Java11には<a href=\"https://download.java.net/java/early_access/jdk11/docs/api/java.base/java/lang/String.html#repeat(int)\" rel=\"nofollow noopener\" target=\"_blank\">String#repeat(int)</a>が追加される予定です。今年の9月リリース予定ですから、もうすぐです。<br>\nあとこんなのもあります。</p>\n\n<div class=\"code-frame\" data-lang=\"java\"><div class=\"highlight\"><pre><span class=\"kd\">public</span> <span class=\"kd\">static</span> <span class=\"nc\">String</span> <span class=\"nf\">repeat</span><span class=\"o\">(</span><span class=\"nc\">String</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"kt\">int</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n    <span class=\"k\">return</span> <span class=\"k\">new</span> <span class=\"nf\">String</span><span class=\"o\">(</span><span class=\"k\">new</span> <span class=\"kt\">char</span><span class=\"o\">[</span><span class=\"n\">n</span><span class=\"o\">]).</span><span class=\"na\">replace</span><span class=\"o\">(</span><span class=\"s\">\"\\0\"</span><span class=\"o\">,</span> <span class=\"n\">s</span><span class=\"o\">);</span>\n<span class=\"o\">}</span>\n</pre></div></div>\n","updated_at":"2018-05-14T03:09:30+09:00","user":{"description":"","facebook_id":"","followees_count":0,"followers_count":19,"github_login_name":"saka1029","id":"saka1029","items_count":22,"linkedin_id":"","location":"","name":"saka1029","organization":"","permanent_id":78427,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/78427/profile-images/1473701156","team_only":false,"twitter_screen_name":null,"website_url":""}},{"body":"別のところでもIntStreamからやってるのを見たけど、なんでStream#generateを使わないのだろう\n(ついでにjoiningの引数いらない)\n\n```java\npublic static String repeat(String str, int n) {\n  return Stream.generate(() -> str).limit(n).collect(Collectors.joining());\n}\n```\n","created_at":"2018-05-14T00:41:26+09:00","id":"eba98031783c4f2e2015","rendered_body":"<p>別のところでもIntStreamからやってるのを見たけど、なんでStream#generateを使わないのだろう<br>\n(ついでにjoiningの引数いらない)</p>\n\n<div class=\"code-frame\" data-lang=\"java\"><div class=\"highlight\"><pre><span class=\"kd\">public</span> <span class=\"kd\">static</span> <span class=\"nc\">String</span> <span class=\"nf\">repeat</span><span class=\"o\">(</span><span class=\"nc\">String</span> <span class=\"n\">str</span><span class=\"o\">,</span> <span class=\"kt\">int</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n  <span class=\"k\">return</span> <span class=\"nc\">Stream</span><span class=\"o\">.</span><span class=\"na\">generate</span><span class=\"o\">(()</span> <span class=\"o\">-&gt;</span> <span class=\"n\">str</span><span class=\"o\">).</span><span class=\"na\">limit</span><span class=\"o\">(</span><span class=\"n\">n</span><span class=\"o\">).</span><span class=\"na\">collect</span><span class=\"o\">(</span><span class=\"nc\">Collectors</span><span class=\"o\">.</span><span class=\"na\">joining</span><span class=\"o\">());</span>\n<span class=\"o\">}</span>\n</pre></div></div>\n","updated_at":"2018-05-14T00:41:26+09:00","user":{"description":"","facebook_id":"","followees_count":1,"followers_count":16,"github_login_name":null,"id":"swordone","items_count":7,"linkedin_id":"","location":"","name":"","organization":"","permanent_id":211680,"profile_image_url":"https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=50","team_only":false,"twitter_screen_name":null,"website_url":""}}]