{"rendered_body":"<p>Dockerイメージをレジストリに登録する作業を自動化したい場合、<a href=\"https://github.com/docker/build-push-action\" rel=\"nofollow noopener\" target=\"_blank\">build-push-action</a>というワークフローを利用することが多いと思います。このワークフローを使って、2020/09/03にオープンベータになったGitHub Container Registryにイメージをpushしたい場合は、おおよそ以下のようにすればよいです。</p>\n\n<div class=\"code-frame\" data-lang=\"yml\"><div class=\"highlight\"><pre><code><span class=\"na\">name</span><span class=\"pi\">:</span> <span class=\"s\">Publish Docker image</span>\n<span class=\"na\">on</span><span class=\"pi\">:</span> <span class=\"s\">push</span>\n<span class=\"na\">jobs</span><span class=\"pi\">:</span>\n  <span class=\"na\">publish_image</span><span class=\"pi\">:</span>\n    <span class=\"na\">runs-on</span><span class=\"pi\">:</span> <span class=\"s\">ubuntu-latest</span>\n    <span class=\"na\">steps</span><span class=\"pi\">:</span>\n      <span class=\"pi\">-</span> <span class=\"na\">name</span><span class=\"pi\">:</span> <span class=\"s\">Push to GitHub Container Registry</span>\n        <span class=\"na\">uses</span><span class=\"pi\">:</span> <span class=\"s\">docker/build-push-action@v1</span>\n        <span class=\"na\">with</span><span class=\"pi\">:</span>\n          <span class=\"na\">username</span><span class=\"pi\">:</span> <span class=\"s\">${{ github.actor }}</span>\n          <span class=\"na\">password</span><span class=\"pi\">:</span> <span class=\"s\">${{ secrets.ACCESS_TOKEN }}</span>\n          <span class=\"na\">registry</span><span class=\"pi\">:</span> <span class=\"s\">ghcr.io</span>\n          <span class=\"na\">repository</span><span class=\"pi\">:</span> <span class=\"s\">example/example</span>\n</code></pre></div></div>\n\n<p>ポイントは次の通りです。</p>\n\n<ul>\n<li>\n<code>registry</code>は<code>ghcr.io</code>を指定します。</li>\n<li>\n<code>username</code>はレポジトリにアクセスできるユーザを指定してください。なおここではワークフロー実行ユーザ名を格納する<code>github.actor</code>を利用しています。</li>\n<li>\n<code>password</code>には、レポジトリへの読み取り・書き込み権限を有するアクセストークン(★)を指定する必要があります。</li>\n</ul>\n\n<p>(★) アクセストークンを作成し、Github Actions内で利用できるようになるまでの手順は以下の通りです。</p>\n\n<ol>\n<li>\n<a href=\"https://github.com/settings/tokens/new\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">https://github.com/settings/tokens/new</a> へアクセス。認証が求められる場合がある。</li>\n<li>アクセストークン作成画面では、<code>write:packages</code>と<code>read:packages</code>に最低限チェックを付けて、<code>Genereate Token</code>を押下する。必要な場合はほかの権限も付与すること。</li>\n<li>作成したアクセストークンを控えておく</li>\n<li>Github Actionsを使うレポジトリに移動。</li>\n<li>\n<code>Settings &gt; Secrets &gt; New Secret</code>の順番に移動。</li>\n<li>Secret作成画面では、Name=\"任意の名前\"(上記のサンプルでは<code>ACCESS_TOKEN</code>)、VALUE=\"3.で控えておいたアクセストークン\"を指定して、<code>Add Secret</code>を押下。</li>\n<li>これでワークフロー内で<code>${{ secrets.任意の名前 }}</code>という変数が利用できるようになります。</li>\n</ol>\n","body":"Dockerイメージをレジストリに登録する作業を自動化したい場合、[build-push-action](https://github.com/docker/build-push-action)というワークフローを利用することが多いと思います。このワークフローを使って、2020/09/03にオープンベータになったGitHub Container Registryにイメージをpushしたい場合は、おおよそ以下のようにすればよいです。\n\n```yml\nname: Publish Docker image\non: push\njobs:\n  publish_image:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Push to GitHub Container Registry\n        uses: docker/build-push-action@v1\n        with:\n          username: ${{ github.actor }}\n          password: ${{ secrets.ACCESS_TOKEN }}\n          registry: ghcr.io\n          repository: example/example\n```\n\nポイントは次の通りです。\n\n- `registry`は`ghcr.io`を指定します。\n- `username`はレポジトリにアクセスできるユーザを指定してください。なおここではワークフロー実行ユーザ名を格納する`github.actor`を利用しています。\n- `password`には、レポジトリへの読み取り・書き込み権限を有するアクセストークン(★)を指定する必要があります。\n\n(★) アクセストークンを作成し、Github Actions内で利用できるようになるまでの手順は以下の通りです。\n\n1. https://github.com/settings/tokens/new へアクセス。認証が求められる場合がある。\n2. アクセストークン作成画面では、`write:packages`と`read:packages`に最低限チェックを付けて、`Genereate Token`を押下する。必要な場合はほかの権限も付与すること。\n3. 作成したアクセストークンを控えておく\n4. Github Actionsを使うレポジトリに移動。\n5. `Settings > Secrets > New Secret`の順番に移動。\n6. Secret作成画面では、Name=\"任意の名前\"(上記のサンプルでは`ACCESS_TOKEN`)、VALUE=\"3.で控えておいたアクセストークン\"を指定して、`Add Secret`を押下。\n7. これでワークフロー内で`${{ secrets.任意の名前 }}`という変数が利用できるようになります。\n","coediting":false,"comments_count":0,"created_at":"2020-09-13T17:16:53+09:00","group":null,"id":"56fdf5123559d5147449","likes_count":0,"private":false,"reactions_count":0,"stocks_count":0,"tags":[{"name":"Docker","versions":[]},{"name":"GitHubActions","versions":[]}],"title":"build-push-actionを使って、GitHub Container Registryにイメージをpushしたい","updated_at":"2020-09-13T17:47:55+09:00","url":"https://qiita.com/neko_the_shadow/items/56fdf5123559d5147449","user":{"description":"IT業界の片隅でひっそり生きるシステムエンジニアです(´・ω・｀)","facebook_id":"","followees_count":0,"followers_count":38,"github_login_name":"nekoTheShadow","id":"neko_the_shadow","items_count":224,"linkedin_id":"","location":"神奈川県川崎市","name":"","organization":"","permanent_id":105859,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/105859/profile-images/1473709753","team_only":false,"twitter_screen_name":"neko_the_shadow","website_url":"https://github.com/nekoTheShadow"},"page_views_count":1357,"team_membership":null,"organization_url_name":null,"slide":false}