{"rendered_body":"<p>さほど頻度は高くないと思いますが、とあるパスを起点として、別のパスの相対パスを求めたいということがあります。Java7以降では、ファイル操作(もといパス操作)に<code>java.nio.file.Path</code>を利用することが多いと思いますが、<strong><code>Path</code>を利用している状況で相対パスを求めたいという場合には<code>Path::relativize</code>を使用します。</strong></p>\n\n<p>JavaDocは次のURLになります: <a href=\"https://docs.oracle.com/javase/jp/8/docs/api/java/nio/file/Path.html#relativize-java.nio.file.Path-\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">https://docs.oracle.com/javase/jp/8/docs/api/java/nio/file/Path.html#relativize-java.nio.file.Path-</a></p>\n\n<p>APIの使い方がややわかりづらいのですが、相対パスを求めたいパスを引数に、起点としたいパスをレシーバにそれぞれ指定します。</p>\n\n<p>以下はディレクトリ<code>/a/b/c/directory</code>を起点としてファイル<code>/a/b/c/directory/e/file</code>の相対パスを求めるサンプルです。なおファイル<code>/a/b/c/directory/e/file</code>はディレクトリ<code>/a/b/c/directory</code>に格納されているという想定になります。</p>\n\n<div class=\"code-frame\" data-lang=\"java\"><div class=\"highlight\"><pre><code><span class=\"kn\">package</span> <span class=\"nn\">main</span><span class=\"o\">;</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">java.nio.file.Paths</span><span class=\"o\">;</span>\n\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">Main</span> <span class=\"o\">{</span>\n    <span class=\"kd\">public</span> <span class=\"kd\">static</span> <span class=\"kt\">void</span> <span class=\"nf\">main</span><span class=\"o\">(</span><span class=\"nc\">String</span><span class=\"o\">[]</span> <span class=\"n\">args</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"kt\">var</span> <span class=\"n\">directory</span> <span class=\"o\">=</span> <span class=\"nc\">Paths</span><span class=\"o\">.</span><span class=\"na\">get</span><span class=\"o\">(</span><span class=\"s\">\"/a/b/c/directory\"</span><span class=\"o\">);</span>\n        <span class=\"kt\">var</span> <span class=\"n\">file</span> <span class=\"o\">=</span> <span class=\"nc\">Paths</span><span class=\"o\">.</span><span class=\"na\">get</span><span class=\"o\">(</span><span class=\"s\">\"/a/b/c/directory/e/file\"</span><span class=\"o\">);</span>\n\n        <span class=\"nc\">System</span><span class=\"o\">.</span><span class=\"na\">out</span><span class=\"o\">.</span><span class=\"na\">println</span><span class=\"o\">(</span><span class=\"n\">directory</span><span class=\"o\">.</span><span class=\"na\">relativize</span><span class=\"o\">(</span><span class=\"n\">file</span><span class=\"o\">));</span> <span class=\"c1\">// =&gt; e\\file</span>\n    <span class=\"o\">}</span>    \n<span class=\"o\">}</span>\n</code></pre></div></div>\n","body":"さほど頻度は高くないと思いますが、とあるパスを起点として、別のパスの相対パスを求めたいということがあります。Java7以降では、ファイル操作(もといパス操作)に`java.nio.file.Path`を利用することが多いと思いますが、__`Path`を利用している状況で相対パスを求めたいという場合には`Path::relativize`を使用します。__\n\nJavaDocは次のURLになります: https://docs.oracle.com/javase/jp/8/docs/api/java/nio/file/Path.html#relativize-java.nio.file.Path-\n\nAPIの使い方がややわかりづらいのですが、相対パスを求めたいパスを引数に、起点としたいパスをレシーバにそれぞれ指定します。\n\n以下はディレクトリ`/a/b/c/directory`を起点としてファイル`/a/b/c/directory/e/file`の相対パスを求めるサンプルです。なおファイル`/a/b/c/directory/e/file`はディレクトリ`/a/b/c/directory`に格納されているという想定になります。\n\n```java\npackage main;\n\nimport java.nio.file.Paths;\n\npublic class Main {\n    public static void main(String[] args) {\n        var directory = Paths.get(\"/a/b/c/directory\");\n        var file = Paths.get(\"/a/b/c/directory/e/file\");\n        \n        System.out.println(directory.relativize(file)); // => e\\file\n    }    \n}\n```\n","coediting":false,"comments_count":0,"created_at":"2019-05-05T09:37:40+09:00","group":null,"id":"2d77c0c310ffbede20f0","likes_count":3,"private":false,"reactions_count":0,"stocks_count":1,"tags":[{"name":"Java","versions":[]}],"title":"Pathを利用した状況で相対パスを求めたい","updated_at":"2019-05-05T09:38:11+09:00","url":"https://qiita.com/neko_the_shadow/items/2d77c0c310ffbede20f0","user":{"description":"IT業界の片隅でひっそり生きるシステムエンジニアです(´・ω・｀)","facebook_id":"","followees_count":0,"followers_count":37,"github_login_name":"nekoTheShadow","id":"neko_the_shadow","items_count":218,"linkedin_id":"","location":"神奈川県川崎市","name":"","organization":"","permanent_id":105859,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/105859/profile-images/1473709753","team_only":false,"twitter_screen_name":"neko_the_shadow","website_url":"https://github.com/nekoTheShadow"},"page_views_count":7493,"team_membership":null,"organization_url_name":null,"slide":false}