{"rendered_body":"<p>同一テーブル内の複数の行を更新する際、行ごとに更新する内容を切り替えたい場合は<code>UPDATE</code>と<code>CASE</code>の合わせ技を用います。</p>\n\n<p>たとえばユーザの個人情報を格納したテーブルがあるとします。このとき「AさんとBさんのパスワードと生年月日を更新したい、そしてそれ以外のユーザの個人情報はそのままにしておきたい」というときは次のようなSQLにより実現することができます。</p>\n\n<div class=\"code-frame\" data-lang=\"sql\"><div class=\"highlight\"><pre><span class=\"k\">UPDATE</span> <span class=\"k\">table</span>\n<span class=\"k\">SET</span>\n    <span class=\"n\">password</span> <span class=\"o\">=</span> <span class=\"k\">CASE</span> <span class=\"n\">name</span>\n        <span class=\"k\">WHEN</span> <span class=\"s1\">'Aさん'</span> <span class=\"k\">THEN</span> <span class=\"s1\">'password_a'</span>\n        <span class=\"k\">WHEN</span> <span class=\"s1\">'Bさん'</span> <span class=\"k\">THEN</span> <span class=\"s1\">'password_b'</span>\n        <span class=\"k\">ELSE</span> <span class=\"n\">password</span>\n    <span class=\"k\">END</span><span class=\"p\">,</span>\n\n    <span class=\"n\">birthday</span> <span class=\"o\">=</span> <span class=\"k\">CASE</span> <span class=\"n\">name</span>\n        <span class=\"k\">WHEN</span> <span class=\"s1\">'Aさん'</span> <span class=\"k\">THEN</span> <span class=\"s1\">'birthday_a'</span>\n        <span class=\"k\">WHEN</span> <span class=\"s1\">'Bさん'</span> <span class=\"k\">THEN</span> <span class=\"s1\">'birthday_b'</span>\n        <span class=\"k\">ELSE</span> <span class=\"n\">birthday</span>\n    <span class=\"k\">END</span>\n</pre></div></div>\n\n<p>注意すべきは<code>ELSE</code>です。<code>UPDATE</code>はテーブル全体、あるいは<code>WHERE</code>によって限定された範囲全体に対して更新処理を行おうとします。上述の例の場合は「AさんとBさん以外は更新しない」、つまり「AさんとBさん以外は現在のパスワードと生年月日のままにする」ということを明示的に宣言してやらねばなりません。</p>\n\n<p>上記のようなSQLがわかりづらいのは「条件節が戻り値を持つ」という点でしょうか。Lispなどの関数型言語に慣れていると、特に違和感なく受け入れられると思いますが……。</p>\n","body":"\n同一テーブル内の複数の行を更新する際、行ごとに更新する内容を切り替えたい場合は`UPDATE`と`CASE`の合わせ技を用います。\n\nたとえばユーザの個人情報を格納したテーブルがあるとします。このとき「AさんとBさんのパスワードと生年月日を更新したい、そしてそれ以外のユーザの個人情報はそのままにしておきたい」というときは次のようなSQLにより実現することができます。\n\n```sql\nUPDATE table\nSET\n    password = CASE name\n        WHEN 'Aさん' THEN 'password_a'\n        WHEN 'Bさん' THEN 'password_b'\n        ELSE password\n    END,\n    \n    birthday = CASE name\n        WHEN 'Aさん' THEN 'birthday_a'\n        WHEN 'Bさん' THEN 'birthday_b'\n        ELSE birthday\n    END\n```\n\n注意すべきは`ELSE`です。`UPDATE`はテーブル全体、あるいは`WHERE`によって限定された範囲全体に対して更新処理を行おうとします。上述の例の場合は「AさんとBさん以外は更新しない」、つまり「AさんとBさん以外は現在のパスワードと生年月日のままにする」ということを明示的に宣言してやらねばなりません。\n\n上記のようなSQLがわかりづらいのは「条件節が戻り値を持つ」という点でしょうか。Lispなどの関数型言語に慣れていると、特に違和感なく受け入れられると思いますが……。\n","coediting":false,"comments_count":0,"created_at":"2016-10-23T19:43:35+09:00","group":null,"id":"35f00931ec8336b7e26b","likes_count":3,"private":false,"reactions_count":0,"tags":[{"name":"SQL","versions":[]}],"title":"いくつかの条件ごとに更新する行や内容を切り替える","updated_at":"2016-10-23T19:43:35+09:00","url":"https://qiita.com/neko_the_shadow/items/35f00931ec8336b7e26b","user":{"description":"IT業界の片隅でひっそり生きるシステムエンジニアです(´・ω・｀)","facebook_id":"","followees_count":0,"followers_count":32,"github_login_name":null,"id":"neko_the_shadow","items_count":165,"linkedin_id":"","location":"神奈川県川崎市","name":"","organization":"","permanent_id":105859,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/105859/profile-images/1473709753","team_only":false,"twitter_screen_name":"neko_the_shadow","website_url":"https://nekotheshadow.github.io/"},"page_views_count":null}