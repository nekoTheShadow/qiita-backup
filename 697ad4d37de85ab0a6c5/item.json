{"rendered_body":"<p><strong>注意: この記事は次の環境で確認を行いました。</strong></p>\n\n<ul>\n<li>Microsoft Windows 10 Pro Edition</li>\n<li>OpenJDK 11</li>\n<li>Eclipse 2019-09 (Pleiades All in One)</li>\n</ul>\n\n<hr>\n\n<p><code>C:\\sample</code>というフォルダに<code>helloworld.bat</code>が設置されているとします。内容は次の通りです。</p>\n\n<div class=\"code-frame\" data-lang=\"cmd\">\n<div class=\"code-lang\"><span class=\"bold\">helloworld.bat</span></div>\n<div class=\"highlight\"><pre>@echo off\necho Hello World 01\necho Hello World 02\necho Hello World 03\n</pre></div>\n</div>\n\n<p>この<code>helloworld.bat</code>をJavaから実行するサンプルが以下になります。</p>\n\n<div class=\"code-frame\" data-lang=\"java\"><div class=\"highlight\"><pre><span class=\"c1\">// ProcessBuilderの生成</span>\n<span class=\"c1\">// helloworld.batのstdinとstderrを親プロセスのstdinとstderrにつなぐ。</span>\n<span class=\"kt\">var</span> <span class=\"n\">processBuilder</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nc\">ProcessBuilder</span><span class=\"o\">(</span><span class=\"s\">\"C:\\\\sample\\\\helloworld.bat\"</span><span class=\"o\">);</span>\n<span class=\"n\">processBuilder</span><span class=\"o\">.</span><span class=\"na\">redirectOutput</span><span class=\"o\">(</span><span class=\"nc\">ProcessBuilder</span><span class=\"o\">.</span><span class=\"na\">Redirect</span><span class=\"o\">.</span><span class=\"na\">INHERIT</span><span class=\"o\">);</span>\n<span class=\"n\">processBuilder</span><span class=\"o\">.</span><span class=\"na\">redirectError</span><span class=\"o\">(</span><span class=\"nc\">ProcessBuilder</span><span class=\"o\">.</span><span class=\"na\">Redirect</span><span class=\"o\">.</span><span class=\"na\">INHERIT</span><span class=\"o\">);</span>\n\n<span class=\"c1\">// Processの生成</span>\n<span class=\"c1\">// helloworld.batを子プロセスとして実行し、プロセス実行が終わるまで親スレッドを停止する。</span>\n<span class=\"kt\">var</span> <span class=\"n\">process</span> <span class=\"o\">=</span> <span class=\"n\">processBuilder</span><span class=\"o\">.</span><span class=\"na\">start</span><span class=\"o\">();</span>\n<span class=\"n\">process</span><span class=\"o\">.</span><span class=\"na\">waitFor</span><span class=\"o\">();</span>\n</pre></div></div>\n\n<p>これを実行すると、次のような文字列がJavaの標準出力に出力されているはずです。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>Hello World 01\nHello World 02\nHello World 03\n</pre></div></div>\n\n<p><strong>個人的に「はまった」ポイントとしては、バッチファイルの拡張子。実行したいファイルの拡張子はbatまたはcmdである必要があります。</strong> </p>\n\n<p>いわゆるシェルスクリプトの世界では、スクリプトが記述されたファイルの拡張子に指定はありません。慣習的に<code>sh</code>とすることが多いと思いますが、実行権限さえ付与されていれば、<code>txt</code>でも<code>html</code>でも実行可能ですし、拡張子がなくても問題ありません。</p>\n\n<p>一方、Windowsの世界では、そのファイルがバッチファイルかどうかを判定するにあたって、拡張子を利用しています。つまり拡張子がbatもしくはcmdの場合、そのファイルを実行可能なバッチファイルとみなすわけです。</p>\n\n<p>自分がはまっていたのは「拡張子batでもcmdでもないファイルを<code>ProcessBuider</code>や<code>Process</code>で実行しようとして、うまくいかない」というところでした。わたしはいわゆるオープン系のアプリケーション開発者です。その世界(つまりLinuxやUnix)では実行権限が正しく付与されていれば、拡張子のいかんを問わず実行できてしまうわけで、「特定の拡張子を指定する必要がある」という発想になかなかいたりませんでした(´・ω・｀)</p>\n","body":"__注意: この記事は次の環境で確認を行いました。__\n\n- Microsoft Windows 10 Pro Edition\n- OpenJDK 11\n- Eclipse 2019-09 (Pleiades All in One)\n\n---\n\n`C:\\sample`というフォルダに`helloworld.bat`が設置されているとします。内容は次の通りです。\n\n```cmd:helloworld.bat\n@echo off\necho Hello World 01\necho Hello World 02\necho Hello World 03\n```\n\nこの`helloworld.bat`をJavaから実行するサンプルが以下になります。\n\n```java\n// ProcessBuilderの生成\n// helloworld.batのstdinとstderrを親プロセスのstdinとstderrにつなぐ。\nvar processBuilder = new ProcessBuilder(\"C:\\\\sample\\\\helloworld.bat\");\nprocessBuilder.redirectOutput(ProcessBuilder.Redirect.INHERIT);\nprocessBuilder.redirectError(ProcessBuilder.Redirect.INHERIT);\n\n// Processの生成\n// helloworld.batを子プロセスとして実行し、プロセス実行が終わるまで親スレッドを停止する。\nvar process = processBuilder.start();\nprocess.waitFor();\n```\n\nこれを実行すると、次のような文字列がJavaの標準出力に出力されているはずです。\n\n```\nHello World 01\nHello World 02\nHello World 03\n```\n\n__個人的に「はまった」ポイントとしては、バッチファイルの拡張子。実行したいファイルの拡張子はbatまたはcmdである必要があります。__ \n\nいわゆるシェルスクリプトの世界では、スクリプトが記述されたファイルの拡張子に指定はありません。慣習的に`sh`とすることが多いと思いますが、実行権限さえ付与されていれば、`txt`でも`html`でも実行可能ですし、拡張子がなくても問題ありません。\n\n一方、Windowsの世界では、そのファイルがバッチファイルかどうかを判定するにあたって、拡張子を利用しています。つまり拡張子がbatもしくはcmdの場合、そのファイルを実行可能なバッチファイルとみなすわけです。\n\n自分がはまっていたのは「拡張子batでもcmdでもないファイルを`ProcessBuider`や`Process`で実行しようとして、うまくいかない」というところでした。わたしはいわゆるオープン系のアプリケーション開発者です。その世界(つまりLinuxやUnix)では実行権限が正しく付与されていれば、拡張子のいかんを問わず実行できてしまうわけで、「特定の拡張子を指定する必要がある」という発想になかなかいたりませんでした(´・ω・｀)\n","coediting":false,"comments_count":0,"created_at":"2019-09-30T00:11:38+09:00","group":null,"id":"697ad4d37de85ab0a6c5","likes_count":6,"private":false,"reactions_count":0,"tags":[{"name":"Java","versions":[]}],"title":"Javaからバッチファイルを実行する","updated_at":"2019-09-30T00:11:38+09:00","url":"https://qiita.com/neko_the_shadow/items/697ad4d37de85ab0a6c5","user":{"description":"IT業界の片隅でひっそり生きるシステムエンジニアです(´・ω・｀)","facebook_id":"","followees_count":0,"followers_count":35,"github_login_name":null,"id":"neko_the_shadow","items_count":180,"linkedin_id":"","location":"神奈川県川崎市","name":"","organization":"","permanent_id":105859,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/105859/profile-images/1473709753","team_only":false,"twitter_screen_name":"neko_the_shadow","website_url":"https://nekotheshadow.github.io/"},"page_views_count":null}