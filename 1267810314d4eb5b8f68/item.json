{"rendered_body":"<p><a href=\"https://codeiq.jp/q/3519\" rel=\"nofollow noopener\" target=\"_blank\">「進捗いいわけマーク」問題</a>の公開期限が終了したということで、自分の提出コードを公開したいと思います。利用言語はC#。ここ2-3か月C#の勉強中のため、腕試し的に解いてみました。</p>\n\n<div class=\"code-frame\" data-lang=\"csharp\"><div class=\"highlight\"><pre><code><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Linq</span><span class=\"p\">;</span>\n\n<span class=\"k\">public</span> <span class=\"k\">class</span> <span class=\"nc\">Program</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">public</span> <span class=\"k\">static</span> <span class=\"k\">void</span> <span class=\"nf\">Main</span><span class=\"p\">(</span><span class=\"kt\">string</span><span class=\"p\">[]</span> <span class=\"n\">args</span><span class=\"p\">)</span>\n    <span class=\"p\">{</span>\n        <span class=\"kt\">var</span> <span class=\"n\">x</span> <span class=\"p\">=</span> <span class=\"kt\">int</span><span class=\"p\">.</span><span class=\"nf\">Parse</span><span class=\"p\">(</span><span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">ReadLine</span><span class=\"p\">());</span>\n        <span class=\"kt\">var</span> <span class=\"n\">ans</span> <span class=\"p\">=</span> <span class=\"nf\">Draw</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">);</span>\n        <span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"n\">ans</span><span class=\"p\">);</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"k\">public</span> <span class=\"k\">static</span> <span class=\"kt\">string</span> <span class=\"nf\">Draw</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">x</span><span class=\"p\">)</span>\n    <span class=\"p\">{</span>\n        <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">x</span> <span class=\"p\">%</span> <span class=\"m\">2</span> <span class=\"p\">==</span> <span class=\"m\">0</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"k\">return</span> <span class=\"s\">\"invalid\"</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"kt\">var</span> <span class=\"n\">mid</span> <span class=\"p\">=</span> <span class=\"n\">x</span> <span class=\"p\">/</span> <span class=\"m\">2</span><span class=\"p\">;</span>\n        <span class=\"kt\">var</span> <span class=\"n\">matrix</span> <span class=\"p\">=</span> <span class=\"n\">Enumerable</span><span class=\"p\">.</span><span class=\"nf\">Range</span><span class=\"p\">(</span><span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">).</span><span class=\"nf\">Select</span><span class=\"p\">((</span><span class=\"n\">i</span><span class=\"p\">)</span> <span class=\"p\">=&gt;</span> <span class=\"n\">Enumerable</span><span class=\"p\">.</span><span class=\"nf\">Repeat</span><span class=\"p\">(</span><span class=\"s\">\".\"</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">).</span><span class=\"nf\">ToList</span><span class=\"p\">()).</span><span class=\"nf\">ToList</span><span class=\"p\">();</span>\n        <span class=\"k\">foreach</span> <span class=\"p\">(</span><span class=\"kt\">var</span> <span class=\"n\">i</span> <span class=\"k\">in</span> <span class=\"n\">Enumerable</span><span class=\"p\">.</span><span class=\"nf\">Range</span><span class=\"p\">(</span><span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">))</span>\n        <span class=\"p\">{</span>\n            <span class=\"k\">foreach</span> <span class=\"p\">(</span><span class=\"kt\">var</span> <span class=\"n\">j</span> <span class=\"k\">in</span> <span class=\"n\">Enumerable</span><span class=\"p\">.</span><span class=\"nf\">Range</span><span class=\"p\">(</span><span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">))</span>\n            <span class=\"p\">{</span>\n                <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">j</span> <span class=\"p\">==</span> <span class=\"n\">mid</span> <span class=\"p\">||</span> <span class=\"p\">((</span><span class=\"n\">i</span> <span class=\"p\">==</span> <span class=\"m\">0</span> <span class=\"p\">||</span> <span class=\"n\">i</span> <span class=\"p\">==</span> <span class=\"n\">x</span> <span class=\"p\">-</span> <span class=\"m\">1</span><span class=\"p\">)</span> <span class=\"p\">&amp;&amp;</span> <span class=\"p\">(</span><span class=\"n\">j</span> <span class=\"p\">==</span> <span class=\"n\">mid</span> <span class=\"p\">-</span> <span class=\"m\">1</span> <span class=\"p\">||</span> <span class=\"n\">j</span> <span class=\"p\">==</span> <span class=\"n\">mid</span> <span class=\"p\">+</span> <span class=\"m\">1</span><span class=\"p\">)))</span>\n                <span class=\"p\">{</span>\n                    <span class=\"n\">matrix</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">][</span><span class=\"n\">j</span><span class=\"p\">]</span> <span class=\"p\">=</span> <span class=\"s\">\"i\"</span><span class=\"p\">;</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"k\">return</span> <span class=\"kt\">string</span><span class=\"p\">.</span><span class=\"nf\">Join</span><span class=\"p\">(</span><span class=\"n\">System</span><span class=\"p\">.</span><span class=\"n\">Environment</span><span class=\"p\">.</span><span class=\"n\">NewLine</span><span class=\"p\">,</span> <span class=\"n\">matrix</span><span class=\"p\">.</span><span class=\"nf\">Select</span><span class=\"p\">((</span><span class=\"n\">row</span><span class=\"p\">)</span> <span class=\"p\">=&gt;</span> <span class=\"kt\">string</span><span class=\"p\">.</span><span class=\"nf\">Join</span><span class=\"p\">(</span><span class=\"s\">\"\"</span><span class=\"p\">,</span> <span class=\"n\">row</span><span class=\"p\">)));</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<p>まず<code>.</code>で埋められたn×nの二次元配列を準備し、その要素をすべてなめながら、適切な位置<code>i</code>に置き換えるというロジックになります。ただ改めて見返してみると――もうちょっと書きようがあったような気がします(´・ω・｀) とくに「二次元配列の要素をすべて探索する」部分は計算量が$O(n^2)$になるということもあり、見直したい。今回は<code>n</code>の制約が1-100と小さかったからTLEしませんでしたが……。</p>\n\n<p>あとはLINQをもう少しうまく使いこなしたいですね。上記のコードだと二次元配列の生成と初期化ぐらいにしかLINQを利用していません。LINQは高機能でかつ可読性にも優れているので、活用してきたいですね。まあC#初心者ということで許してください(´・ω・｀)</p>\n\n<p>お断り:CodeIQの解答を公開するのはサービスの性質上、基本的にはNGですが、出題者が了承する場合はOK－－という運用というか風潮があります。今回は<a href=\"https://twitter.com/tbpgr/status/951111975999696901\" rel=\"nofollow noopener\" target=\"_blank\">出題者である@tbpgrさんのOKが出ている</a>ため、解答を公開しています。</p>\n","body":"[「進捗いいわけマーク」問題](https://codeiq.jp/q/3519)の公開期限が終了したということで、自分の提出コードを公開したいと思います。利用言語はC#。ここ2-3か月C#の勉強中のため、腕試し的に解いてみました。\n\n```csharp\nusing System;\nusing System.Linq;\n\npublic class Program\n{\n    public static void Main(string[] args)\n    {\n        var x = int.Parse(Console.ReadLine());\n        var ans = Draw(x);\n        Console.WriteLine(ans);\n    }\n\n    public static string Draw(int x)\n    {\n        if (x % 2 == 0)\n        {\n            return \"invalid\";\n        }\n\n        var mid = x / 2;\n        var matrix = Enumerable.Range(0, x).Select((i) => Enumerable.Repeat(\".\", x).ToList()).ToList();\n        foreach (var i in Enumerable.Range(0, x))\n        {\n            foreach (var j in Enumerable.Range(0, x))\n            {\n                if (j == mid || ((i == 0 || i == x - 1) && (j == mid - 1 || j == mid + 1)))\n                {\n                    matrix[i][j] = \"i\";\n                }\n            }\n        }\n\n        return string.Join(System.Environment.NewLine, matrix.Select((row) => string.Join(\"\", row)));\n    }\n}\n```\n\nまず`.`で埋められたn×nの二次元配列を準備し、その要素をすべてなめながら、適切な位置`i`に置き換えるというロジックになります。ただ改めて見返してみると――もうちょっと書きようがあったような気がします(´・ω・｀) とくに「二次元配列の要素をすべて探索する」部分は計算量が$O(n^2)$になるということもあり、見直したい。今回は`n`の制約が1-100と小さかったからTLEしませんでしたが……。\n\nあとはLINQをもう少しうまく使いこなしたいですね。上記のコードだと二次元配列の生成と初期化ぐらいにしかLINQを利用していません。LINQは高機能でかつ可読性にも優れているので、活用してきたいですね。まあC#初心者ということで許してください(´・ω・｀)\n\nお断り:CodeIQの解答を公開するのはサービスの性質上、基本的にはNGですが、出題者が了承する場合はOK－－という運用というか風潮があります。今回は[出題者である@tbpgrさんのOKが出ている](https://twitter.com/tbpgr/status/951111975999696901)ため、解答を公開しています。\n","coediting":false,"comments_count":0,"created_at":"2018-01-11T23:39:20+09:00","group":null,"id":"1267810314d4eb5b8f68","likes_count":1,"private":false,"reactions_count":0,"stocks_count":1,"tags":[{"name":"C#","versions":[]},{"name":"codeiq","versions":[]}],"title":"CodeIQ「進捗いいわけマーク」問題に参加しました。","updated_at":"2018-01-11T23:39:20+09:00","url":"https://qiita.com/neko_the_shadow/items/1267810314d4eb5b8f68","user":{"description":"IT業界の片隅でひっそり生きるシステムエンジニアです(´・ω・｀)","facebook_id":"","followees_count":0,"followers_count":35,"github_login_name":null,"id":"neko_the_shadow","items_count":210,"linkedin_id":"","location":"神奈川県川崎市","name":"","organization":"","permanent_id":105859,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/105859/profile-images/1473709753","team_only":false,"twitter_screen_name":"neko_the_shadow","website_url":"https://nekotheshadow.github.io/"},"page_views_count":915,"team_membership":null,"organization_url_name":null}