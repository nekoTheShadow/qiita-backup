{"rendered_body":"<p>必要になるたびにぐぐるのに疲れたので自分用のメモとしておいておきますね(´・ω・｀)</p>\n\n<p><code>InputStream</code>をすべて読み込んで<code>String</code>に変換したい場合、おおよそ以下のように書いておけば大丈夫です。</p>\n\n<div class=\"code-frame\" data-lang=\"java\"><div class=\"highlight\"><pre class=\"with-code\"><code><span class=\"kd\">public</span> <span class=\"kd\">static</span> <span class=\"nc\">String</span> <span class=\"nf\">readAll</span><span class=\"o\">(</span><span class=\"nc\">InputStream</span> <span class=\"n\">in</span><span class=\"o\">)</span> <span class=\"kd\">throws</span> <span class=\"nc\">IOException</span> <span class=\"o\">{</span>\n    <span class=\"kt\">byte</span><span class=\"o\">[]</span> <span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"kt\">byte</span><span class=\"o\">[</span><span class=\"mi\">1024</span><span class=\"o\">];</span>\n    <span class=\"nc\">ByteArrayOutputStream</span> <span class=\"n\">out</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nc\">ByteArrayOutputStream</span><span class=\"o\">();</span>\n    <span class=\"kt\">int</span> <span class=\"n\">len</span><span class=\"o\">;</span>\n    <span class=\"k\">while</span> <span class=\"o\">((</span><span class=\"n\">len</span> <span class=\"o\">=</span> <span class=\"n\">in</span><span class=\"o\">.</span><span class=\"na\">read</span><span class=\"o\">(</span><span class=\"n\">b</span><span class=\"o\">))</span> <span class=\"o\">!=</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"n\">out</span><span class=\"o\">.</span><span class=\"na\">write</span><span class=\"o\">(</span><span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">len</span><span class=\"o\">);</span>\n    <span class=\"o\">}</span>\n    <span class=\"k\">return</span> <span class=\"n\">out</span><span class=\"o\">.</span><span class=\"na\">toString</span><span class=\"o\">();</span>\n<span class=\"o\">}</span>\n</code></pre></div></div>\n\n<p>また<code>String</code>に変換したい<code>InputStream</code>の文字コードがUTF-8ではない場合、<code>ByteArrayOutputStream.toString(Charset charset)</code>を利用すればよいです。たとえば<code>InputStream</code>がWindows-31Jの場合は以下のように書きます。</p>\n\n<div class=\"code-frame\" data-lang=\"java\"><div class=\"highlight\"><pre class=\"with-code\"><code><span class=\"kd\">public</span> <span class=\"kd\">static</span> <span class=\"nc\">String</span> <span class=\"nf\">readAll</span><span class=\"o\">(</span><span class=\"nc\">InputStream</span> <span class=\"n\">in</span><span class=\"o\">)</span> <span class=\"kd\">throws</span> <span class=\"nc\">IOException</span> <span class=\"o\">{</span>\n    <span class=\"kt\">byte</span><span class=\"o\">[]</span> <span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"kt\">byte</span><span class=\"o\">[</span><span class=\"mi\">1024</span><span class=\"o\">];</span>\n    <span class=\"nc\">ByteArrayOutputStream</span> <span class=\"n\">out</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nc\">ByteArrayOutputStream</span><span class=\"o\">();</span>\n    <span class=\"kt\">int</span> <span class=\"n\">len</span><span class=\"o\">;</span>\n    <span class=\"k\">while</span> <span class=\"o\">((</span><span class=\"n\">len</span> <span class=\"o\">=</span> <span class=\"n\">in</span><span class=\"o\">.</span><span class=\"na\">read</span><span class=\"o\">(</span><span class=\"n\">b</span><span class=\"o\">))</span> <span class=\"o\">!=</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"n\">out</span><span class=\"o\">.</span><span class=\"na\">write</span><span class=\"o\">(</span><span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">len</span><span class=\"o\">);</span>\n    <span class=\"o\">}</span>\n    <span class=\"k\">return</span> <span class=\"n\">out</span><span class=\"o\">.</span><span class=\"na\">toString</span><span class=\"o\">(</span><span class=\"nc\">Charset</span><span class=\"o\">.</span><span class=\"na\">forName</span><span class=\"o\">(</span><span class=\"s\">\"Windows-31J\"</span><span class=\"o\">));</span>\n<span class=\"o\">}</span>\n</code></pre></div></div>\n\n<p>なお車輪の再発明を避ける意味でも、Apache CommonsのIOUtilsなど、OSSのライブラリが使える場合はそちらを使いましょう(´・ω・`)</p>\n\n<p><strong>環境情報:</strong></p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre class=\"with-code\"><code>C:\\&gt;javac -version\njavac 11.0.3\nC:\\&gt;java -version\nopenjdk version \"11.0.3\" 2019-04-16\nOpenJDK Runtime Environment AdoptOpenJDK (build 11.0.3+7)\nOpenJDK 64-Bit Server VM AdoptOpenJDK (build 11.0.3+7, mixed mode)\n</code></pre></div></div>\n","body":"必要になるたびにぐぐるのに疲れたので自分用のメモとしておいておきますね(´・ω・｀)\n\n`InputStream`をすべて読み込んで`String`に変換したい場合、おおよそ以下のように書いておけば大丈夫です。\n\n```java\npublic static String readAll(InputStream in) throws IOException {\n    byte[] b = new byte[1024];\n    ByteArrayOutputStream out = new ByteArrayOutputStream();\n    int len;\n    while ((len = in.read(b)) != -1) {\n        out.write(b, 0, len);\n    }\n    return out.toString();\n}\n```\n\nまた`String`に変換したい`InputStream`の文字コードがUTF-8ではない場合、`ByteArrayOutputStream.toString(Charset charset)`を利用すればよいです。たとえば`InputStream`がWindows-31Jの場合は以下のように書きます。\n\n```java\npublic static String readAll(InputStream in) throws IOException {\n    byte[] b = new byte[1024];\n    ByteArrayOutputStream out = new ByteArrayOutputStream();\n    int len;\n    while ((len = in.read(b)) != -1) {\n        out.write(b, 0, len);\n    }\n    return out.toString(Charset.forName(\"Windows-31J\"));\n}\n```\n\nなお車輪の再発明を避ける意味でも、Apache CommonsのIOUtilsなど、OSSのライブラリが使える場合はそちらを使いましょう(´・ω・`)\n\n**環境情報:**\n\n```\nC:\\>javac -version\njavac 11.0.3\nC:\\>java -version\nopenjdk version \"11.0.3\" 2019-04-16\nOpenJDK Runtime Environment AdoptOpenJDK (build 11.0.3+7)\nOpenJDK 64-Bit Server VM AdoptOpenJDK (build 11.0.3+7, mixed mode)\n```\n","coediting":false,"comments_count":0,"created_at":"2021-01-18T20:36:00+09:00","group":null,"id":"7101490db65ecd657c47","likes_count":0,"private":false,"reactions_count":0,"tags":[{"name":"Java","versions":[]}],"title":"InputStreamをStringに変換したい","updated_at":"2021-01-18T20:36:00+09:00","url":"https://qiita.com/neko_the_shadow/items/7101490db65ecd657c47","user":{"description":"IT業界の片隅でひっそり生きるシステムエンジニアです(´・ω・｀)","facebook_id":"","followees_count":0,"followers_count":35,"github_login_name":null,"id":"neko_the_shadow","items_count":186,"linkedin_id":"","location":"神奈川県川崎市","name":"","organization":"","permanent_id":105859,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/105859/profile-images/1473709753","team_only":false,"twitter_screen_name":"neko_the_shadow","website_url":"https://nekotheshadow.github.io/"},"page_views_count":null,"team_membership":null}