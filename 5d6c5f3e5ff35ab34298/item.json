{"rendered_body":"<p>ディレクトリが空ディレクトリかどうかによって条件分岐を行いたいということがよくあると思います。たとえば「対象のディレクトリがファイルやディレクトリを有しているとき、その中身をすべて削除する」という処理は次のように書くことができます。</p>\n\n<div class=\"code-frame\" data-lang=\"bash\"><div class=\"highlight\"><pre><span class=\"nv\">directory</span><span class=\"o\">=</span>/hoge/hoge\n<span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-n</span> <span class=\"s2\">\"</span><span class=\"si\">$(</span><span class=\"nb\">ls</span> <span class=\"nv\">$directory</span><span class=\"si\">)</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n    </span><span class=\"nb\">rm</span> <span class=\"nt\">-r</span> <span class=\"nv\">$directory</span>\n<span class=\"k\">fi</span>\n</pre></div></div>\n\n<p><code>-n</code>は引数が空文字以外ならtrueを、それ以外ならfalseを返します。対象のディレクトリが空のとき<code>ls</code>は何も返さず、したがってそれを文字列化した<code>\"$(ls $directory)\"</code>が空文字となるため、<code>[ -z $(ls $directory) ]</code>がtrueとなり<code>if</code>の本体が実行されるというわけです。</p>\n\n<p>ちなみに<code>-z</code>は<code>-n</code>の逆、つまり引数が空文字ならtrueを、それ以外ならfalseを返します。次の例ではディレクトリが空かどうかをみて、空ならばそのディレクトリ直下にcsvファイルを配置するという処理を行っています。</p>\n\n<div class=\"code-frame\" data-lang=\"bash\"><div class=\"highlight\"><pre>directory <span class=\"o\">=</span>/foo/foo\n<span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"si\">$(</span><span class=\"nb\">ls</span> <span class=\"nv\">$directory</span><span class=\"si\">)</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n    </span><span class=\"nb\">touch </span>directory/foo.csv\n<span class=\"k\">fi</span>\n</pre></div></div>\n","body":"\nディレクトリが空ディレクトリかどうかによって条件分岐を行いたいということがよくあると思います。たとえば「対象のディレクトリがファイルやディレクトリを有しているとき、その中身をすべて削除する」という処理は次のように書くことができます。\n\n```bash\ndirectory=/hoge/hoge\nif [ -n \"$(ls $directory)\" ]; then\n    rm -r $directory\nfi\n```\n\n`-n`は引数が空文字以外ならtrueを、それ以外ならfalseを返します。対象のディレクトリが空のとき`ls`は何も返さず、したがってそれを文字列化した`\"$(ls $directory)\"`が空文字となるため、`[ -z $(ls $directory) ]`がtrueとなり`if`の本体が実行されるというわけです。\n\nちなみに`-z`は`-n`の逆、つまり引数が空文字ならtrueを、それ以外ならfalseを返します。次の例ではディレクトリが空かどうかをみて、空ならばそのディレクトリ直下にcsvファイルを配置するという処理を行っています。\n\n```bash\ndirectory =/foo/foo\nif [ -z \"$(ls $directory)\" ]; then\n    touch directory/foo.csv\nfi\n```\n\n","coediting":false,"comments_count":2,"created_at":"2016-11-20T22:39:55+09:00","group":null,"id":"5d6c5f3e5ff35ab34298","likes_count":13,"private":false,"reactions_count":0,"tags":[{"name":"ShellScript","versions":[]},{"name":"Bash","versions":[]}],"title":"ディレクトリの中身の有無によって条件分岐をしたい","updated_at":"2016-11-21T22:23:40+09:00","url":"https://qiita.com/neko_the_shadow/items/5d6c5f3e5ff35ab34298","user":{"description":"IT業界の片隅でひっそり生きるシステムエンジニアです(´・ω・｀)","facebook_id":"","followees_count":0,"followers_count":32,"github_login_name":null,"id":"neko_the_shadow","items_count":166,"linkedin_id":"","location":"神奈川県川崎市","name":"","organization":"","permanent_id":105859,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/105859/profile-images/1473709753","team_only":false,"twitter_screen_name":"neko_the_shadow","website_url":"https://nekotheshadow.github.io/"},"page_views_count":null}