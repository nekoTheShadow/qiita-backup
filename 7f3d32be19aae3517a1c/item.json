{"rendered_body":"<p>エクセルがダウンロードできるサーブレットを作成する機会があり、なかなかにはまったので、そのサンプルを残しておきたいと思います。なおJavaからエクセルを操作するにあたっては<a href=\"https://poi.apache.org/\" rel=\"nofollow noopener\" target=\"_blank\">Apache POI</a>を利用していますが、その導入方法や使用方法については省略しています。</p>\n\n<p>まずはServletクラスを以下のように作成します。</p>\n\n<div class=\"code-frame\" data-lang=\"java\"><div class=\"highlight\"><pre><code><span class=\"kn\">package</span> <span class=\"nn\">servlet</span><span class=\"o\">;</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">java.io.IOException</span><span class=\"o\">;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">java.io.OutputStream</span><span class=\"o\">;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">java.io.UnsupportedEncodingException</span><span class=\"o\">;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">java.text.SimpleDateFormat</span><span class=\"o\">;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">java.util.Date</span><span class=\"o\">;</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">javax.servlet.ServletException</span><span class=\"o\">;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">javax.servlet.annotation.WebServlet</span><span class=\"o\">;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">javax.servlet.http.HttpServlet</span><span class=\"o\">;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">javax.servlet.http.HttpServletRequest</span><span class=\"o\">;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">javax.servlet.http.HttpServletResponse</span><span class=\"o\">;</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">org.apache.poi.ss.usermodel.Sheet</span><span class=\"o\">;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">org.apache.poi.ss.usermodel.Workbook</span><span class=\"o\">;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">org.apache.poi.xssf.usermodel.XSSFWorkbook</span><span class=\"o\">;</span>\n\n<span class=\"cm\">/**\n * エクセルをダウンロードするサーブレット。\n * @author nekoTheShadow\n *\n */</span>\n<span class=\"nd\">@WebServlet</span><span class=\"o\">(</span><span class=\"s\">\"/download\"</span><span class=\"o\">)</span>\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">ExcelDownloadServlet</span> <span class=\"kd\">extends</span> <span class=\"nc\">HttpServlet</span> <span class=\"o\">{</span>\n\n    <span class=\"cm\">/**\n     * ダウンロードページを表示する。\n     */</span>\n    <span class=\"kd\">protected</span> <span class=\"kt\">void</span> <span class=\"nf\">doGet</span><span class=\"o\">(</span><span class=\"nc\">HttpServletRequest</span> <span class=\"n\">request</span><span class=\"o\">,</span> <span class=\"nc\">HttpServletResponse</span> <span class=\"n\">response</span><span class=\"o\">)</span> <span class=\"kd\">throws</span> <span class=\"nc\">ServletException</span><span class=\"o\">,</span> <span class=\"nc\">IOException</span> <span class=\"o\">{</span>\n        <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"na\">getRequestDispatcher</span><span class=\"o\">(</span><span class=\"s\">\"/WEB-INF/jsp/download.jsp\"</span><span class=\"o\">).</span><span class=\"na\">forward</span><span class=\"o\">(</span><span class=\"n\">request</span><span class=\"o\">,</span> <span class=\"n\">response</span><span class=\"o\">);</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"cm\">/**\n     * POSTされたフォームデータに基づきエクセルを生成し、ダウンロードさせる。\n     * @throws UnsupportedEncodingException\n     */</span>\n    <span class=\"kd\">protected</span> <span class=\"kt\">void</span> <span class=\"nf\">doPost</span><span class=\"o\">(</span><span class=\"nc\">HttpServletRequest</span> <span class=\"n\">request</span><span class=\"o\">,</span> <span class=\"nc\">HttpServletResponse</span> <span class=\"n\">response</span><span class=\"o\">)</span> <span class=\"kd\">throws</span> <span class=\"nc\">UnsupportedEncodingException</span> <span class=\"o\">{</span>\n\n        <span class=\"c1\">// リクエストの文字コードをUTF-8に変換する。</span>\n        <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"na\">setCharacterEncoding</span><span class=\"o\">(</span><span class=\"s\">\"UTF-8\"</span><span class=\"o\">);</span>\n\n        <span class=\"c1\">// リクエストクエリを取得する。</span>\n        <span class=\"nc\">String</span> <span class=\"n\">param1</span> <span class=\"o\">=</span> <span class=\"o\">(</span><span class=\"nc\">String</span><span class=\"o\">)</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"na\">getParameter</span><span class=\"o\">(</span><span class=\"s\">\"param1\"</span><span class=\"o\">);</span>\n        <span class=\"nc\">String</span> <span class=\"n\">param2</span> <span class=\"o\">=</span> <span class=\"o\">(</span><span class=\"nc\">String</span><span class=\"o\">)</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"na\">getParameter</span><span class=\"o\">(</span><span class=\"s\">\"param2\"</span><span class=\"o\">);</span>\n        <span class=\"nc\">String</span> <span class=\"n\">param3</span> <span class=\"o\">=</span> <span class=\"o\">(</span><span class=\"nc\">String</span><span class=\"o\">)</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"na\">getParameter</span><span class=\"o\">(</span><span class=\"s\">\"param3\"</span><span class=\"o\">);</span>\n\n        <span class=\"c1\">// ファイル名を生成する: ファイル名はダウンロード日付とする。</span>\n        <span class=\"nc\">SimpleDateFormat</span> <span class=\"n\">simpleDataFormat</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nc\">SimpleDateFormat</span><span class=\"o\">(</span><span class=\"s\">\"yyyy-MM-dd\"</span><span class=\"o\">);</span>\n        <span class=\"nc\">String</span> <span class=\"n\">filename</span> <span class=\"o\">=</span> <span class=\"n\">simpleDataFormat</span><span class=\"o\">.</span><span class=\"na\">format</span><span class=\"o\">(</span><span class=\"k\">new</span> <span class=\"nc\">Date</span><span class=\"o\">())</span> <span class=\"o\">+</span> <span class=\"s\">\".xlsx\"</span><span class=\"o\">;</span>\n\n        <span class=\"c1\">// レスポンスヘッダを設定する。</span>\n        <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"na\">setContentType</span><span class=\"o\">(</span><span class=\"s\">\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"</span><span class=\"o\">);</span>\n        <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"na\">setHeader</span><span class=\"o\">(</span><span class=\"s\">\"content-disposition\"</span><span class=\"o\">,</span> <span class=\"nc\">String</span><span class=\"o\">.</span><span class=\"na\">format</span><span class=\"o\">(</span><span class=\"s\">\"attachment; filename=\\\"%s\\\"\"</span><span class=\"o\">,</span> <span class=\"n\">filename</span><span class=\"o\">));</span>\n        <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"na\">setCharacterEncoding</span><span class=\"o\">(</span><span class=\"s\">\"UTF-8\"</span><span class=\"o\">);</span>\n\n        <span class=\"c1\">// ワークブックとバイトストリーム(レスポンス)を生成する。</span>\n        <span class=\"c1\">// このふたつはcloseが必ず必要 =&gt; try-with-resource文を活用する、</span>\n        <span class=\"k\">try</span> <span class=\"o\">(</span><span class=\"nc\">Workbook</span> <span class=\"n\">workbook</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nc\">XSSFWorkbook</span><span class=\"o\">();</span>\n             <span class=\"nc\">OutputStream</span> <span class=\"n\">outputStream</span> <span class=\"o\">=</span> <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"na\">getOutputStream</span><span class=\"o\">())</span> <span class=\"o\">{</span>\n\n            <span class=\"c1\">// シートを生成する: 実際は複雑なロジックを用いるが、今回はサンプルなのでシンプルなものにとどめておく。</span>\n            <span class=\"nc\">Sheet</span> <span class=\"n\">sheet</span> <span class=\"o\">=</span> <span class=\"n\">workbook</span><span class=\"o\">.</span><span class=\"na\">createSheet</span><span class=\"o\">();</span>\n            <span class=\"n\">sheet</span><span class=\"o\">.</span><span class=\"na\">createRow</span><span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"o\">).</span><span class=\"na\">createCell</span><span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"o\">).</span><span class=\"na\">setCellValue</span><span class=\"o\">(</span><span class=\"n\">param1</span><span class=\"o\">);</span>\n            <span class=\"n\">sheet</span><span class=\"o\">.</span><span class=\"na\">createRow</span><span class=\"o\">(</span><span class=\"mi\">2</span><span class=\"o\">).</span><span class=\"na\">createCell</span><span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"o\">).</span><span class=\"na\">setCellValue</span><span class=\"o\">(</span><span class=\"n\">param2</span><span class=\"o\">);</span>\n            <span class=\"n\">sheet</span><span class=\"o\">.</span><span class=\"na\">createRow</span><span class=\"o\">(</span><span class=\"mi\">3</span><span class=\"o\">).</span><span class=\"na\">createCell</span><span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"o\">).</span><span class=\"na\">setCellValue</span><span class=\"o\">(</span><span class=\"n\">param3</span><span class=\"o\">);</span>\n\n            <span class=\"c1\">// ワークブックをレスポンスに出力する。</span>\n            <span class=\"n\">workbook</span><span class=\"o\">.</span><span class=\"na\">write</span><span class=\"o\">(</span><span class=\"n\">outputStream</span><span class=\"o\">);</span>\n        <span class=\"o\">}</span> <span class=\"k\">catch</span> <span class=\"o\">(</span><span class=\"nc\">IOException</span> <span class=\"n\">e</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n            <span class=\"n\">e</span><span class=\"o\">.</span><span class=\"na\">printStackTrace</span><span class=\"o\">();</span>\n        <span class=\"o\">}</span>\n\n    <span class=\"o\">}</span>\n\n\n<span class=\"o\">}</span>\n\n</code></pre></div></div>\n\n<p>次に<code>download</code>にアクセスした際に表示される<code>download.jsp</code>は次の通りです。これは<code>/WEB-INF/jsp</code>ディレクトリの直下に配置します。</p>\n\n<div class=\"code-frame\" data-lang=\"jsp\"><div class=\"highlight\"><pre><code><span class=\"nt\">&lt;%@ page </span><span class=\"na\">language=</span><span class=\"s\">\"java\"</span><span class=\"na\"> contentType=</span><span class=\"s\">\"text/html; charset=UTF-8\"</span><span class=\"na\"> pageEncoding=</span><span class=\"s\">\"UTF-8\"</span><span class=\"nt\">%&gt;</span>\n\n<span class=\"cp\">&lt;!DOCTYPE html&gt;</span>\n<span class=\"nt\">&lt;html&gt;</span>\n<span class=\"nt\">&lt;head&gt;</span>\n<span class=\"nt\">&lt;meta</span> <span class=\"na\">charset=</span><span class=\"s\">\"UTF-8\"</span><span class=\"nt\">&gt;</span>\n<span class=\"nt\">&lt;/head&gt;</span>\n<span class=\"nt\">&lt;body&gt;</span>\n    <span class=\"nt\">&lt;h1&gt;</span>Excel Download<span class=\"nt\">&lt;/h1&gt;</span>\n    <span class=\"nt\">&lt;form</span> <span class=\"na\">method=</span><span class=\"s\">\"post\"</span> <span class=\"na\">action=</span><span class=\"s\">\"/excel/download\"</span><span class=\"nt\">&gt;</span>\n        <span class=\"nt\">&lt;p&gt;&lt;label&gt;</span>パラメタ1:<span class=\"nt\">&lt;/label&gt;&lt;input</span> <span class=\"na\">type=</span><span class=\"s\">\"text\"</span> <span class=\"na\">name=</span><span class=\"s\">\"param1\"</span> <span class=\"nt\">/&gt;&lt;/p&gt;</span>\n        <span class=\"nt\">&lt;p&gt;&lt;label&gt;</span>パラメタ2:<span class=\"nt\">&lt;/label&gt;&lt;input</span> <span class=\"na\">type=</span><span class=\"s\">\"text\"</span> <span class=\"na\">name=</span><span class=\"s\">\"param2\"</span> <span class=\"nt\">/&gt;&lt;/p&gt;</span>\n        <span class=\"nt\">&lt;p&gt;&lt;label&gt;</span>パラメタ3:<span class=\"nt\">&lt;/label&gt;&lt;input</span> <span class=\"na\">type=</span><span class=\"s\">\"text\"</span> <span class=\"na\">name=</span><span class=\"s\">\"param3\"</span> <span class=\"nt\">/&gt;&lt;/p&gt;</span>\n\n        <span class=\"nt\">&lt;p&gt;&lt;input</span> <span class=\"na\">type=</span><span class=\"s\">\"submit\"</span> <span class=\"na\">value=</span><span class=\"s\">\"Download Excel\"</span> <span class=\"nt\">/&gt;&lt;/p&gt;</span>\n    <span class=\"nt\">&lt;/form&gt;</span>\n<span class=\"nt\">&lt;/body&gt;</span>\n<span class=\"nt\">&lt;/html&gt;</span>\n</code></pre></div></div>\n\n<p>必要なファイルを準備した後はデプロイし、<code>/download</code>にアクセスすると次のようなページが現れるはずです。</p>\n\n<p><a href=\"https://camo.qiitausercontent.com/9e65ca71e1b0cf986809c0dd59b8e3434edf6152/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f3130353835392f39346434356166612d383166392d663064642d616630622d6465623132306266346566322e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F105859%2F94d45afa-81f9-f0dd-af0b-deb120bf4ef2.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=1884ef6bedc4f5f39bfc817a212692c1\" alt=\"init.PNG\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/105859/94d45afa-81f9-f0dd-af0b-deb120bf4ef2.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F105859%2F94d45afa-81f9-f0dd-af0b-deb120bf4ef2.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=83751ec3591e68e005bd94012db1a540 1x\" loading=\"lazy\"></a></p>\n\n<p>あとはパラメタを入力して<code>Download Excel</code>を押下すると、タイトルが日付となったエクセルファイルがダウンロードされます。</p>\n\n<p><a href=\"https://camo.qiitausercontent.com/47ea9f7e96792955a38c59c5cfd596995ef94296/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f3130353835392f34633839363731652d643435312d626336622d653434652d3463333635316534393262342e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F105859%2F4c89671e-d451-bc6b-e44e-4c3651e492b4.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=5a20c9a9fd787d03d399c70abd210874\" alt=\"image\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/105859/4c89671e-d451-bc6b-e44e-4c3651e492b4.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F105859%2F4c89671e-d451-bc6b-e44e-4c3651e492b4.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=202933e11791cd5dc69c45369bed44c2 1x\" loading=\"lazy\"></a></p>\n\n<p>そして実際にダウンロードしたエクセルファイルを開いてみると、とりわけ壊れたりなどせず、ちゃんとエクセルファイルが作られていることがわかります。</p>\n\n<p><a href=\"https://camo.qiitausercontent.com/c142eb8fba71d4b57b13a11df1f23a49b14b57e9/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f3130353835392f32623439353232362d643331642d613532352d643662642d3966666534386262356633352e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F105859%2F2b495226-d31d-a525-d6bd-9ffe48bb5f35.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=811db752b6dd3074c02f5f195f52fb8a\" alt=\"excel.PNG\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/105859/2b495226-d31d-a525-d6bd-9ffe48bb5f35.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F105859%2F2b495226-d31d-a525-d6bd-9ffe48bb5f35.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=d813854ceb9c24d188a02979f27da4ee 1x\" loading=\"lazy\"></a></p>\n\n<p>今回特に重要なのはレスポンスヘッダの設定でしょうか。content-typeに指定した<code>application/vnd.openxmlformats-officedocument.spreadsheetml.sheet</code>は正直なところあまり見かけないものですし、そもそも<code>content-disposition</code>という属性自体が個人的にはなじみが薄く、はまったポイントでした。</p>\n\n<div class=\"code-frame\" data-lang=\"java\"><div class=\"highlight\"><pre><code><span class=\"c1\">// レスポンスヘッダを設定する。</span>\n<span class=\"n\">response</span><span class=\"o\">.</span><span class=\"na\">setContentType</span><span class=\"o\">(</span><span class=\"s\">\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"</span><span class=\"o\">);</span>\n<span class=\"n\">response</span><span class=\"o\">.</span><span class=\"na\">setHeader</span><span class=\"o\">(</span><span class=\"s\">\"content-disposition\"</span><span class=\"o\">,</span> <span class=\"nc\">String</span><span class=\"o\">.</span><span class=\"na\">format</span><span class=\"o\">(</span><span class=\"s\">\"attachment; filename=\\\"%s\\\"\"</span><span class=\"o\">,</span> <span class=\"n\">filename</span><span class=\"o\">));</span>\n<span class=\"n\">response</span><span class=\"o\">.</span><span class=\"na\">setCharacterEncoding</span><span class=\"o\">(</span><span class=\"s\">\"UTF-8\"</span><span class=\"o\">);</span>\n</code></pre></div></div>\n","body":"エクセルがダウンロードできるサーブレットを作成する機会があり、なかなかにはまったので、そのサンプルを残しておきたいと思います。なおJavaからエクセルを操作するにあたっては[Apache POI](https://poi.apache.org/)を利用していますが、その導入方法や使用方法については省略しています。\n\nまずはServletクラスを以下のように作成します。\n\n```java\npackage servlet;\n\nimport java.io.IOException;\nimport java.io.OutputStream;\nimport java.io.UnsupportedEncodingException;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\n\nimport javax.servlet.ServletException;\nimport javax.servlet.annotation.WebServlet;\nimport javax.servlet.http.HttpServlet;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\n\nimport org.apache.poi.ss.usermodel.Sheet;\nimport org.apache.poi.ss.usermodel.Workbook;\nimport org.apache.poi.xssf.usermodel.XSSFWorkbook;\n\n/**\n * エクセルをダウンロードするサーブレット。\n * @author nekoTheShadow\n *\n */\n@WebServlet(\"/download\")\npublic class ExcelDownloadServlet extends HttpServlet {\n\n\t/**\n\t * ダウンロードページを表示する。\n\t */\n\tprotected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n\t\trequest.getRequestDispatcher(\"/WEB-INF/jsp/download.jsp\").forward(request, response);\n\t}\n\n\t/**\n\t * POSTされたフォームデータに基づきエクセルを生成し、ダウンロードさせる。\n\t * @throws UnsupportedEncodingException\n\t */\n\tprotected void doPost(HttpServletRequest request, HttpServletResponse response) throws UnsupportedEncodingException {\n\n\t\t// リクエストの文字コードをUTF-8に変換する。\n\t\trequest.setCharacterEncoding(\"UTF-8\");\n\n\t\t// リクエストクエリを取得する。\n\t\tString param1 = (String) request.getParameter(\"param1\");\n\t\tString param2 = (String) request.getParameter(\"param2\");\n\t\tString param3 = (String) request.getParameter(\"param3\");\n\n\t\t// ファイル名を生成する: ファイル名はダウンロード日付とする。\n\t\tSimpleDateFormat simpleDataFormat = new SimpleDateFormat(\"yyyy-MM-dd\");\n\t\tString filename = simpleDataFormat.format(new Date()) + \".xlsx\";\n\n\t\t// レスポンスヘッダを設定する。\n\t\tresponse.setContentType(\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\");\n\t\tresponse.setHeader(\"content-disposition\", String.format(\"attachment; filename=\\\"%s\\\"\", filename));\n\t\tresponse.setCharacterEncoding(\"UTF-8\");\n\n\t\t// ワークブックとバイトストリーム(レスポンス)を生成する。\n\t\t// このふたつはcloseが必ず必要 => try-with-resource文を活用する、\n\t\ttry (Workbook workbook = new XSSFWorkbook();\n\t\t\t OutputStream outputStream = response.getOutputStream()) {\n\n\t\t\t// シートを生成する: 実際は複雑なロジックを用いるが、今回はサンプルなのでシンプルなものにとどめておく。\n\t\t\tSheet sheet = workbook.createSheet();\n\t\t\tsheet.createRow(1).createCell(1).setCellValue(param1);\n\t\t\tsheet.createRow(2).createCell(1).setCellValue(param2);\n\t\t\tsheet.createRow(3).createCell(1).setCellValue(param3);\n\n\t\t\t// ワークブックをレスポンスに出力する。\n\t\t\tworkbook.write(outputStream);\n\t\t} catch (IOException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\n\t}\n\n\n}\n\n```\n\n次に`download`にアクセスした際に表示される`download.jsp`は次の通りです。これは`/WEB-INF/jsp`ディレクトリの直下に配置します。\n\n```jsp\n<%@ page language=\"java\" contentType=\"text/html; charset=UTF-8\" pageEncoding=\"UTF-8\"%>\n\n<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"UTF-8\">\n</head>\n<body>\n\t<h1>Excel Download</h1>\n\t<form method=\"post\" action=\"/excel/download\">\n\t\t<p><label>パラメタ1:</label><input type=\"text\" name=\"param1\" /></p>\n\t\t<p><label>パラメタ2:</label><input type=\"text\" name=\"param2\" /></p>\n\t\t<p><label>パラメタ3:</label><input type=\"text\" name=\"param3\" /></p>\n\n\t\t<p><input type=\"submit\" value=\"Download Excel\" /></p>\n\t</form>\n</body>\n</html>\n```\n\n必要なファイルを準備した後はデプロイし、`/download`にアクセスすると次のようなページが現れるはずです。\n\n![init.PNG](https://qiita-image-store.s3.amazonaws.com/0/105859/94d45afa-81f9-f0dd-af0b-deb120bf4ef2.png)\n\nあとはパラメタを入力して`Download Excel`を押下すると、タイトルが日付となったエクセルファイルがダウンロードされます。\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/105859/4c89671e-d451-bc6b-e44e-4c3651e492b4.png)\n\nそして実際にダウンロードしたエクセルファイルを開いてみると、とりわけ壊れたりなどせず、ちゃんとエクセルファイルが作られていることがわかります。\n\n![excel.PNG](https://qiita-image-store.s3.amazonaws.com/0/105859/2b495226-d31d-a525-d6bd-9ffe48bb5f35.png)\n\n今回特に重要なのはレスポンスヘッダの設定でしょうか。content-typeに指定した`application/vnd.openxmlformats-officedocument.spreadsheetml.sheet`は正直なところあまり見かけないものですし、そもそも`content-disposition`という属性自体が個人的にはなじみが薄く、はまったポイントでした。\n\n```java\n// レスポンスヘッダを設定する。\nresponse.setContentType(\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\");\nresponse.setHeader(\"content-disposition\", String.format(\"attachment; filename=\\\"%s\\\"\", filename));\nresponse.setCharacterEncoding(\"UTF-8\");\n```\n\n","coediting":false,"comments_count":0,"created_at":"2016-12-25T22:36:13+09:00","group":null,"id":"7f3d32be19aae3517a1c","likes_count":12,"private":false,"reactions_count":0,"stocks_count":11,"tags":[{"name":"Java","versions":[]},{"name":"POI","versions":[]},{"name":"servlet","versions":[]}],"title":"エクセルをダウンロードするサーブレットのサンプル。","updated_at":"2017-01-04T18:07:26+09:00","url":"https://qiita.com/neko_the_shadow/items/7f3d32be19aae3517a1c","user":{"description":"IT業界の片隅でひっそり生きるシステムエンジニアです(´・ω・｀)","facebook_id":"","followees_count":0,"followers_count":36,"github_login_name":null,"id":"neko_the_shadow","items_count":204,"linkedin_id":"","location":"神奈川県川崎市","name":"","organization":"","permanent_id":105859,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/105859/profile-images/1473709753","team_only":false,"twitter_screen_name":"neko_the_shadow","website_url":"https://nekotheshadow.github.io/"},"page_views_count":24455,"team_membership":null}