{"rendered_body":"<p>もとねた: <a href=\"https://qiita.com/tbpgr/items/5765ff5bcb418ae6c30e\" id=\"reference-583d1b05131d275f6524\">ずんだのMARQUEE問題</a></p>\n\n<p>この程度の問題だと、正規表現や文字列置換などを利用して、解くことを考えるのが一般的だと思います。\"もとねた\"でもそのような解き方を採用していますが、せっかくなので別の切り口を考えてみたい。そこで、以下では<code>&lt;h1&gt;test&lt;/h1&gt;</code>というような文字列をxmlの1要素とみなし、C#に標準で用意されているXML読み込み用のライブラリを利用して、解答を試みています。</p>\n\n<div class=\"code-frame\" data-lang=\"csharp\"><div class=\"highlight\"><pre><code><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Linq</span><span class=\"p\">;</span>\n\n<span class=\"k\">using</span> <span class=\"nn\">System.Xml.Linq</span><span class=\"p\">;</span>\n\n<span class=\"k\">namespace</span> <span class=\"nn\">Zunda</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">class</span> <span class=\"nc\">Program</span>\n    <span class=\"p\">{</span>\n        <span class=\"k\">static</span> <span class=\"k\">void</span> <span class=\"nf\">Main</span><span class=\"p\">(</span><span class=\"kt\">string</span><span class=\"p\">[]</span> <span class=\"n\">args</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n            <span class=\"kt\">var</span> <span class=\"n\">xml</span> <span class=\"p\">=</span> <span class=\"s\">@\"\n                &lt;h1&gt;test&lt;/h1&gt;\n                &lt;h2&gt;test&lt;/h2&gt;\n                &lt;h3&gt;test&lt;/h3&gt;\n                &lt;div&gt;div test1&lt;/div&gt;\n                &lt;div&gt;div test2&lt;/div&gt;\n                &lt;div&gt;div test3&lt;/div&gt;\n            \"</span><span class=\"p\">;</span>\n\n            <span class=\"kt\">var</span> <span class=\"n\">elements</span> <span class=\"p\">=</span> <span class=\"n\">xml</span><span class=\"p\">.</span><span class=\"nf\">Split</span><span class=\"p\">(</span><span class=\"k\">new</span> <span class=\"kt\">string</span><span class=\"p\">[]</span> <span class=\"p\">{</span> <span class=\"n\">System</span><span class=\"p\">.</span><span class=\"n\">Environment</span><span class=\"p\">.</span><span class=\"n\">NewLine</span> <span class=\"p\">},</span> <span class=\"n\">StringSplitOptions</span><span class=\"p\">.</span><span class=\"n\">RemoveEmptyEntries</span><span class=\"p\">)</span>\n                              <span class=\"p\">.</span><span class=\"nf\">Where</span><span class=\"p\">(</span><span class=\"n\">line</span> <span class=\"p\">=&gt;</span> <span class=\"p\">!</span><span class=\"kt\">string</span><span class=\"p\">.</span><span class=\"nf\">IsNullOrWhiteSpace</span><span class=\"p\">(</span><span class=\"n\">line</span><span class=\"p\">))</span>\n                              <span class=\"p\">.</span><span class=\"nf\">Select</span><span class=\"p\">(</span><span class=\"n\">line</span> <span class=\"p\">=&gt;</span>\n                              <span class=\"p\">{</span>\n                                  <span class=\"kt\">var</span> <span class=\"n\">element</span> <span class=\"p\">=</span> <span class=\"n\">XElement</span><span class=\"p\">.</span><span class=\"nf\">Parse</span><span class=\"p\">(</span><span class=\"n\">line</span><span class=\"p\">);</span>\n                                  <span class=\"kt\">var</span> <span class=\"n\">name</span> <span class=\"p\">=</span> <span class=\"n\">element</span><span class=\"p\">.</span><span class=\"n\">Name</span><span class=\"p\">.</span><span class=\"n\">LocalName</span><span class=\"p\">;</span>\n                                  <span class=\"k\">return</span> <span class=\"n\">name</span><span class=\"p\">.</span><span class=\"nf\">StartsWith</span><span class=\"p\">(</span><span class=\"s\">\"h\"</span><span class=\"p\">)</span> <span class=\"p\">?</span> <span class=\"k\">new</span> <span class=\"nf\">XElement</span><span class=\"p\">(</span><span class=\"s\">\"marquee\"</span><span class=\"p\">,</span> <span class=\"n\">element</span><span class=\"p\">.</span><span class=\"n\">Value</span><span class=\"p\">,</span> <span class=\"k\">new</span> <span class=\"nf\">XAttribute</span><span class=\"p\">(</span><span class=\"s\">\"scrollamount\"</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">.</span><span class=\"nf\">Substring</span><span class=\"p\">(</span><span class=\"m\">1</span><span class=\"p\">)))</span> <span class=\"p\">:</span> <span class=\"n\">element</span><span class=\"p\">;</span>\n                              <span class=\"p\">});</span>\n\n            <span class=\"k\">foreach</span> <span class=\"p\">(</span><span class=\"kt\">var</span> <span class=\"n\">element</span> <span class=\"k\">in</span> <span class=\"n\">elements</span><span class=\"p\">)</span>\n            <span class=\"p\">{</span>\n                <span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"n\">element</span><span class=\"p\">);</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>   \n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<p>以上の実行結果は次の通りになるはずです。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre><code>&lt;marquee scrollamount=\"1\"&gt;test&lt;/marquee&gt;\n&lt;marquee scrollamount=\"2\"&gt;test&lt;/marquee&gt;\n&lt;marquee scrollamount=\"3\"&gt;test&lt;/marquee&gt;\n&lt;div&gt;div test1&lt;/div&gt;\n&lt;div&gt;div test2&lt;/div&gt;\n&lt;div&gt;div test3&lt;/div&gt;\n</code></pre></div></div>\n","body":"もとねた: [ずんだのMARQUEE問題](https://qiita.com/tbpgr/items/5765ff5bcb418ae6c30e)\n\nこの程度の問題だと、正規表現や文字列置換などを利用して、解くことを考えるのが一般的だと思います。\"もとねた\"でもそのような解き方を採用していますが、せっかくなので別の切り口を考えてみたい。そこで、以下では`<h1>test</h1>`というような文字列をxmlの1要素とみなし、C#に標準で用意されているXML読み込み用のライブラリを利用して、解答を試みています。\n\n```csharp\nusing System;\nusing System.Linq;\n\nusing System.Xml.Linq;\n\nnamespace Zunda\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            var xml = @\"\n                <h1>test</h1>\n                <h2>test</h2>\n                <h3>test</h3>\n                <div>div test1</div>\n                <div>div test2</div>\n                <div>div test3</div>\n            \";\n\n            var elements = xml.Split(new string[] { System.Environment.NewLine }, StringSplitOptions.RemoveEmptyEntries)\n                              .Where(line => !string.IsNullOrWhiteSpace(line))\n                              .Select(line =>\n                              {\n                                  var element = XElement.Parse(line);\n                                  var name = element.Name.LocalName;\n                                  return name.StartsWith(\"h\") ? new XElement(\"marquee\", element.Value, new XAttribute(\"scrollamount\", name.Substring(1))) : element;\n                              });\n\n            foreach (var element in elements)\n            {\n                Console.WriteLine(element);\n            }\n        }   \n    }\n}\n```\n\n以上の実行結果は次の通りになるはずです。\n\n```\n<marquee scrollamount=\"1\">test</marquee>\n<marquee scrollamount=\"2\">test</marquee>\n<marquee scrollamount=\"3\">test</marquee>\n<div>div test1</div>\n<div>div test2</div>\n<div>div test3</div>\n```\n","coediting":false,"comments_count":0,"created_at":"2018-11-04T23:40:49+09:00","group":null,"id":"8d7c77587519d357e1dd","likes_count":2,"private":false,"reactions_count":0,"stocks_count":0,"tags":[{"name":"C#","versions":[]}],"title":"ずんだのMARQUEE問題 C#編","updated_at":"2018-11-04T23:40:49+09:00","url":"https://qiita.com/neko_the_shadow/items/8d7c77587519d357e1dd","user":{"description":"IT業界の片隅でひっそり生きるシステムエンジニアです(´・ω・｀)","facebook_id":"","followees_count":0,"followers_count":36,"github_login_name":null,"id":"neko_the_shadow","items_count":214,"linkedin_id":"","location":"神奈川県川崎市","name":"","organization":"","permanent_id":105859,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/105859/profile-images/1473709753","team_only":false,"twitter_screen_name":"neko_the_shadow","website_url":"https://github.com/nekoTheShadow"},"page_views_count":1019,"team_membership":null,"organization_url_name":null}